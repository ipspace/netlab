[WARNING]: Could not match supplied host pattern, ignoring: unprovisioned
[WARNING]: Found variable using reserved name: hosts

PLAY [Deploy initial device configuration] *************************************

TASK [Set variables that cannot be set with VARS] ******************************
ok: [dut]
ok: [r1]
ok: [r2]
ok: [r3]
ok: [r4]

TASK [Find device readiness script] ********************************************
ok: [dut]
ok: [r1]
ok: [r2]
ok: [r3]
ok: [r4]

TASK [Wait for device to become ready] *****************************************
skipping: [dut]
included: /home/pipi/net101/tools/netsim/ansible/tasks/readiness-check/eos-clab.yml for r1, r2, r3, r4

TASK [Wait for cEOS SSH daemon to start] ***************************************
ok: [r3]
ok: [r4]
ok: [r1]
ok: [r2]

TASK [Normalize config on bridge-like devices] *********************************
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-module.yml for dut, r1, r2, r3, r4

TASK [Figure out whether to deploy the module normalize on current device] *****
ok: [dut]
ok: [r1]
ok: [r2]
ok: [r3]
ok: [r4]

TASK [Find configuration template for normalize] *******************************
ok: [dut]
ok: [r1]
ok: [r2]
ok: [r3]
ok: [r4]

TASK [fail] ********************************************************************
skipping: [dut]
skipping: [r1]
skipping: [r2]
skipping: [r3]
skipping: [r4]

TASK [Find configuration deployment deploy_script for normalize] ***************
ok: [dut]
ok: [r1]
ok: [r2]
ok: [r3]
ok: [r4]

TASK [Print deployed configuration when running in verbose mode] ***************
skipping: [dut]
ok: [r2] => 
  msg: |-
    normalize configuration for r2
    =========================================
    !
    interface Ethernet1
     shutdown
     mac-address 52dc.cafe.0c01
ok: [r3] => 
  msg: |-
    normalize configuration for r3
    =========================================
    !
    interface Ethernet1
     shutdown
     mac-address 52dc.cafe.1701
ok: [r1] => 
  msg: |-
    normalize configuration for r1
    =========================================
    !
    interface Ethernet1
     shutdown
     mac-address 52dc.cafe.0b01
ok: [r4] => 
  msg: |-
    normalize configuration for r4
    =========================================
    !
    interface Ethernet1
     shutdown
     mac-address 52dc.cafe.1801

TASK [Deploy normalize configuration] ******************************************
skipping: [dut]
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-config/eos.yml for r1, r2, r3, r4

TASK [eos_config: deploying normalize from /home/pipi/net101/tools/netsim/ansible/templates/normalize/eos.j2] ***
[WARNING]: To ensure idempotency and correct diff the input configuration lines
should be similar to how they appear if present in the running configuration on
device including the indentation
changed: [r3]
changed: [r1]
changed: [r4]
changed: [r2]

TASK [Deploy initial configuration] ********************************************
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-module.yml for dut, r1, r2, r3, r4

TASK [Figure out whether to deploy the module initial on current device] *******
ok: [dut]
ok: [r1]
ok: [r2]
ok: [r3]
ok: [r4]

TASK [Find configuration template for initial] *********************************
ok: [dut]
ok: [r1]
ok: [r2]
ok: [r3]
ok: [r4]

TASK [fail] ********************************************************************
skipping: [dut]
skipping: [r1]
skipping: [r2]
skipping: [r3]
skipping: [r4]

TASK [Find configuration deployment deploy_script for initial] *****************
ok: [dut]
ok: [r1]
ok: [r2]
ok: [r3]
ok: [r4]

TASK [Print deployed configuration when running in verbose mode] ***************
ok: [dut] => 
  msg: |-
    initial configuration for dut
    =========================================
  
    updates:
  
    - path: /interface[name=system0]/subinterface[index=0]
      value:
       description: "No description"
       ipv4:
        admin-state: enable
        address:
        - ip-prefix: "10.0.0.1/32"
       ipv6:
        admin-state: enable
        address:
        - ip-prefix: "2001:db8:1:1::1/64"
          type: "global-unicast"
  
    - path: /interface[name=ethernet-1/1]
      value:
       description: "dut ~ r1"
       subinterface:
        index: 0
        description: "dut ~ r1"
  
    - path: /interface[name=ethernet-1/1]/subinterface[index=0]
      value:
       description: "dut ~ r1"
       ipv4:
        admin-state: enable
        address:
        - ip-prefix: "10.1.0.1/30"
          primary: [null]
  
    - path: /interface[name=ethernet-1/2]
      value:
       description: "dut ~ r2"
       subinterface:
        index: 0
        description: "dut ~ r2"
  
    - path: /interface[name=ethernet-1/2]/subinterface[index=0]
      value:
       description: "dut ~ r2"
       ipv4:
        admin-state: enable
        address:
        - ip-prefix: "10.1.0.5/30"
          primary: [null]
  
    - path: /interface[name=ethernet-1/3]
      value:
       description: "dut ~ r3"
       subinterface:
        index: 0
        description: "dut ~ r3"
  
    - path: /interface[name=ethernet-1/3]/subinterface[index=0]
      value:
       description: "dut ~ r3"
       ipv4:
        admin-state: enable
        address:
        - ip-prefix: "10.1.0.9/30"
          primary: [null]
  
    - path: /interface[name=ethernet-1/4]
      value:
       description: "dut ~ r4"
       subinterface:
        index: 0
        description: "dut ~ r4"
  
    - path: /interface[name=ethernet-1/4]/subinterface[index=0]
      value:
       description: "dut ~ r4"
       ipv4:
        admin-state: enable
        address:
        - ip-prefix: "10.1.0.13/30"
          primary: [null]
  
  
  
    - path: /network-instance[name=default]
      value:
       type: default
       interface:
       - name: system0.0
  
  
  
  
    # TODO: vdata.rd, vdata.import/export, vdata.af
    - path: /network-instance[name=blue]
      value:
       type: ip-vrf
       interface:
       - name: ethernet-1/3.0
    - path: /network-instance[name=blue]
      value:
       type: ip-vrf
       interface:
       - name: ethernet-1/4.0
  
  
  
    # TODO: vdata.rd, vdata.import/export, vdata.af
    - path: /network-instance[name=red]
      value:
       type: ip-vrf
       interface:
       - name: ethernet-1/1.0
    - path: /network-instance[name=red]
      value:
       type: ip-vrf
       interface:
       - name: ethernet-1/2.0
ok: [r1] => 
  msg: |-
    initial configuration for r1
    =========================================
    hostname r1
    !
    logging monitor debugging
    aaa authorization exec default local
    !
    lldp run
    ip routing
    ipv6 unicast-routing
    !
    !
    ip host dut 10.0.0.1
    ip host dut-blue 10.1.0.9 10.1.0.13
    ip host dut-red 10.1.0.1 10.1.0.5
    ip host r2 10.0.0.12 10.1.0.6
    ip host r3 10.0.0.23 10.1.0.10
    ip host r4 10.0.0.24 10.1.0.14
    ipv6 host dut 2001:db8:1:1::1
    ipv6 host r2 2001:db8:1:c::1
    ipv6 host r3 2001:db8:1:17::1
    ipv6 host r4 2001:db8:1:18::1
    !
    interface Management0
     no lldp transmit
     no lldp receive
    !
    interface Loopback0
     ip address 10.0.0.11/32
     ipv6 nd ra interval 5
     ipv6 address 2001:db8:1:b::1/64
    !
    interface Ethernet1
     no switchport
     platform tfa phy control-frame disabled
     description r1 -> dut [external]
     ip address 10.1.0.2/30
    !
     mac-address 52dc.cafe.0b01
     no shutdown
    !
ok: [r2] => 
  msg: |-
    initial configuration for r2
    =========================================
    hostname r2
    !
    logging monitor debugging
    aaa authorization exec default local
    !
    lldp run
    ip routing
    ipv6 unicast-routing
    !
    !
    ip host dut 10.0.0.1
    ip host dut-blue 10.1.0.9 10.1.0.13
    ip host dut-red 10.1.0.1 10.1.0.5
    ip host r1 10.0.0.11 10.1.0.2
    ip host r3 10.0.0.23 10.1.0.10
    ip host r4 10.0.0.24 10.1.0.14
    ipv6 host dut 2001:db8:1:1::1
    ipv6 host r1 2001:db8:1:b::1
    ipv6 host r3 2001:db8:1:17::1
    ipv6 host r4 2001:db8:1:18::1
    !
    interface Management0
     no lldp transmit
     no lldp receive
    !
    interface Loopback0
     ip address 10.0.0.12/32
     ipv6 nd ra interval 5
     ipv6 address 2001:db8:1:c::1/64
    !
    interface Ethernet1
     no switchport
     platform tfa phy control-frame disabled
     description r2 -> dut [external]
     ip address 10.1.0.6/30
    !
     mac-address 52dc.cafe.0c01
     no shutdown
    !
ok: [r4] => 
  msg: |-
    initial configuration for r4
    =========================================
    hostname r4
    !
    logging monitor debugging
    aaa authorization exec default local
    !
    lldp run
    ip routing
    ipv6 unicast-routing
    !
    !
    ip host dut 10.0.0.1
    ip host dut-blue 10.1.0.9 10.1.0.13
    ip host dut-red 10.1.0.1 10.1.0.5
    ip host r1 10.0.0.11 10.1.0.2
    ip host r2 10.0.0.12 10.1.0.6
    ip host r3 10.0.0.23 10.1.0.10
    ipv6 host dut 2001:db8:1:1::1
    ipv6 host r1 2001:db8:1:b::1
    ipv6 host r2 2001:db8:1:c::1
    ipv6 host r3 2001:db8:1:17::1
    !
    interface Management0
     no lldp transmit
     no lldp receive
    !
    interface Loopback0
     ip address 10.0.0.24/32
     ipv6 nd ra interval 5
     ipv6 address 2001:db8:1:18::1/64
    !
    interface Ethernet1
     no switchport
     platform tfa phy control-frame disabled
     description r4 -> dut [external]
     ip address 10.1.0.14/30
    !
     mac-address 52dc.cafe.1801
     no shutdown
    !
ok: [r3] => 
  msg: |-
    initial configuration for r3
    =========================================
    hostname r3
    !
    logging monitor debugging
    aaa authorization exec default local
    !
    lldp run
    ip routing
    ipv6 unicast-routing
    !
    !
    ip host dut 10.0.0.1
    ip host dut-blue 10.1.0.9 10.1.0.13
    ip host dut-red 10.1.0.1 10.1.0.5
    ip host r1 10.0.0.11 10.1.0.2
    ip host r2 10.0.0.12 10.1.0.6
    ip host r4 10.0.0.24 10.1.0.14
    ipv6 host dut 2001:db8:1:1::1
    ipv6 host r1 2001:db8:1:b::1
    ipv6 host r2 2001:db8:1:c::1
    ipv6 host r4 2001:db8:1:18::1
    !
    interface Management0
     no lldp transmit
     no lldp receive
    !
    interface Loopback0
     ip address 10.0.0.23/32
     ipv6 nd ra interval 5
     ipv6 address 2001:db8:1:17::1/64
    !
    interface Ethernet1
     no switchport
     platform tfa phy control-frame disabled
     description r3 -> dut [external]
     ip address 10.1.0.10/30
    !
     mac-address 52dc.cafe.1701
     no shutdown
    !

TASK [Deploy initial configuration] ********************************************
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-config/srlinux.yml for dut
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-config/eos.yml for r1, r2, r3, r4

TASK [Generate JSON-RPC YAML configuration] ************************************
ok: [dut]

TASK [Update SRL initial node configuration (template=/home/pipi/net101/tools/netsim/ansible/templates/initial/srlinux.j2)] ***
changed: [dut]

TASK [debug] *******************************************************************
skipping: [dut]

TASK [eos_config: deploying initial from /home/pipi/net101/tools/netsim/ansible/templates/initial/eos.j2] ***
changed: [r1]
changed: [r4]
changed: [r2]
changed: [r3]

PLAY [Deploy module-specific configurations] ***********************************

TASK [Set variables that cannot be set with VARS] ******************************
ok: [dut]
ok: [r1]
ok: [r2]
ok: [r3]
ok: [r4]

TASK [Deploy individual configuration modules] *********************************
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-module.yml for dut, r1, r2, r3, r4 => (item=bgp)
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-module.yml for dut, r1, r2, r3, r4 => (item=vrf)

TASK [Figure out whether to deploy the module bgp on current device] ***********
ok: [dut]
ok: [r3]
ok: [r1]
ok: [r4]
ok: [r2]

TASK [Find configuration template for bgp] *************************************
ok: [dut]
ok: [r2]
ok: [r4]
ok: [r1]
ok: [r3]

TASK [fail] ********************************************************************
skipping: [dut]
skipping: [r1]
skipping: [r2]
skipping: [r3]
skipping: [r4]

TASK [Find configuration deployment deploy_script for bgp] *********************
ok: [dut]
ok: [r4]
ok: [r2]
ok: [r1]
ok: [r3]

TASK [Print deployed configuration when running in verbose mode] ***************
ok: [dut] => 
  msg: |-
    bgp configuration for dut
    =========================================
    updates:
  
    - path: /routing-policy/policy[name=accept_all]
      value:
        default-action:
          policy-result: accept
  
    - path: /routing-policy/community-set[name=ibgp-mark]
      value:
        member: [ "65536:0:65536" ]
  
    - path: /routing-policy/policy[name=ibgp-mark]
      value:
        default-action:
          policy-result: reject
        statement:
        - name: mark-ibgp-routes
          action:
            bgp:
              communities:
                add: ibgp-mark
            policy-result: accept
  
    - path: /routing-policy/prefix-set[name=default_bgp_advertise]
      value:
        prefix: [] # Make sure it exists
  
    - path: /routing-policy/policy[name=default_bgp_export]
      value:
        default-action:
          policy-result: reject
        statement:
        - name: prefixes
          match:
           prefix:
            prefix-set: default_bgp_advertise
          action:
            policy-result: next-policy
        - name: bgp
          match:
            protocol: bgp
          action:
            policy-result: next-policy
            bgp:
              communities:
                remove:
                  ibgp-mark
  
  
    - path: /network-instance[name=default]/protocols/bgp
      value:
        admin-state: enable
        autonomous-system: 65000
        router-id: 10.0.0.1
        ebgp-default-policy:
          export-reject-all: False
          import-reject-all: False
  
        afi-safi:
        - afi-safi-name: ipv4-unicast
          admin-state: enable
        afi-safi:
        - afi-safi-name: ipv6-unicast
          admin-state: enable
  
    - path: /routing-policy/prefix-set[name=default_bgp_advertise]
      value:
        prefix:
        - ip-prefix: 10.0.0.1/32
          mask-length-range: exact
  
  
  
    - path: /routing-policy/prefix-set[name=default_bgp_advertise]
      value:
        prefix:
        - ip-prefix: 2001:db8:1:1::/64
          mask-length-range: exact
ok: [r1] => 
  msg: |-
    bgp configuration for r1
    =========================================
    !
    !
    router bgp 65101
      bgp advertise-inactive
      bgp log-neighbor-changes
      no bgp default ipv4-unicast
      no bgp default ipv6-unicast
      router-id 10.0.0.11
    !
      neighbor 10.1.0.1 remote-as 65000
      neighbor 10.1.0.1 description dut
      neighbor 10.1.0.1 send-community standard large
    !
    !
     address-family ipv4
  
      network 10.0.0.11/32
    !
    !
    !
      neighbor 10.1.0.1 activate
    !
     address-family ipv6
  
      network 2001:db8:1:b::/64
    !
    !
    !
    !
ok: [r3] => 
  msg: |-
    bgp configuration for r3
    =========================================
    !
    !
    router bgp 65103
      bgp advertise-inactive
      bgp log-neighbor-changes
      no bgp default ipv4-unicast
      no bgp default ipv6-unicast
      router-id 10.0.0.23
    !
      neighbor 10.1.0.9 remote-as 65000
      neighbor 10.1.0.9 description dut
      neighbor 10.1.0.9 send-community standard large
    !
    !
     address-family ipv4
  
      network 10.0.0.23/32
    !
    !
    !
      neighbor 10.1.0.9 activate
    !
     address-family ipv6
  
      network 2001:db8:1:17::/64
    !
    !
    !
    !
ok: [r4] => 
  msg: |-
    bgp configuration for r4
    =========================================
    !
    !
    router bgp 65104
      bgp advertise-inactive
      bgp log-neighbor-changes
      no bgp default ipv4-unicast
      no bgp default ipv6-unicast
      router-id 10.0.0.24
    !
      neighbor 10.1.0.13 remote-as 65000
      neighbor 10.1.0.13 description dut
      neighbor 10.1.0.13 send-community standard large
    !
    !
     address-family ipv4
  
      network 10.0.0.24/32
    !
    !
    !
      neighbor 10.1.0.13 activate
    !
     address-family ipv6
  
      network 2001:db8:1:18::/64
    !
    !
    !
    !
ok: [r2] => 
  msg: |-
    bgp configuration for r2
    =========================================
    !
    !
    router bgp 65102
      bgp advertise-inactive
      bgp log-neighbor-changes
      no bgp default ipv4-unicast
      no bgp default ipv6-unicast
      router-id 10.0.0.12
    !
      neighbor 10.1.0.5 remote-as 65000
      neighbor 10.1.0.5 description dut
      neighbor 10.1.0.5 send-community standard large
    !
    !
     address-family ipv4
  
      network 10.0.0.12/32
    !
    !
    !
      neighbor 10.1.0.5 activate
    !
     address-family ipv6
  
      network 2001:db8:1:c::/64
    !
    !
    !
    !

TASK [Deploy bgp configuration] ************************************************
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-config/srlinux.yml for dut
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-config/eos.yml for r1, r2, r3, r4

TASK [Generate JSON-RPC YAML configuration] ************************************
ok: [dut]

TASK [Update SRL bgp node configuration (template=/home/pipi/net101/tools/netsim/ansible/templates/bgp/srlinux.j2)] ***
changed: [dut]

TASK [debug] *******************************************************************
skipping: [dut]

TASK [eos_config: deploying bgp from /home/pipi/net101/tools/netsim/ansible/templates/bgp/eos.j2] ***
changed: [r1]
changed: [r4]
changed: [r3]
changed: [r2]

TASK [Figure out whether to deploy the module vrf on current device] ***********
ok: [dut]
ok: [r1]
ok: [r4]
ok: [r2]
ok: [r3]

TASK [Find configuration template for vrf] *************************************
skipping: [r1]
ok: [dut]
skipping: [r2]
skipping: [r3]
skipping: [r4]

TASK [fail] ********************************************************************
skipping: [dut]
skipping: [r1]
skipping: [r2]
skipping: [r3]
skipping: [r4]

TASK [Find configuration deployment deploy_script for vrf] *********************
skipping: [r1]
skipping: [r2]
skipping: [r3]
ok: [dut]
skipping: [r4]

TASK [Print deployed configuration when running in verbose mode] ***************
skipping: [r1]
skipping: [r2]
skipping: [r3]
skipping: [r4]
ok: [dut] => 
  msg: |-
    vrf configuration for dut
    =========================================
  
    updates:
  
    - path: /network-instance[name=blue]
      value:
       type: ip-vrf
  
  
    - path: /routing-policy/community-set[name=C65000_2]
      value:
       member:
       - "target:65000:2" # Single member, else matching is AND
  
    - path: /routing-policy/community-set[name=blue_export]
      value:
       member:
       - "target:65000:2"
  
  
    - path: /routing-policy/policy[name=blue_bgp_export]
      value:
        default-action:
          policy-result: reject
        statement:
        - name: bgp
          match:
            protocol: bgp
          action:
            policy-result: next-policy
            bgp:
              communities:
                remove:
                  ibgp-mark
        - name: export_local
          match:
            protocol: local
          action:
            policy-result: next-policy
  
  
    - path: /network-instance[name=blue]/protocols/bgp
      value:
        admin-state: enable
        autonomous-system: 65000
        router-id: 10.0.0.1
        ebgp-default-policy:
          export-reject-all: False
          import-reject-all: False
  
        afi-safi:
        - afi-safi-name: ipv4-unicast
          admin-state: enable
  
  
  
  
  
    - path: /network-instance[name=blue]/protocols/bgp/group[group-name=ebgp]
      value:
        admin-state: enable
    # neighbor: {'_src_vrf': 'blue', 'activate': {'ipv4': True}, 'as': 65103, 'ifindex': 3, 'ipv4': '10.1.0.10', 'name': 'r3', 'type': 'ebgp'}
    # ipv4: True
    # ipv6: True
        afi-safi:
        - afi-safi-name: ipv4-unicast
          admin-state: enable
          send-community-type: ['standard', 'large']
  
          import-policy: ['accept_all']
          export-policy: ['blue_bgp_export', 'accept_all']
        - afi-safi-name: ipv6-unicast
          admin-state: disable
          send-community-type: ['standard', 'large']
  
          import-policy: ['accept_all']
          export-policy: ['blue_bgp_export', 'accept_all']
  
        timers:
          connect-retry: 10
          _annotate_connect-retry: "Reduce default 120s to 10s"
          minimum-advertisement-interval: 1
  
  
    - path: /network-instance[name=blue]/protocols/bgp
      value:
        neighbor:
        - peer-address: "10.1.0.10"
          description: r3
          peer-group: ebgp
      # neighbor: {'_src_vrf': 'blue', 'activate': {'ipv4': True}, 'as': 65103, 'ifindex': 3, 'ipv4': '10.1.0.10', 'name': 'r3', 'type': 'ebgp'}
      # ipv4: True
      # ipv6: False
          afi-safi:
          - afi-safi-name: ipv4-unicast
            admin-state: enable
            send-community-type: ['standard', 'large']
  
          - afi-safi-name: ipv6-unicast
            admin-state: disable
  
          peer-as: 65103
  
    - path: /network-instance[name=blue]/protocols/bgp/group[group-name=ebgp]
      value:
        admin-state: enable
    # neighbor: {'_src_vrf': 'blue', 'activate': {'ipv4': True}, 'as': 65104, 'ifindex': 4, 'ipv4': '10.1.0.14', 'name': 'r4', 'type': 'ebgp'}
    # ipv4: True
    # ipv6: True
        afi-safi:
        - afi-safi-name: ipv4-unicast
          admin-state: enable
          send-community-type: ['standard', 'large']
  
          import-policy: ['accept_all']
          export-policy: ['blue_bgp_export', 'accept_all']
        - afi-safi-name: ipv6-unicast
          admin-state: disable
          send-community-type: ['standard', 'large']
  
          import-policy: ['accept_all']
          export-policy: ['blue_bgp_export', 'accept_all']
  
        timers:
          connect-retry: 10
          _annotate_connect-retry: "Reduce default 120s to 10s"
          minimum-advertisement-interval: 1
  
  
    - path: /network-instance[name=blue]/protocols/bgp
      value:
        neighbor:
        - peer-address: "10.1.0.14"
          description: r4
          peer-group: ebgp
      # neighbor: {'_src_vrf': 'blue', 'activate': {'ipv4': True}, 'as': 65104, 'ifindex': 4, 'ipv4': '10.1.0.14', 'name': 'r4', 'type': 'ebgp'}
      # ipv4: True
      # ipv6: False
          afi-safi:
          - afi-safi-name: ipv4-unicast
            admin-state: enable
            send-community-type: ['standard', 'large']
  
          - afi-safi-name: ipv6-unicast
            admin-state: disable
  
          peer-as: 65104
  
  
  
  
    - path: /network-instance[name=blue]/protocols/bgp-vpn
      value:
       bgp-instance:
       - id: 1
         route-distinguisher:
          rd: "65000:2"
  
    - path: /network-instance[name=blue]/inter-instance-policies
      value:
       apply-policy:
        export-policy: "blue_vpn_export"
        import-policy: "blue_vpn_import"
  
    - path: /routing-policy/policy[name=blue_vpn_export]
      value:
       default-action:
        policy-result: "accept"
        bgp:
         communities:
          add: "blue_export"
  
    - path: /routing-policy/policy[name=blue_vpn_import]
      value:
       default-action:
        policy-result: "reject"
       statement:
       - name: 11
         match:
          bgp:
           community-set: "C65000_2"
         action:
          policy-result: "accept"
  
  
    - path: /network-instance[name=red]
      value:
       type: ip-vrf
  
  
    - path: /routing-policy/community-set[name=C65000_1]
      value:
       member:
       - "target:65000:1" # Single member, else matching is AND
  
    - path: /routing-policy/community-set[name=red_export]
      value:
       member:
       - "target:65000:1"
  
  
    - path: /routing-policy/policy[name=red_bgp_export]
      value:
        default-action:
          policy-result: reject
        statement:
        - name: bgp
          match:
            protocol: bgp
          action:
            policy-result: next-policy
            bgp:
              communities:
                remove:
                  ibgp-mark
        - name: export_local
          match:
            protocol: local
          action:
            policy-result: next-policy
  
  
    - path: /network-instance[name=red]/protocols/bgp
      value:
        admin-state: enable
        autonomous-system: 65000
        router-id: 10.0.0.1
        ebgp-default-policy:
          export-reject-all: False
          import-reject-all: False
  
        afi-safi:
        - afi-safi-name: ipv4-unicast
          admin-state: enable
  
  
  
  
  
    - path: /network-instance[name=red]/protocols/bgp/group[group-name=ebgp]
      value:
        admin-state: enable
    # neighbor: {'_src_vrf': 'red', 'activate': {'ipv4': True}, 'as': 65101, 'ifindex': 1, 'ipv4': '10.1.0.2', 'name': 'r1', 'type': 'ebgp'}
    # ipv4: True
    # ipv6: True
        afi-safi:
        - afi-safi-name: ipv4-unicast
          admin-state: enable
          send-community-type: ['standard', 'large']
  
          import-policy: ['accept_all']
          export-policy: ['red_bgp_export', 'accept_all']
        - afi-safi-name: ipv6-unicast
          admin-state: disable
          send-community-type: ['standard', 'large']
  
          import-policy: ['accept_all']
          export-policy: ['red_bgp_export', 'accept_all']
  
        timers:
          connect-retry: 10
          _annotate_connect-retry: "Reduce default 120s to 10s"
          minimum-advertisement-interval: 1
  
  
    - path: /network-instance[name=red]/protocols/bgp
      value:
        neighbor:
        - peer-address: "10.1.0.2"
          description: r1
          peer-group: ebgp
      # neighbor: {'_src_vrf': 'red', 'activate': {'ipv4': True}, 'as': 65101, 'ifindex': 1, 'ipv4': '10.1.0.2', 'name': 'r1', 'type': 'ebgp'}
      # ipv4: True
      # ipv6: False
          afi-safi:
          - afi-safi-name: ipv4-unicast
            admin-state: enable
            send-community-type: ['standard', 'large']
  
          - afi-safi-name: ipv6-unicast
            admin-state: disable
  
          peer-as: 65101
  
    - path: /network-instance[name=red]/protocols/bgp/group[group-name=ebgp]
      value:
        admin-state: enable
    # neighbor: {'_src_vrf': 'red', 'activate': {'ipv4': True}, 'as': 65102, 'ifindex': 2, 'ipv4': '10.1.0.6', 'name': 'r2', 'type': 'ebgp'}
    # ipv4: True
    # ipv6: True
        afi-safi:
        - afi-safi-name: ipv4-unicast
          admin-state: enable
          send-community-type: ['standard', 'large']
  
          import-policy: ['accept_all']
          export-policy: ['red_bgp_export', 'accept_all']
        - afi-safi-name: ipv6-unicast
          admin-state: disable
          send-community-type: ['standard', 'large']
  
          import-policy: ['accept_all']
          export-policy: ['red_bgp_export', 'accept_all']
  
        timers:
          connect-retry: 10
          _annotate_connect-retry: "Reduce default 120s to 10s"
          minimum-advertisement-interval: 1
  
  
    - path: /network-instance[name=red]/protocols/bgp
      value:
        neighbor:
        - peer-address: "10.1.0.6"
          description: r2
          peer-group: ebgp
      # neighbor: {'_src_vrf': 'red', 'activate': {'ipv4': True}, 'as': 65102, 'ifindex': 2, 'ipv4': '10.1.0.6', 'name': 'r2', 'type': 'ebgp'}
      # ipv4: True
      # ipv6: False
          afi-safi:
          - afi-safi-name: ipv4-unicast
            admin-state: enable
            send-community-type: ['standard', 'large']
  
          - afi-safi-name: ipv6-unicast
            admin-state: disable
  
          peer-as: 65102
  
  
  
  
    - path: /network-instance[name=red]/protocols/bgp-vpn
      value:
       bgp-instance:
       - id: 1
         route-distinguisher:
          rd: "65000:1"
  
    - path: /network-instance[name=red]/inter-instance-policies
      value:
       apply-policy:
        export-policy: "red_vpn_export"
        import-policy: "red_vpn_import"
  
    - path: /routing-policy/policy[name=red_vpn_export]
      value:
       default-action:
        policy-result: "accept"
        bgp:
         communities:
          add: "red_export"
  
    - path: /routing-policy/policy[name=red_vpn_import]
      value:
       default-action:
        policy-result: "reject"
       statement:
       - name: 11
         match:
          bgp:
           community-set: "C65000_1"
         action:
          policy-result: "accept"

TASK [Deploy vrf configuration] ************************************************
skipping: [r1]
skipping: [r2]
skipping: [r3]
skipping: [r4]
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-config/srlinux.yml for dut

TASK [Generate JSON-RPC YAML configuration] ************************************
ok: [dut]

TASK [Update SRL vrf node configuration (template=/home/pipi/net101/tools/netsim/ansible/templates/vrf/srlinux.j2)] ***
changed: [dut]

TASK [debug] *******************************************************************
skipping: [dut]

PLAY [Deploy custom deployment templates] **************************************

TASK [Run custom configuration deployment scripts] *****************************
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-custom-config.yml for r1, r2, r3, r4 => (item=bgp-xact)

TASK [Find configuration template] *********************************************
ok: [r2]
ok: [r4]
ok: [r1]
ok: [r3]

TASK [fail] ********************************************************************
skipping: [r1]
skipping: [r2]
skipping: [r3]
skipping: [r4]

TASK [Check is the configuration template is a file] ***************************
ok: [r2 -> localhost]
ok: [r3 -> localhost]
ok: [r4 -> localhost]
ok: [r1 -> localhost]

TASK [fail] ********************************************************************
skipping: [r1]
skipping: [r2]
skipping: [r3]
skipping: [r4]

TASK [Process template /home/pipi/net101/tools/tests/integration/vrf/bgp-xact.j2 for r1] ***
skipping: [r1]
skipping: [r2]
skipping: [r3]
skipping: [r4]

TASK [Find custom configuration deployment script] *****************************
ok: [r1]
ok: [r2]
ok: [r4]
ok: [r3]

TASK [Run the configuration deployment script] *********************************
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-config/eos.yml for r1, r2, r3, r4

TASK [eos_config: deploying bgp-xact from /home/pipi/net101/tools/tests/integration/vrf/bgp-xact.j2] ***
changed: [r3]
changed: [r1]
changed: [r4]
changed: [r2]

PLAY RECAP *********************************************************************
dut                        : ok=31   changed=3    unreachable=0    failed=0    skipped=10   rescued=0    ignored=0   
r1                         : ok=34   changed=4    unreachable=0    failed=0    skipped=11   rescued=0    ignored=0   
r2                         : ok=34   changed=4    unreachable=0    failed=0    skipped=11   rescued=0    ignored=0   
r3                         : ok=34   changed=4    unreachable=0    failed=0    skipped=11   rescued=0    ignored=0   
r4                         : ok=34   changed=4    unreachable=0    failed=0    skipped=11   rescued=0    ignored=0   



The device under test has two VRFs with two interfaces in each VRF.
Routers are attached to those interfaces and run BGP with device under test.
Assuming the multi-vrf test case succeeded, this one adds BGP routing with
CE routers.

* r1 and r2 should be able to ping each other
* r3 and r4 should be able to ping each other
* r1 should not be able to reach r3

The test also checks whether DUT unnecessarily enables IPv6 AF over IPv4
EBGP sessions

