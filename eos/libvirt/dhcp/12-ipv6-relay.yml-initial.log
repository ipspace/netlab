[WARNING]: Could not match supplied host pattern, ignoring: unprovisioned
[WARNING]: Found variable using reserved name: hosts

PLAY [Deploy initial device configuration] *************************************

TASK [Set variables that cannot be set with VARS] ******************************
ok: [c1]
ok: [s1]
ok: [c2]
ok: [s2]
ok: [c3]
ok: [c4]
ok: [relay]

TASK [Find device readiness script] ********************************************
ok: [s1]
ok: [s2]
ok: [c1]
ok: [c2]
ok: [c3]
ok: [c4]
ok: [relay]

TASK [Wait for device to become ready] *****************************************
skipping: [s1]
skipping: [s2]
skipping: [relay]
included: /home/pipi/net101/tools/netsim/ansible/tasks/readiness-check/iol-clab.yml for c1, c2, c3, c4

TASK [Check if 'sshpass' is installed] *****************************************
ok: [c1 -> localhost]

TASK [Check for 'timeout' command] *********************************************
ok: [c1 -> localhost]
ok: [c2 -> localhost]
ok: [c4 -> localhost]
ok: [c3 -> localhost]

TASK [Execute local ssh command to check iol readiness] ************************
FAILED - RETRYING: [c1 -> localhost]: Execute local ssh command to check iol readiness (20 retries left).
FAILED - RETRYING: [c2 -> localhost]: Execute local ssh command to check iol readiness (20 retries left).
FAILED - RETRYING: [c3 -> localhost]: Execute local ssh command to check iol readiness (20 retries left).
FAILED - RETRYING: [c4 -> localhost]: Execute local ssh command to check iol readiness (20 retries left).
FAILED - RETRYING: [c1 -> localhost]: Execute local ssh command to check iol readiness (19 retries left).
FAILED - RETRYING: [c2 -> localhost]: Execute local ssh command to check iol readiness (19 retries left).
FAILED - RETRYING: [c3 -> localhost]: Execute local ssh command to check iol readiness (19 retries left).
FAILED - RETRYING: [c4 -> localhost]: Execute local ssh command to check iol readiness (19 retries left).
ok: [c2 -> localhost]
ok: [c1 -> localhost]
ok: [c4 -> localhost]
ok: [c3 -> localhost]

TASK [Confirm c1 SSH server works] *********************************************
ok: [c1] => 
  msg: Node c1 is ready.
ok: [c2] => 
  msg: Node c2 is ready.
ok: [c3] => 
  msg: Node c3 is ready.
ok: [c4] => 
  msg: Node c4 is ready.

TASK [Normalize config on bridge-like devices] *********************************
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-module.yml for c1, c2, c3, c4, s1, s2, relay

TASK [Figure out whether to deploy the module normalize on current device] *****
ok: [s1]
ok: [c1]
ok: [s2]
ok: [c2]
ok: [c3]
ok: [c4]
ok: [relay]

TASK [Find configuration template for normalize] *******************************
ok: [s1]
ok: [c1]
ok: [s2]
ok: [c2]
ok: [c3]
ok: [c4]
ok: [relay]

TASK [fail] ********************************************************************
skipping: [c1]
skipping: [c2]
skipping: [c3]
skipping: [c4]
skipping: [s1]
skipping: [s2]
skipping: [relay]

TASK [Find configuration deployment deploy_script for normalize] ***************
ok: [c1]
ok: [s1]
ok: [c2]
ok: [c3]
ok: [s2]
ok: [c4]
ok: [relay]

TASK [Print deployed configuration when running in verbose mode] ***************
skipping: [c1]
skipping: [c2]
skipping: [c3]
skipping: [c4]
skipping: [s1]
skipping: [s2]
ok: [relay] => 
  msg: |-
    normalize configuration for relay
    =========================================
    !
    interface Ethernet1
     shutdown
     mac-address 52dc.cafe.0101
    !
    interface Ethernet2
     shutdown
     mac-address 52dc.cafe.0102
    !
    interface Ethernet3
     shutdown
     mac-address 52dc.cafe.0103
    !
    interface Ethernet4
     shutdown
     mac-address 52dc.cafe.0104

TASK [Deploy normalize configuration] ******************************************
skipping: [c1]
skipping: [c2]
skipping: [c3]
skipping: [c4]
skipping: [s1]
skipping: [s2]
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-config/eos.yml for relay

TASK [eos_config: deploying normalize from /home/pipi/net101/tools/netsim/ansible/templates/normalize/eos.j2] ***
[WARNING]: To ensure idempotency and correct diff the input configuration lines
should be similar to how they appear if present in the running configuration on
device including the indentation
changed: [relay]

TASK [Deploy initial configuration] ********************************************
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-module.yml for c1, c2, c3, c4, s1, s2, relay

TASK [Figure out whether to deploy the module initial on current device] *******
ok: [s1]
ok: [s2]
ok: [c1]
ok: [c2]
ok: [c3]
ok: [c4]
ok: [relay]

TASK [Find configuration template for initial] *********************************
ok: [s1]
ok: [s2]
ok: [c1]
ok: [c2]
ok: [c3]
ok: [c4]
ok: [relay]

TASK [fail] ********************************************************************
skipping: [c1]
skipping: [c2]
skipping: [c3]
skipping: [c4]
skipping: [s1]
skipping: [s2]
skipping: [relay]

TASK [Find configuration deployment deploy_script for initial] *****************
ok: [s2]
ok: [s1]
ok: [c1]
ok: [c2]
ok: [c3]
ok: [c4]
ok: [relay]

TASK [Print deployed configuration when running in verbose mode] ***************
ok: [s1] => 
  msg: |-
    initial configuration for s1
    =========================================
    #!/bin/bash
    #
    # This script contains the 'ip' commands needed to set up container
    # interfaces and route table. It's executed within the container
    # network namespace on the container host.
    #
    #  /etc/hosts file is generated as a clab bind.
    #
    set -e
  
    ### One-Shot configuration (non-Ubuntu VM or container)
    #
    # Send ARP requests from a sane source IP address
    sysctl -w net.ipv4.conf.all.arp_announce=2
  
    #
    # Disable IPv4 and IPv6 forwarding
    #
    sysctl -w net.ipv4.ip_forward=0
    sysctl -w net.ipv6.conf.all.forwarding=0
  
    #
    # Interface addressing, create any bond devices
    #
    ip link set dev eth1 up
    sysctl -w net.ipv6.conf.eth1.disable_ipv6=0
    set +e
    ip -6 addr del 2001:db8:cafe:2::6/64 dev eth1 2>/dev/null
    set -e
    ip -6 addr add 2001:db8:cafe:2::6/64 dev eth1
    ip link set dev eth1 mtu 1500
ok: [s2] => 
  msg: |-
    initial configuration for s2
    =========================================
    #!/bin/bash
    #
    # This script contains the 'ip' commands needed to set up container
    # interfaces and route table. It's executed within the container
    # network namespace on the container host.
    #
    #  /etc/hosts file is generated as a clab bind.
    #
    set -e
  
    ### One-Shot configuration (non-Ubuntu VM or container)
    #
    # Send ARP requests from a sane source IP address
    sysctl -w net.ipv4.conf.all.arp_announce=2
  
    #
    # Disable IPv4 and IPv6 forwarding
    #
    sysctl -w net.ipv4.ip_forward=0
    sysctl -w net.ipv6.conf.all.forwarding=0
  
    #
    # Interface addressing, create any bond devices
    #
    ip link set dev eth1 up
    sysctl -w net.ipv6.conf.eth1.disable_ipv6=0
    set +e
    ip -6 addr del 2001:db8:cafe:3::7/64 dev eth1 2>/dev/null
    set -e
    ip -6 addr add 2001:db8:cafe:3::7/64 dev eth1
    ip link set dev eth1 mtu 1500
ok: [c1] => 
  msg: |-
    initial configuration for c1
    =========================================
    hostname c1
    !
    no ip domain lookup
    !
    lldp run
    !
    ip host c2 10.0.0.3
    ip host c3 10.0.0.4
    ip host c4 10.0.0.5
    ip host relay 10.0.0.1 2001:db8:cafe::1 2001:db8:cafe:1::1 2001:db8:cafe:2::1 2001:db8:cafe:3::1
    ip host s1 2001:db8:cafe:2::6
    ip host s2 2001:db8:cafe:3::7
    !
    ip routing
    !
    ipv6 unicast-routing
    !
    !
    interface Loopback0
     ip address 10.0.0.2 255.255.255.255
    !
    interface Ethernet0/0
     no lldp transmit
     no lldp receive
    !
    interface Ethernet0/1
     description c1 -> [c2,relay]
     no shutdown
    !
    !
    line vty 0 4
     exec-timeout 0 0
    !
    no banner exec
    no banner login
    no banner incoming
ok: [c2] => 
  msg: |-
    initial configuration for c2
    =========================================
    hostname c2
    !
    no ip domain lookup
    !
    lldp run
    !
    ip host c1 10.0.0.2
    ip host c3 10.0.0.4
    ip host c4 10.0.0.5
    ip host relay 10.0.0.1 2001:db8:cafe::1 2001:db8:cafe:1::1 2001:db8:cafe:2::1 2001:db8:cafe:3::1
    ip host s1 2001:db8:cafe:2::6
    ip host s2 2001:db8:cafe:3::7
    !
    ip routing
    !
    ipv6 unicast-routing
    !
    !
    interface Loopback0
     ip address 10.0.0.3 255.255.255.255
    !
    interface Ethernet0/0
     no lldp transmit
     no lldp receive
    !
    interface Ethernet0/1
     description c2 -> [c1,relay]
     no shutdown
    !
    !
    line vty 0 4
     exec-timeout 0 0
    !
    no banner exec
    no banner login
    no banner incoming
ok: [c3] => 
  msg: |-
    initial configuration for c3
    =========================================
    hostname c3
    !
    no ip domain lookup
    !
    lldp run
    !
    ip host c1 10.0.0.2
    ip host c2 10.0.0.3
    ip host c4 10.0.0.5
    ip host relay 10.0.0.1 2001:db8:cafe::1 2001:db8:cafe:1::1 2001:db8:cafe:2::1 2001:db8:cafe:3::1
    ip host s1 2001:db8:cafe:2::6
    ip host s2 2001:db8:cafe:3::7
    !
    ip routing
    !
    ipv6 unicast-routing
    !
    !
    interface Loopback0
     ip address 10.0.0.4 255.255.255.255
    !
    interface Ethernet0/0
     no lldp transmit
     no lldp receive
    !
    interface Ethernet0/1
     description c3 -> [c4,relay]
     no shutdown
    !
    !
    line vty 0 4
     exec-timeout 0 0
    !
    no banner exec
    no banner login
    no banner incoming
ok: [c4] => 
  msg: |-
    initial configuration for c4
    =========================================
    hostname c4
    !
    no ip domain lookup
    !
    lldp run
    !
    ip host c1 10.0.0.2
    ip host c2 10.0.0.3
    ip host c3 10.0.0.4
    ip host relay 10.0.0.1 2001:db8:cafe::1 2001:db8:cafe:1::1 2001:db8:cafe:2::1 2001:db8:cafe:3::1
    ip host s1 2001:db8:cafe:2::6
    ip host s2 2001:db8:cafe:3::7
    !
    ip routing
    !
    ipv6 unicast-routing
    !
    !
    interface Loopback0
     ip address 10.0.0.5 255.255.255.255
    !
    interface Ethernet0/0
     no lldp transmit
     no lldp receive
    !
    interface Ethernet0/1
     description c4 -> [c3,relay]
     no shutdown
    !
    !
    line vty 0 4
     exec-timeout 0 0
    !
    no banner exec
    no banner login
    no banner incoming
ok: [relay] => 
  msg: |-
    initial configuration for relay
    =========================================
    hostname relay
    !
    logging monitor debugging
    aaa authorization exec default local
    !
    lldp run
    ip routing
    ipv6 unicast-routing
    !
    !
    ip host c1 10.0.0.2
    ip host c2 10.0.0.3
    ip host c3 10.0.0.4
    ip host c4 10.0.0.5
    ipv6 host s1 2001:db8:cafe:2::6
    ipv6 host s2 2001:db8:cafe:3::7
    !
    interface Management1
     no lldp transmit
     no lldp receive
    !
    interface Loopback0
     ip address 10.0.0.1/32
    !
    interface Ethernet1
     no switchport
     description relay -> [c1,c2]
     ipv6 nd ra interval 5
     ipv6 address 2001:db8:cafe::1/64
    !
     mac-address 52dc.cafe.0101
     no shutdown
    !
    interface Ethernet2
     no switchport
     description relay -> [c3,c4]
     ipv6 nd ra interval 5
     ipv6 address 2001:db8:cafe:1::1/64
    !
     mac-address 52dc.cafe.0102
     no shutdown
    !
    interface Ethernet3
     no switchport
     description relay -> s1
     ipv6 nd ra interval 5
     ipv6 address 2001:db8:cafe:2::1/64
    !
     mac-address 52dc.cafe.0103
     no shutdown
    !
    interface Ethernet4
     no switchport
     description relay -> s2
     ipv6 nd ra interval 5
     ipv6 address 2001:db8:cafe:3::1/64
    !
     mac-address 52dc.cafe.0104
     no shutdown
    !

TASK [Deploy initial configuration] ********************************************
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-config/ios.yml for c1, c2, c3, c4
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-config/linux-clab.yml for s1, s2
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-config/eos.yml for relay

TASK [ios_config: deploying initial from /home/pipi/net101/tools/netsim/ansible/templates/initial/ios.j2] ***
changed: [c1]
changed: [c2]
changed: [c4]
changed: [c3]

TASK [Define script filename and determine whether to execute in netns] ********
ok: [s1]
ok: [s2]

TASK [Create a temporary file for the rendered script] *************************
changed: [s1 -> localhost]
changed: [s2 -> localhost]

TASK [Create container setup script from /home/pipi/net101/tools/netsim/ansible/templates/initial/linux-clab.j2] ***
changed: [s2 -> localhost]
changed: [s1 -> localhost]

TASK [Copy script into running container at /tmp/config-s1_initial.sh] *********
skipping: [s1]
skipping: [s2]

TASK [Execute /tmp/config-s1_initial.sh to deploy initial config based on /home/pipi/net101/tools/netsim/ansible/templates/initial/linux-clab.j2] ***
skipping: [s1]
skipping: [s2]

TASK [Container configuration for initial based on /home/pipi/net101/tools/netsim/ansible/templates/initial/linux-clab.j2 executed in netns] ***
changed: [s1 -> localhost]
changed: [s2 -> localhost]

TASK [Remove temporary file /tmp/s1_initial-z2gk062_.sh] ***********************
changed: [s1 -> localhost]
changed: [s2 -> localhost]

TASK [eos_config: deploying initial from /home/pipi/net101/tools/netsim/ansible/templates/initial/eos.j2] ***
changed: [relay]

PLAY [Deploy module-specific configurations] ***********************************

TASK [Set variables that cannot be set with VARS] ******************************
ok: [c1]
ok: [s1]
ok: [s2]
ok: [c2]
ok: [c3]
ok: [c4]
ok: [relay]

TASK [Deploy individual configuration modules] *********************************
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-module.yml for c1, c2, c3, c4, relay, s1, s2 => (item=dhcp)

TASK [Figure out whether to deploy the module dhcp on current device] **********
ok: [c1]
ok: [s1]
ok: [s2]
ok: [c3]
ok: [c2]
ok: [relay]
ok: [c4]

TASK [Find configuration template for dhcp] ************************************
skipping: [s1]
skipping: [s2]
ok: [c1]
ok: [c3]
ok: [c2]
ok: [c4]
ok: [relay]

TASK [fail] ********************************************************************
skipping: [c1]
skipping: [c2]
skipping: [c3]
skipping: [c4]
skipping: [relay]
skipping: [s1]
skipping: [s2]

TASK [Find configuration deployment deploy_script for dhcp] ********************
skipping: [s1]
skipping: [s2]
ok: [c1]
ok: [c2]
ok: [c3]
ok: [c4]
ok: [relay]

TASK [Print deployed configuration when running in verbose mode] ***************
skipping: [s1]
skipping: [s2]
ok: [c1] => 
  msg: |-
    dhcp configuration for c1
    =========================================
    interface Ethernet0/1
      ipv6 enable
      ipv6 address dhcp
ok: [c2] => 
  msg: |-
    dhcp configuration for c2
    =========================================
    interface Ethernet0/1
      ipv6 enable
      ipv6 address dhcp
ok: [c3] => 
  msg: |-
    dhcp configuration for c3
    =========================================
    interface Ethernet0/1
      ipv6 enable
      ipv6 address dhcp
ok: [c4] => 
  msg: |-
    dhcp configuration for c4
    =========================================
    interface Ethernet0/1
      ipv6 enable
      ipv6 address dhcp
ok: [relay] => 
  msg: |-
    dhcp configuration for relay
    =========================================
    interface Ethernet1
      ipv6 dhcp relay destination 2001:db8:cafe:2::6
    interface Ethernet2
      ipv6 dhcp relay destination 2001:db8:cafe:3::7

TASK [Deploy dhcp configuration] ***********************************************
skipping: [s1]
skipping: [s2]
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-config/ios.yml for c1, c2, c3, c4
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-config/eos.yml for relay

TASK [ios_config: deploying dhcp from /home/pipi/net101/tools/netsim/ansible/templates/dhcp/ios.j2] ***
changed: [c3]
changed: [c1]
changed: [c4]
changed: [c2]

TASK [eos_config: deploying dhcp from /home/pipi/net101/tools/netsim/ansible/templates/dhcp/eos.j2] ***
changed: [relay]

PLAY [Deploy custom deployment templates] **************************************
skipping: no hosts matched

PLAY RECAP *********************************************************************
c1                         : ok=26   changed=2    unreachable=0    failed=0    skipped=5    rescued=0    ignored=0   
c2                         : ok=25   changed=2    unreachable=0    failed=0    skipped=5    rescued=0    ignored=0   
c3                         : ok=25   changed=2    unreachable=0    failed=0    skipped=5    rescued=0    ignored=0   
c4                         : ok=25   changed=2    unreachable=0    failed=0    skipped=5    rescued=0    ignored=0   
relay                      : ok=24   changed=3    unreachable=0    failed=0    skipped=4    rescued=0    ignored=0   
s1                         : ok=20   changed=4    unreachable=0    failed=0    skipped=12   rescued=0    ignored=0   
s2                         : ok=20   changed=4    unreachable=0    failed=0    skipped=12   rescued=0    ignored=0   



Use this topology to test the DHCPv6 relay functionality of your device. Use
'netlab validate' to check whether your device propagated DHCPv6 requests from
DHCP clients to DHCP servers.

