[WARNING]: Could not match supplied host pattern, ignoring: unprovisioned

PLAY [Deploy initial device configuration] *************************************

TASK [Set variables that cannot be set with VARS] ******************************
ok: [dut]
ok: [x1]

TASK [Find device readiness script] ********************************************
ok: [dut]
ok: [x1]

TASK [Wait for device to become ready] *****************************************
included: /home/pipi/net101/tools/netsim/ansible/tasks/readiness-check/eos-clab.yml for dut, x1

TASK [Wait for cEOS SSH daemon to start] ***************************************
ok: [x1]
ok: [dut]

TASK [Deploy initial configuration] ********************************************
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-module.yml for dut, x1

TASK [Figure out whether to deploy the module initial on current device] *******
ok: [dut]
ok: [x1]

TASK [Find configuration template for initial] *********************************
ok: [dut]
ok: [x1]

TASK [fail] ********************************************************************
skipping: [dut]
skipping: [x1]

TASK [Print deployed configuration when running in verbose mode] ***************
ok: [dut] => 
  msg: |-
    initial configuration for dut
    =========================================
    hostname dut
    !
    logging monitor debugging
    aaa authorization exec default local
    !
    lldp run
    ip routing
    !
    !
    ip host x1 10.0.0.2
    !
    interface Management0
     no lldp transmit
     no lldp receive
    !
    interface Loopback0
     no shutdown
     ip address 10.0.0.1/32
    !
    interface Ethernet1
     no shutdown
     no switchport
     description [Access VLAN red] dut -> x1
    !
     mac-address 52dc.cafe.0101
    !
    interface Ethernet2
     no shutdown
     no switchport
     description [Access VLAN red] dut -> x1
    !
     mac-address 52dc.cafe.0102
    !
    interface Ethernet3
     no shutdown
     no switchport
     description [Access VLAN red] dut -> x1
    !
     mac-address 52dc.cafe.0103
    !
    interface Vlan42
     no shutdown
     description VLAN red (42) -> [x1]
    !
ok: [x1] => 
  msg: |-
    initial configuration for x1
    =========================================
    hostname x1
    !
    logging monitor debugging
    aaa authorization exec default local
    !
    lldp run
    ip routing
    !
    !
    ip host dut 10.0.0.1
    !
    interface Management0
     no lldp transmit
     no lldp receive
    !
    interface Loopback0
     no shutdown
     ip address 10.0.0.2/32
    !
    interface Ethernet1
     no shutdown
     no switchport
     description [Access VLAN red] x1 -> dut
    !
     mac-address 52dc.cafe.0201
    !
    interface Ethernet2
     no shutdown
     no switchport
     description [Access VLAN red] x1 -> dut
    !
     mac-address 52dc.cafe.0202
    !
    interface Ethernet3
     no shutdown
     no switchport
     description [Access VLAN red] x1 -> dut
    !
     mac-address 52dc.cafe.0203
    !
    interface Vlan42
     no shutdown
     description VLAN red (42) -> [dut]
    !

TASK [Find configuration deployment deploy_script for initial] *****************
ok: [dut]
ok: [x1]

TASK [Deploy initial configuration] ********************************************
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-config/eos.yml for dut, x1

TASK [eos_config: deploying initial from /home/pipi/net101/tools/netsim/ansible/templates/initial/eos.j2] ***
[WARNING]: To ensure idempotency and correct diff the input configuration lines
should be similar to how they appear if present in the running configuration on
device including the indentation
changed: [x1]
changed: [dut]

PLAY [Deploy module-specific configurations] ***********************************

TASK [Set variables that cannot be set with VARS] ******************************
ok: [dut]
ok: [x1]

TASK [Deploy individual configuration modules] *********************************
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-module.yml for dut, x1 => (item=vlan)
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-module.yml for dut, x1 => (item=stp)

TASK [Figure out whether to deploy the module vlan on current device] **********
ok: [dut]
ok: [x1]

TASK [Find configuration template for vlan] ************************************
ok: [dut]
ok: [x1]

TASK [fail] ********************************************************************
skipping: [dut]
skipping: [x1]

TASK [Print deployed configuration when running in verbose mode] ***************
ok: [dut] => 
  msg: |-
    vlan configuration for dut
    =========================================
    vlan 42
     name red
    !
  
    !
    interface Ethernet1
     switchport
     switchport access vlan 42
    !
    interface Ethernet2
     switchport
     switchport access vlan 42
    !
    interface Ethernet3
     switchport
     switchport access vlan 42
    !
    interface Vlan42
ok: [x1] => 
  msg: |-
    vlan configuration for x1
    =========================================
    vlan 42
     name red
    !
  
    !
    interface Ethernet1
     switchport
     switchport access vlan 42
    !
    interface Ethernet2
     switchport
     switchport access vlan 42
    !
    interface Ethernet3
     switchport
     switchport access vlan 42
    !
    interface Vlan42

TASK [Find configuration deployment deploy_script for vlan] ********************
ok: [dut]
ok: [x1]

TASK [Deploy vlan configuration] ***********************************************
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-config/eos.yml for dut, x1

TASK [eos_config: deploying vlan from /home/pipi/net101/tools/netsim/ansible/templates/vlan/eos.j2] ***
changed: [x1]
changed: [dut]

TASK [Figure out whether to deploy the module stp on current device] ***********
ok: [dut]
ok: [x1]

TASK [Find configuration template for stp] *************************************
ok: [dut]
ok: [x1]

TASK [fail] ********************************************************************
skipping: [dut]
skipping: [x1]

TASK [Print deployed configuration when running in verbose mode] ***************
ok: [dut] => 
  msg: |-
    stp configuration for dut
    =========================================
    spanning-tree mode rstp
  
    spanning-tree priority 4096
  
  
  
    interface Ethernet1
    #
    # Use 16x port_priority to get the correct 4-bit value on the wire
    #
     spanning-tree port-priority 192
    #
  
    interface Ethernet2
    #
    # Use 16x port_priority to get the correct 4-bit value on the wire
    #
     spanning-tree port-priority 160
    #
  
    interface Ethernet3
    #
    # Use 16x port_priority to get the correct 4-bit value on the wire
    #
     spanning-tree port-priority 0
    #
ok: [x1] => 
  msg: |-
    stp configuration for x1
    =========================================
    spanning-tree mode rstp

TASK [Find configuration deployment deploy_script for stp] *********************
ok: [dut]
ok: [x1]

TASK [Deploy stp configuration] ************************************************
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-config/eos.yml for dut, x1

TASK [eos_config: deploying stp from /home/pipi/net101/tools/netsim/ansible/templates/stp/eos.j2] ***
changed: [x1]
changed: [dut]

PLAY [Deploy custom deployment templates] **************************************
skipping: no hosts matched

PLAY RECAP *********************************************************************
dut                        : ok=26   changed=3    unreachable=0    failed=0    skipped=3    rescued=0    ignored=0   
x1                         : ok=26   changed=3    unreachable=0    failed=0    skipped=3    rescued=0    ignored=0   



The devices under test form a loop in the red VLAN.

The link with the lowest port_priority should be forwarding, all other links
should be blocked.

