[WARNING]: Could not match supplied host pattern, ignoring: unprovisioned
[WARNING]: Found variable using reserved name: hosts

PLAY [Deploy initial device configuration] *************************************

TASK [Set variables that cannot be set with VARS] ******************************
ok: [dut]
ok: [r2]
ok: [r4]
ok: [r1]
ok: [r3]

TASK [Find device readiness script] ********************************************
ok: [dut]
ok: [r2]
ok: [r1]
ok: [r3]
ok: [r4]

TASK [Wait for device to become ready] *****************************************
included: /home/pipi/netlab_gh/netsim/ansible/tasks/readiness-check/routeros7.yml for dut
included: /home/pipi/netlab_gh/netsim/ansible/tasks/readiness-check/eos-clab.yml for r1, r2, r3, r4

TASK [Execute local ssh command to check router readiness] *********************
skipping: [dut]

TASK [Wait for cEOS SSH daemon to start] ***************************************
ok: [r2]
ok: [r4]
ok: [r1]
ok: [r3]

TASK [Normalize config on bridge-like devices] *********************************
included: /home/pipi/netlab_gh/netsim/ansible/tasks/deploy-module.yml for dut, r1, r2, r3, r4

TASK [Figure out whether to deploy the module normalize on current device] *****
ok: [dut]
ok: [r1]
ok: [r2]
ok: [r3]
ok: [r4]

TASK [Find configuration template for normalize] *******************************
ok: [dut]
ok: [r1]
ok: [r2]
ok: [r3]
ok: [r4]

TASK [fail] ********************************************************************
skipping: [dut]
skipping: [r1]
skipping: [r2]
skipping: [r3]
skipping: [r4]

TASK [Find configuration deployment deploy_script for normalize] ***************
ok: [dut]
ok: [r1]
ok: [r2]
ok: [r4]
ok: [r3]

TASK [Print deployed configuration when running in verbose mode] ***************
skipping: [dut]
ok: [r1] => 
  msg: |-
    normalize configuration for r1
    =========================================
    !
    interface Ethernet1
     shutdown
     mac-address 52dc.cafe.0b01
ok: [r2] => 
  msg: |-
    normalize configuration for r2
    =========================================
    !
    interface Ethernet1
     shutdown
     mac-address 52dc.cafe.0c01
ok: [r3] => 
  msg: |-
    normalize configuration for r3
    =========================================
    !
    interface Ethernet1
     shutdown
     mac-address 52dc.cafe.1701
ok: [r4] => 
  msg: |-
    normalize configuration for r4
    =========================================
    !
    interface Ethernet1
     shutdown
     mac-address 52dc.cafe.1801

TASK [Deploy normalize configuration] ******************************************
skipping: [dut]
included: /home/pipi/netlab_gh/netsim/ansible/tasks/deploy-config/eos.yml for r1, r2, r3, r4

TASK [eos_config: deploying normalize from /home/pipi/netlab_gh/netsim/ansible/templates/normalize/eos.j2] ***
[WARNING]: To ensure idempotency and correct diff the input configuration lines
should be similar to how they appear if present in the running configuration on
device including the indentation
changed: [r1]
changed: [r2]
changed: [r4]
changed: [r3]

TASK [Deploy initial configuration] ********************************************
included: /home/pipi/netlab_gh/netsim/ansible/tasks/deploy-module.yml for dut, r1, r2, r3, r4

TASK [Figure out whether to deploy the module initial on current device] *******
ok: [dut]
ok: [r1]
ok: [r2]
ok: [r3]
ok: [r4]

TASK [Find configuration template for initial] *********************************
ok: [dut]
ok: [r1]
ok: [r2]
ok: [r4]
ok: [r3]

TASK [fail] ********************************************************************
skipping: [dut]
skipping: [r1]
skipping: [r2]
skipping: [r3]
skipping: [r4]

TASK [Find configuration deployment deploy_script for initial] *****************
ok: [dut]
ok: [r1]
ok: [r2]
ok: [r4]
ok: [r3]

TASK [Print deployed configuration when running in verbose mode] ***************
ok: [dut] => 
  msg: |-
    initial configuration for dut
    =========================================
  
    /system identity set name="dut"
  
    /interface bridge add name=loopback protocol-mode=none
  
  
    /ip address add interface=loopback address=10.0.0.1/32
    /ipv6 address add interface=loopback address=2001:db8:1:1::1/64
  
  
  
  
  
  
    /ip/vrf/add place-before=0 name=blue interfaces=ether4,ether5
  
  
  
  
  
    /ip/vrf/add place-before=0 name=red interfaces=ether2,ether3
  
  
  
    /interface ethernet set comment="dut -> r1 [external]" ether2
  
  
    /ip address add interface=ether2 address=10.1.0.1/30
    /ip address set [find where interface=ether2] comment="dut -> r1 [external]"
  
  
    /interface ethernet set comment="dut -> r2 [external]" ether3
  
  
    /ip address add interface=ether3 address=10.1.0.5/30
    /ip address set [find where interface=ether3] comment="dut -> r2 [external]"
  
  
    /interface ethernet set comment="dut -> r3 [external]" ether4
  
  
    /ip address add interface=ether4 address=10.1.0.9/30
    /ip address set [find where interface=ether4] comment="dut -> r3 [external]"
  
  
    /interface ethernet set comment="dut -> r4 [external]" ether5
  
  
    /ip address add interface=ether5 address=10.1.0.13/30
    /ip address set [find where interface=ether5] comment="dut -> r4 [external]"
  
  
    /ip neighbor discovery-settings set discover-interface-list=all
ok: [r1] => 
  msg: |-
    initial configuration for r1
    =========================================
    hostname r1
    !
    logging monitor debugging
    aaa authorization exec default local
    !
    lldp run
    ip routing
    ipv6 unicast-routing
    !
    !
    ip host dut 10.0.0.1
    ip host dut-blue 10.1.0.9 10.1.0.13
    ip host dut-red 10.1.0.1 10.1.0.5
    ip host r2 10.0.0.12 10.1.0.6
    ip host r3 10.0.0.23 10.1.0.10
    ip host r4 10.0.0.24 10.1.0.14
    ipv6 host dut 2001:db8:1:1::1
    ipv6 host r2 2001:db8:1:c::1
    ipv6 host r3 2001:db8:1:17::1
    ipv6 host r4 2001:db8:1:18::1
    !
    interface Management0
     no lldp transmit
     no lldp receive
    !
    interface Loopback0
     ip address 10.0.0.11/32
     ipv6 nd ra interval 5
     ipv6 address 2001:db8:1:b::1/64
    !
    interface Ethernet1
     no switchport
     platform tfa phy control-frame disabled
     description r1 -> dut [external]
     ip address 10.1.0.2/30
    !
     mac-address 52dc.cafe.0b01
     no shutdown
    !
ok: [r2] => 
  msg: |-
    initial configuration for r2
    =========================================
    hostname r2
    !
    logging monitor debugging
    aaa authorization exec default local
    !
    lldp run
    ip routing
    ipv6 unicast-routing
    !
    !
    ip host dut 10.0.0.1
    ip host dut-blue 10.1.0.9 10.1.0.13
    ip host dut-red 10.1.0.1 10.1.0.5
    ip host r1 10.0.0.11 10.1.0.2
    ip host r3 10.0.0.23 10.1.0.10
    ip host r4 10.0.0.24 10.1.0.14
    ipv6 host dut 2001:db8:1:1::1
    ipv6 host r1 2001:db8:1:b::1
    ipv6 host r3 2001:db8:1:17::1
    ipv6 host r4 2001:db8:1:18::1
    !
    interface Management0
     no lldp transmit
     no lldp receive
    !
    interface Loopback0
     ip address 10.0.0.12/32
     ipv6 nd ra interval 5
     ipv6 address 2001:db8:1:c::1/64
    !
    interface Ethernet1
     no switchport
     platform tfa phy control-frame disabled
     description r2 -> dut [external]
     ip address 10.1.0.6/30
    !
     mac-address 52dc.cafe.0c01
     no shutdown
    !
ok: [r4] => 
  msg: |-
    initial configuration for r4
    =========================================
    hostname r4
    !
    logging monitor debugging
    aaa authorization exec default local
    !
    lldp run
    ip routing
    ipv6 unicast-routing
    !
    !
    ip host dut 10.0.0.1
    ip host dut-blue 10.1.0.9 10.1.0.13
    ip host dut-red 10.1.0.1 10.1.0.5
    ip host r1 10.0.0.11 10.1.0.2
    ip host r2 10.0.0.12 10.1.0.6
    ip host r3 10.0.0.23 10.1.0.10
    ipv6 host dut 2001:db8:1:1::1
    ipv6 host r1 2001:db8:1:b::1
    ipv6 host r2 2001:db8:1:c::1
    ipv6 host r3 2001:db8:1:17::1
    !
    interface Management0
     no lldp transmit
     no lldp receive
    !
    interface Loopback0
     ip address 10.0.0.24/32
     ipv6 nd ra interval 5
     ipv6 address 2001:db8:1:18::1/64
    !
    interface Ethernet1
     no switchport
     platform tfa phy control-frame disabled
     description r4 -> dut [external]
     ip address 10.1.0.14/30
    !
     mac-address 52dc.cafe.1801
     no shutdown
    !
ok: [r3] => 
  msg: |-
    initial configuration for r3
    =========================================
    hostname r3
    !
    logging monitor debugging
    aaa authorization exec default local
    !
    lldp run
    ip routing
    ipv6 unicast-routing
    !
    !
    ip host dut 10.0.0.1
    ip host dut-blue 10.1.0.9 10.1.0.13
    ip host dut-red 10.1.0.1 10.1.0.5
    ip host r1 10.0.0.11 10.1.0.2
    ip host r2 10.0.0.12 10.1.0.6
    ip host r4 10.0.0.24 10.1.0.14
    ipv6 host dut 2001:db8:1:1::1
    ipv6 host r1 2001:db8:1:b::1
    ipv6 host r2 2001:db8:1:c::1
    ipv6 host r4 2001:db8:1:18::1
    !
    interface Management0
     no lldp transmit
     no lldp receive
    !
    interface Loopback0
     ip address 10.0.0.23/32
     ipv6 nd ra interval 5
     ipv6 address 2001:db8:1:17::1/64
    !
    interface Ethernet1
     no switchport
     platform tfa phy control-frame disabled
     description r3 -> dut [external]
     ip address 10.1.0.10/30
    !
     mac-address 52dc.cafe.1701
     no shutdown
    !

TASK [Deploy initial configuration] ********************************************
included: /home/pipi/netlab_gh/netsim/ansible/tasks/deploy-config/routeros7.yml for dut
included: /home/pipi/netlab_gh/netsim/ansible/tasks/deploy-config/eos.yml for r1, r2, r3, r4

TASK [load initial from /home/pipi/netlab_gh/netsim/ansible/templates/initial/routeros7.j2] ***
ok: [dut]

TASK [Run commands on CHR] *****************************************************
changed: [dut]

TASK [eos_config: deploying initial from /home/pipi/netlab_gh/netsim/ansible/templates/initial/eos.j2] ***
changed: [r2]
changed: [r4]
changed: [r1]
changed: [r3]

PLAY [Deploy module-specific configurations] ***********************************

TASK [Set variables that cannot be set with VARS] ******************************
ok: [dut]
ok: [r1]
ok: [r2]
ok: [r4]
ok: [r3]

TASK [Deploy individual configuration modules] *********************************
included: /home/pipi/netlab_gh/netsim/ansible/tasks/deploy-module.yml for dut, r1, r2, r3, r4 => (item=bgp)
included: /home/pipi/netlab_gh/netsim/ansible/tasks/deploy-module.yml for dut, r1, r2, r3, r4 => (item=vrf)

TASK [Figure out whether to deploy the module bgp on current device] ***********
ok: [dut]
ok: [r1]
ok: [r4]
ok: [r2]
ok: [r3]

TASK [Find configuration template for bgp] *************************************
ok: [dut]
ok: [r1]
ok: [r3]
ok: [r2]
ok: [r4]

TASK [fail] ********************************************************************
skipping: [dut]
skipping: [r1]
skipping: [r2]
skipping: [r3]
skipping: [r4]

TASK [Find configuration deployment deploy_script for bgp] *********************
ok: [dut]
ok: [r2]
ok: [r1]
ok: [r3]
ok: [r4]

TASK [Print deployed configuration when running in verbose mode] ***************
ok: [dut] => 
  msg: |-
    bgp configuration for dut
    =========================================
  
    /routing/bgp/template add name=main as=65000 output.network=bgp-networks
  
    /routing/bgp/template set main router-id=10.0.0.1
  
  
  
    # BGP Network now is controlled by simple ACL
    /ip/firewall/address-list/ add list=bgp-networks address=10.0.0.1/32
  
  
  
  
    # BGP Network now is controlled by simple ACL
    /ip/firewall/address-list/ add list=bgp-networks address=2001:db8:1:1::/64
ok: [r1] => 
  msg: |-
    bgp configuration for r1
    =========================================
    !
    !
    router bgp 65101
      bgp advertise-inactive
      bgp log-neighbor-changes
      no bgp default ipv4-unicast
      no bgp default ipv6-unicast
      router-id 10.0.0.11
    !
      neighbor 10.1.0.1 remote-as 65000
      neighbor 10.1.0.1 description dut
      neighbor 10.1.0.1 send-community standard large
    !
    !
     address-family ipv4
  
      network 10.0.0.11/32
    !
    !
    !
      neighbor 10.1.0.1 activate
    !
     address-family ipv6
  
      network 2001:db8:1:b::/64
    !
    !
    !
    !
ok: [r2] => 
  msg: |-
    bgp configuration for r2
    =========================================
    !
    !
    router bgp 65102
      bgp advertise-inactive
      bgp log-neighbor-changes
      no bgp default ipv4-unicast
      no bgp default ipv6-unicast
      router-id 10.0.0.12
    !
      neighbor 10.1.0.5 remote-as 65000
      neighbor 10.1.0.5 description dut
      neighbor 10.1.0.5 send-community standard large
    !
    !
     address-family ipv4
  
      network 10.0.0.12/32
    !
    !
    !
      neighbor 10.1.0.5 activate
    !
     address-family ipv6
  
      network 2001:db8:1:c::/64
    !
    !
    !
    !
ok: [r3] => 
  msg: |-
    bgp configuration for r3
    =========================================
    !
    !
    router bgp 65103
      bgp advertise-inactive
      bgp log-neighbor-changes
      no bgp default ipv4-unicast
      no bgp default ipv6-unicast
      router-id 10.0.0.23
    !
      neighbor 10.1.0.9 remote-as 65000
      neighbor 10.1.0.9 description dut
      neighbor 10.1.0.9 send-community standard large
    !
    !
     address-family ipv4
  
      network 10.0.0.23/32
    !
    !
    !
      neighbor 10.1.0.9 activate
    !
     address-family ipv6
  
      network 2001:db8:1:17::/64
    !
    !
    !
    !
ok: [r4] => 
  msg: |-
    bgp configuration for r4
    =========================================
    !
    !
    router bgp 65104
      bgp advertise-inactive
      bgp log-neighbor-changes
      no bgp default ipv4-unicast
      no bgp default ipv6-unicast
      router-id 10.0.0.24
    !
      neighbor 10.1.0.13 remote-as 65000
      neighbor 10.1.0.13 description dut
      neighbor 10.1.0.13 send-community standard large
    !
    !
     address-family ipv4
  
      network 10.0.0.24/32
    !
    !
    !
      neighbor 10.1.0.13 activate
    !
     address-family ipv6
  
      network 2001:db8:1:18::/64
    !
    !
    !
    !

TASK [Deploy bgp configuration] ************************************************
included: /home/pipi/netlab_gh/netsim/ansible/tasks/deploy-config/routeros7.yml for dut
included: /home/pipi/netlab_gh/netsim/ansible/tasks/deploy-config/eos.yml for r1, r2, r3, r4

TASK [load bgp from /home/pipi/netlab_gh/netsim/ansible/templates/bgp/routeros7.j2] ***
ok: [dut]

TASK [Run commands on CHR] *****************************************************
changed: [dut]

TASK [eos_config: deploying bgp from /home/pipi/netlab_gh/netsim/ansible/templates/bgp/eos.j2] ***
changed: [r2]
changed: [r3]
changed: [r4]
changed: [r1]

TASK [Figure out whether to deploy the module vrf on current device] ***********
ok: [dut]
ok: [r1]
ok: [r2]
ok: [r4]
ok: [r3]

TASK [Find configuration template for vrf] *************************************
skipping: [r1]
skipping: [r2]
skipping: [r3]
skipping: [r4]
ok: [dut]

TASK [fail] ********************************************************************
skipping: [dut]
skipping: [r1]
skipping: [r2]
skipping: [r3]
skipping: [r4]

TASK [Find configuration deployment deploy_script for vrf] *********************
skipping: [r1]
skipping: [r2]
skipping: [r3]
skipping: [r4]
ok: [dut]

TASK [Print deployed configuration when running in verbose mode] ***************
skipping: [r1]
skipping: [r2]
skipping: [r3]
skipping: [r4]
ok: [dut] => 
  msg: |-
    vrf configuration for dut
    =========================================
  
    /routing/bgp/vpn add label-allocation-policy=per-vrf vrf=blue route-distinguisher=65000:2 import.route-targets=65000:2 export.route-targets=65000:2 export.redistribute=bgp,connected,ospf,static,vpn
  
    /routing/bgp/template add name=vrf_blue as=65000 output.network=bgp-networks-blue vrf=blue routing-table=blue output.redistribute=connected,bgp,bgp-mpls-vpn,vpn
  
    /routing/bgp/template set vrf_blue router-id=10.0.0.1
  
  
  
  
  
  
    /routing/bgp/connection add template=vrf_blue name=10_1_0_10 remote.address=10.1.0.10 remote.as=65103 comment="r3" address-families=ip local.role=ebgp
  
  
  
  
  
  
  
    /routing/bgp/connection add template=vrf_blue name=10_1_0_14 remote.address=10.1.0.14 remote.as=65104 comment="r4" address-families=ip local.role=ebgp
  
  
  
  
    /routing/bgp/vpn add label-allocation-policy=per-vrf vrf=red route-distinguisher=65000:1 import.route-targets=65000:1 export.route-targets=65000:1 export.redistribute=bgp,connected,ospf,static,vpn
  
    /routing/bgp/template add name=vrf_red as=65000 output.network=bgp-networks-red vrf=red routing-table=red output.redistribute=connected,bgp,bgp-mpls-vpn,vpn
  
    /routing/bgp/template set vrf_red router-id=10.0.0.1
  
  
  
  
  
  
    /routing/bgp/connection add template=vrf_red name=10_1_0_2 remote.address=10.1.0.2 remote.as=65101 comment="r1" address-families=ip local.role=ebgp
  
  
  
  
  
  
  
    /routing/bgp/connection add template=vrf_red name=10_1_0_6 remote.address=10.1.0.6 remote.as=65102 comment="r2" address-families=ip local.role=ebgp

TASK [Deploy vrf configuration] ************************************************
skipping: [r1]
skipping: [r2]
skipping: [r3]
skipping: [r4]
included: /home/pipi/netlab_gh/netsim/ansible/tasks/deploy-config/routeros7.yml for dut

TASK [load vrf from /home/pipi/netlab_gh/netsim/ansible/templates/vrf/routeros7.j2] ***
ok: [dut]

TASK [Run commands on CHR] *****************************************************
changed: [dut]

PLAY [Deploy custom deployment templates] **************************************

TASK [Run custom configuration deployment scripts] *****************************
included: /home/pipi/netlab_gh/netsim/ansible/tasks/deploy-custom-config.yml for r1, r2, r3, r4 => (item=bgp-xact)

TASK [Find configuration template] *********************************************
ok: [r2]
ok: [r3]
ok: [r1]
ok: [r4]

TASK [fail] ********************************************************************
skipping: [r1]
skipping: [r2]
skipping: [r3]
skipping: [r4]

TASK [Check is the configuration template is a file] ***************************
ok: [r3 -> localhost]
ok: [r1 -> localhost]
ok: [r4 -> localhost]
ok: [r2 -> localhost]

TASK [fail] ********************************************************************
skipping: [r1]
skipping: [r2]
skipping: [r3]
skipping: [r4]

TASK [Process template /home/pipi/net101/tools/tests/integration/vrf/bgp-xact.j2 for r1] ***
skipping: [r1]
skipping: [r3]
skipping: [r2]
skipping: [r4]

TASK [Find custom configuration deployment script] *****************************
ok: [r1]
ok: [r4]
ok: [r2]
ok: [r3]

TASK [Run the configuration deployment script] *********************************
included: /home/pipi/netlab_gh/netsim/ansible/tasks/deploy-config/eos.yml for r1, r2, r3, r4

TASK [eos_config: deploying bgp-xact from /home/pipi/net101/tools/tests/integration/vrf/bgp-xact.j2] ***
changed: [r2]
changed: [r3]
changed: [r1]
changed: [r4]

PLAY RECAP *********************************************************************
dut                        : ok=32   changed=3    unreachable=0    failed=0    skipped=7    rescued=0    ignored=0   
r1                         : ok=34   changed=4    unreachable=0    failed=0    skipped=11   rescued=0    ignored=0   
r2                         : ok=34   changed=4    unreachable=0    failed=0    skipped=11   rescued=0    ignored=0   
r3                         : ok=34   changed=4    unreachable=0    failed=0    skipped=11   rescued=0    ignored=0   
r4                         : ok=34   changed=4    unreachable=0    failed=0    skipped=11   rescued=0    ignored=0   



The device under test has two VRFs with two interfaces in each VRF.
Routers are attached to those interfaces and run BGP with device under test.
Assuming the multi-vrf test case succeeded, this one adds BGP routing with
CE routers.

* r1 and r2 should be able to ping each other
* r3 and r4 should be able to ping each other
* r1 should not be able to reach r3

The test also checks whether DUT unnecessarily enables IPv6 AF over IPv4
EBGP sessions

