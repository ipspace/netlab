{% macro community(list) -%}
{{ "BOTH" if list|length >= 2 else list[0]|upper }}
{%- endmacro %}

updates:
- path: configure/router[router-name=Base]
  val:
   router-id: "{{ loopback['ipv4']|ipaddr('address') }}"
   autonomous-system: {{ bgp.as }}
   bgp:
    ebgp-default-reject-policy:
     import: False
     export: False
    multipath:
     ibgp: 64
     ebgp: 64
    client-reflect: "{{ bgp.rr|default('')|to_yaml }}"
{%  if bgp.rr|default(0)|bool %}
    cluster cluster-id "{{ loopback['ipv4']|ipaddr('address') }}"
{% endif %}
    group:
{%  for c in ['ebgp','ibgp'] %}
    - group-name: "{{c}}"
      admin-state: enable
      import:
       policy: "accept_all"
      export:
       policy: "accept_all"
      next-hop-self: {{ bgp.next_hop_self|default(false)|lower }}
{%    if bgp.community[c]|default([]) %}
      send-communities:
       standard: "{{ ('standard' in bgp.community[c] or 'both' in bgp.community[c]) | to_yaml }}"
       extended: "{{ ('extended' in bgp.community[c] or 'both' in bgp.community[c]) | to_yaml }}"
       large: "{{ ('large' in bgp.community[c]) | to_yaml }}"
{%    endif %}
{%    if c=='ibgp' and bgp.rr|default('') and not n.rr|default('') %}
        route-reflector-client true
{%    endif %}

{%  endfor %}
    neighbor:
{%  for n in bgp.neighbors %}
{%  for af in ['ipv4','ipv6'] if n[af] is defined %}
    - ip-address: "{{ n[af] }}"
      description: "{{ n.name }}"
      peer-as: {{ n.as }}
      peer-group: "{{ n.type }}"
{%    if n.type=='ibgp' %}
      local-address: "{{ loopback[af]|ipaddr('address') }}"
{%    endif %}
{%  endfor %}
{%  endfor %}

- path: openconfig-routing-policy:routing-policy/policy-definitions
  val:
   policy-definition:
   - name: accept_all
     config:
      name: accept_all
     statements:
      statement:
      - name: "10"
        config:
         name: "10"
        actions:
         config:
          policy-result: ACCEPT_ROUTE
