{% macro community(list) -%}
{{ "both" if list|length >= 2 else list[0] }}
{%- endmacro %}
!
router bgp {{ bgp.as }}
  no bgp ebgp-requires-policy
  no bgp default ipv4-unicast
  bgp default show-hostname
  bgp default show-nexthop-hostname
{% if bgp.router_id|ipv4 %}
  bgp router-id {{ bgp.router_id }}
{% endif %}
{% if bgp.rr|default(False) and bgp.rr_cluster_id|default(False) %}
  bgp cluster-id {{ bgp.rr_cluster_id }}
{% endif %}
!
{#
    Create external peer group if we have at least one IPv6 LLA EBGP neighbor
#}
{% for n in bgp.neighbors if n.local_if is defined %}
{%   if loop.first %}
  neighbor external peer-group
  neighbor external remote-as external
{%   endif %}
{% endfor %}
{#
    Create neighbors
#}
{% for n in bgp.neighbors %}
{%   if n.local_if is defined %}
  neighbor {{ n.local_if }} interface peer-group external
  neighbor {{ n.local_if }} description {{ n.name }}
{%   endif %}
{%   for af in ['ipv4','ipv6'] if n[af] is defined and n[af] is string %}
  neighbor {{ n[af] }} remote-as {{ n.as }}
  neighbor {{ n[af] }} description {{ n.name }}
{%     if n.type == 'ibgp' %}
  neighbor {{ n[af] }} update-source lo
{%     endif %}
{%   endfor %}
{% endfor %}
{#
    Activate neighbors, set AF attributes
#}
{% for af in ['ipv4','ipv6'] if bgp[af] is defined %}
 address-family {{ af }} unicast
!
{%   if loopback[af] is defined and bgp.advertise_loopback %}
  network {{ loopback[af]|ipaddr(0) }}
{%   endif %}
!
{%   for l in interfaces|default([]) if l.bgp.advertise|default("") and l[af] is defined and not 'vrf' in l %}
  network {{ l[af]|ipaddr(0) }}
{%   endfor %}
!
{%   for pfx in bgp.originate|default([]) if af == 'ipv4' %}
  network {{ pfx|ipaddr('0') }}
{%   endfor %}
!
{%   for n in bgp.neighbors if n.activate[af] is defined and n.activate[af] %}
{%     set peer = n[af] if n[af] is string else n.local_if|default('') %}
{%     if peer %}
  neighbor {{ peer }} activate
{%       if n.type == 'ibgp' %}
{%         if bgp.next_hop_self is defined and bgp.next_hop_self %}
  neighbor {{ peer }} next-hop-self
{%         endif %}
{%         if bgp.rr|default('') and not n.rr|default('') %}
  neighbor {{ peer }} route-reflector-client
{%         endif %}
{%         if bgp.community.ibgp|default([]) %}
  neighbor {{ peer }} send-community {{ community(bgp.community.ibgp) }}
{%         endif %}
{%       else %}
{%         if bgp.community.ebgp|default([]) %}
  neighbor {{ peer }} send-community {{ community(bgp.community.ebgp) }}
{%         endif %}
{%       endif %}
{%     endif %}
!
{%   endfor %}
{% endfor %}
!
{% for pfx in bgp.originate|default([]) %}
ip route {{ pfx|ipaddr('0') }} Null0
{% endfor %}
do write
