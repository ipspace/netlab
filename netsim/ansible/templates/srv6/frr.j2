#!/bin/bash
#
set -e

export SRv6_DEV="sr0"

if [ ! -e /sys/devices/virtual/net/${SRv6_DEV} ]; then
ip link add ${SRv6_DEV} type dummy
ip link set ${SRv6_DEV} up
fi

# See https://onvox.net/2024/12/16/srv6-frr/
sysctl -w net.ipv6.seg6_flowlabel=1
sysctl -w net.ipv6.conf.all.seg6_enabled=1
sysctl -w net.vrf.strict_mode=1

#
# Rest of SRv6 configuration done through VTYSH
#
{# set srv6_src = srv6.locator|ipaddr('next_usable')|ipaddr('address') #}
cat >/tmp/srv6_config <<CONFIG

segment-routing
 srv6
  encapsulation
   source-address {{ loopback.ipv6|ipaddr('address') }}
  locators
   locator {{ inventory_hostname }}
    prefix {{ srv6.locator }}
    behavior usid
    format usid-f3216
   exit
   !
  exit
  !
 exit

{% if srv6.isis|default(False) %}
router isis {{ isis.instance }}
 no topology ipv6-unicast
 metric-style wide
 segment-routing srv6
   locator {{ inventory_hostname }}
   # node-msd max-end-d 8
   interface ${SRv6_DEV}
 exit
exit
{% endif %}

{% if srv6.bgp|default(False) and bgp.as is defined %}
router bgp {{ bgp.as }}
 segment-routing srv6
  locator {{ inventory_hostname }}
 exit
 !

{%   for vname,vdata in vrfs.items() %}
router bgp {{ vdata.as|default(bgp.as) }} vrf {{ vname }}
 sid vpn per-vrf export auto
 no bgp network import-check
!
{%   endfor %}

{% endif %}
do write
CONFIG
vtysh -f /tmp/srv6_config
exit 0
