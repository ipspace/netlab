{% if lag.mlag is defined %}
- set:
    interface:
      peerlink:
        bridge:
          domain:
            br_default:
              learning: off # As recommended by NVidia
        bond:
          member:
{% for intf in interfaces if intf.lag.mlag.peergroup is defined %}
            {{ intf.ifname }}: {}
{%   for ch in interfaces if ch.lag._peerlink|default(0) == intf.linkindex %}
            {{ ch.ifname }}: {}
{%   endfor %}
{% endfor %}
        type: peerlink
      peerlink.{{ lag.mlag.vlan }}:
        base-interface: peerlink
        type: sub
        vlan: {{ lag.mlag.vlan }}
    mlag:
      init-delay: 10
      backup:
{% if pools.mgmt.ipv4 | ansible.netcommon.network_in_usable(lag.mlag.peer_backup_ip) %}
        {{ lag.mlag.peer_backup_ip }}:
          vrf: mgmt
{% else %}
        {{ lag.mlag.peer_backup_ip }}: {}
{% endif %}
      enable: on
      mac-address: {{ lag.mlag.mac | hwaddr('linux') }}
      peer-ip: {{ lag.mlag.peer }}
{% endif %}

{% for i in interfaces if i.type == 'lag' %}
{%  if loop.first %}
- set:
    interface:
{%  endif %}
{%  for c in interfaces if c.lag._parentindex|default(None) == i.lag.ifindex %}
      {{ c.ifname }}:
        link:
          state:
            up: {}
{%  endfor %}
      {{ i.ifname }}:
{%  if i.mtu is defined %}
        link:
          mtu: {{ i.mtu }}
{%  endif %}
{# In case of MLAG, connect the bond interface to the bridge #}
{%  if '_mlag' in i.lag %}
        bridge:
          domain:
            br_default: {}
{%  endif %}
        bond:
{%  if '_mlag' in i.lag %}
          mlag:
            enable: on
            id: {{ i.lag.ifindex }}
{%  endif %}
{%  set _lacp = i.lag.lacp|default(lag.lacp) %}
{%  if _lacp=='slow' %}
          lacp-rate: slow
{%  elif _lacp=='off' %}
          mode: static
{%  endif %}
          member:
{%  for c in interfaces if c.lag._parentindex|default(None) == i.lag.ifindex %}
            {{ c.ifname }}: {}
{%  endfor %}
{% endfor %}
