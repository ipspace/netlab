{% macro ip_addr(v,ip,ifname) %}
{% set _ip = ip|ipaddr('address') %}
{% set _pre = ip|ipaddr('prefix') %}
   ipv{{v}}:
{% if v=='4' %}
    primary:
     address: "{{ _ip }}"
     prefix-length: {{ _pre }}
{% else %}
    address:
    - ipv6-address: "{{ _ip }}"
      prefix-length: {{ 128 if ifname=='system' else _pre }}
{% endif %}
{% endmacro %}

{% macro interface(name,desc,ip_v4,ip_v6,port,l) -%}
{% set base_path = "router[router-name=Base]" if l.vrf is not defined else "service/vprn[service-name="+l.vrf+"]" %}

{# Minimal service config must exist #}
{% if l.vrf is defined %}
- path: configure/{{ base_path }}
  val:
   service-id: {{ vrfs[l.vrf].vrfidx }}
   customer: "1"
   admin-state: enable
{% endif %}

- path: configure/{{ base_path }}/interface[interface-name={{name}}]
  val:
   admin-state: enable
   description: "{{ desc }}"
{% if port %}
{%  if l.vrf is defined %}
   sap: 
   - sap-id: "{{ port }}:0"
{%  else %}
   port: "{{ port }}"
{%  endif %}
{% elif name!='system' %}
   loopback: {{ True if l.vrf is defined else [null] }}
{% endif %}
{% if ip_v4|ipv4 %}
{{  ip_addr('4',ip_v4,name) }}
{% elif ip_v4 == True %}
   ipv4:
    unnumbered:
{%  if l.vrf is defined and loopback.ipv4|default('')|ipv4 %}
     ip-address: {{ loopback.ipv4|ipaddr('address') }}
{%  else %}
     system: [null]
{%  endif %}
{% endif %}
{% if ip_v6|ipv6 %}
{{ ip_addr('6',ip_v6,name) }}
{% elif ip_v6 == True %}
   ipv6: { }
{% endif %}
{%- endmacro -%}

updates:
{% if 'ixr' in clab.type %}
- path: configure/system/resource
  val:
   ecmp-profile:
   - profile-id: 1
     type: ip # or mpls
     links: 16
     groups: 64
{% endif %}

{# Enable ECMP=64 by default #}
- path: configure/router[router-name=Base]
  val:
   ecmp: {{ 1 if 'ixr' in clab.type else 64 }}

{% if loopback.ipv4|default('')|ipv4 or 'ipv6' in loopback %}
{% set _v4 = loopback.ipv4|default(False) %}
{% set _v6 = loopback.ipv6|default(False) %}
{# The interface name 'system' is special, also used for IP unnumbered #}
{{ interface("system","system interface",_v4,_v6,'',loopback) }}
{% endif %}

{% for l in (interfaces|default([]))  %}
{% set v4 = l.ipv4|default(False) %}
{% set v6 = l.ipv6|default(False) %}

{% if l.name is defined %}
{% set desc = l.name|replace('->','~') + " (" + l.role|default('') + ")" %}
{% elif l.type|default("") == "stub" %}
{% set desc = "Stub interface" %}
{% endif %}

{% set portname = l.ifname %}
{% if l.type not in ['loopback','stub'] %}
{%  if 'c' in l.ifname %}
- path: configure/port[port-id={{l.ifname}}]
  val:
   connector:
    breakout: "c1-100g"
{%  set portname = l.ifname + '/1' %}
- path: configure/port[port-id={{ portname }}]
  val:
{% endif %}
   ethernet:
{%  if l.mtu is defined and l.mtu <= (9800-14) %}
    mtu: {{ l.mtu + 14 }} # max 9800
{%  endif %}
{%  if l.vrf is defined %}
    mode: hybrid
    encap-type: dot1q
{%  else %}
    mode: network
{%  endif %}
{% endif %}

{% if v4 or v6 %}
{% if l.type not in ['loopback','stub'] %}
{{ interface('i'+l.ifname,desc,v4,v6,portname,l) }}
{% else %}
{{ interface(l.ifname if l.type=='loopback' else "stub-"+l.ifname,desc,v4,v6,None,l) }}
{% endif %}

{% elif l.type not in ['loopback','stub'] %}
- path: configure/port[port-id={{ portname }}]
  val:
   ethernet:
    mode: access # no IP, assume this is an access port for now
{% endif %}
{% endfor %}
