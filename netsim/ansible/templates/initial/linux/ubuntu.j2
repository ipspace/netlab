# It seems on the Vagrant box for ubuntu 20.04, DNS Servers are hardcoded as 4.2.2.1 & Co.
# This is annoying on a network with filtered DNS.
# DNSMasq server used for giving out DHCP addresses on the management network is able to act as a DNS Server.
# Let's use that.
#
# (Overwrite netplan config to remove DNS stuff)
echo -n 'Starting initial config ' && date
cat <<SCRIPT >/etc/netplan/01-netcfg.yaml
network:
  version: 2
  renderer: networkd
  ethernets:
    eth0:
      dhcp4: true
      dhcp6: false
      optional: true
SCRIPT
netplan apply

# (Overwrite resolved config to remove DNS stuff)
cat <<SCRIPT > /etc/systemd/resolved.conf 
[Resolve]
DNS=
FallbackDNS=
Domains=
DNSOverTLS=no
Cache=yes
DNSStubListener=yes
SCRIPT

systemctl restart systemd-resolved

# Set persistent hostname
hostnamectl set-hostname {{ inventory_hostname }}

NEED_APT_UPDATE=YES
{% if netlab_net_tools|default(False) %}
#
# Install net-tools (arp, route...)
#
if which arp; then
  echo "net-tools already installed"
else
  apt-get update -qq
  apt-get install -qq net-tools
  NEED_APT_UPDATE=
fi
if which traceroute; then
  echo "traceroute already installed"
else
  if "$NEED_APT_UPDATE"; then
    apt-get update -qq
  fi
  apt-get install -qq traceroute
  NEED_APT_UPDATE=
fi
{% endif %}
{% if netlab_lldp_enable|default(False) %}
#
# Enable LLDP
#
if systemctl is-active --quiet lldpd.service; then
  echo "LLDP already installed"
else
  if "$NEED_APT_UPDATE"; then
    apt-get update -qq
    NEED_APT_UPDATE=
  fi
  apt-get install -qq lldpd
fi

cat <<CONFIG >/etc/lldpd.d/system.conf
configure lldp tx-interval 30
configure lldp tx-hold 3
configure system interface pattern *,!eth0,eth*
CONFIG
systemctl enable lldpd
systemctl restart lldpd
{% endif %}

# Sysctl settings: IPv4/IPv6 forwarding, IPv6 LLA
#
{% set pkt_fwd = "1" if role|default("host") == "router" else "0" %}
cat <<SCRIPT > /etc/sysctl.d/10-netsim.conf
net.ipv4.ip_forward={{ pkt_fwd }}
net.ipv6.conf.all.forwarding={{ pkt_fwd }}

{%   if loopback.ipv6 is defined %}
net.ipv6.conf.lo.disable_ipv6=0
{%   endif %}
{% for l in interfaces|default([]) %}
{%   if l.ipv6 is defined %}
net.ipv6.conf.{{ l.ifname }}.disable_ipv6=0
{%   endif %}
{% endfor %}

SCRIPT
sysctl -p /etc/sysctl.d/10-netsim.conf

# Loopback addressing
{% if loopback.ipv4 is defined or loopback.ipv6 is defined %}
cat <<SCRIPT > /etc/netplan/02-loopback.yaml
network:
  version: 2
  renderer: networkd
  ethernets:
    lo:
      addresses:
{%   if 'ipv4' in loopback %}
        - {{ loopback.ipv4 }}
{%   endif %}
{%   if 'ipv6' in loopback %}
        - {{ loopback.ipv6 }}
{%   endif %}
SCRIPT
{% endif %}

# Interface addressing and bonds
{% for l in interfaces|default([]) if (l.ipv4 is defined or l.ipv6 is defined or l.dhcp is defined or l.type in ['lag','bond'])%}
cat <<SCRIPT > /etc/netplan/03-eth-{{ l.ifname }}.yaml
network:
  version: 2
  renderer: networkd
  ethernets:
{%   if l.type in ['lag','bond'] %}
{%     if l.type=='lag' %}
{%       for i in interfaces if i.lag._parentindex|default(0)==l.linkindex %}
    {{ i.ifname }}:
      dhcp4: no
{%       endfor %}
{%     elif l.bonding.members is defined %}
{%       for m in l.bonding.members %}
    {{ m }}:
      dhcp4: no
{%       endfor %}
{%     endif %}
  bonds:
    {{ l.ifname }}:
      interfaces:
{%     if l.type=='lag' %}
{%       for i in interfaces if i.lag._parentindex|default(0)==l.linkindex %}
        - {{ i.ifname }}
{%       endfor %}
{%     elif l.bonding.members is defined %}
{%       for m in l.bonding.members %}
        - {{ m }}
{%       endfor %}
{%     endif %}
{%     set _m = l.lag.mode|default(l.bonding.mode|default("802.3ad")) %}
      parameters:
        mode: {{ _m }}
{%     if _m=='802.3ad' %}
        lacp-rate: {{ l.lag.lacp|default('fast') }}
{%     elif l.bonding.primary is defined %}
        primary: {{ l.bonding.primary }}
{%     endif %}
        mii-monitor-interval: 100
        transmit-hash-policy: encap3+4
{%   else %}
    {{ l.ifname }}:
{%     if l.mtu is defined %}
      mtu: {{ l.mtu }}
{%     endif %}
{%   endif %}
{%   if l.dhcp.client.ipv4|default(False) %}
      dhcp4: true
{%   endif %}
{%   if l.dhcp.client.ipv6|default(False) %}
      dhcp6: true
{%   endif %}
{%   for af in ('ipv4','ipv6') if af in l and l[af] is string %}
{%     if loop.first %}
      addresses:
{%     endif %}
        - {{ l[af] }}
{%   endfor %}
SCRIPT
{% endfor %}

{% if routing.static|default([]) %}
# Add IPv4 static routes
cat <<SCRIPT > /etc/netplan/04-routes.yaml
network:
  version: 2
  renderer: networkd
  ethernets:
{%   for intf in routing.static|map(attribute='nexthop.intf',default='')|unique if intf %}
    {{ intf }}:
      routes:
{%     for sr_entry in routing.static|default([]) if sr_entry.nexthop.intf|default('') == intf %}
{%       for sr_af in ['ipv4','ipv6'] if sr_af in sr_entry %}
      - to: {{ sr_entry[sr_af] }}
        via: {{ sr_entry.nexthop[sr_af] }}
{%       endfor %}
{%     endfor %}
{%   endfor %}
SCRIPT
{% endif %}

echo -n 'Starting netplan generate ' && date
netplan generate
echo -n 'Starting netplan apply ' && date
nohup netplan apply &
