{% import "templates/routing/_redistribute.cumulus_nvue.j2" as redistribute with context %}
- set:
    router:
      ospf:
        enable: on

{% macro vrf_ospf(vrfname,vrf) %}
{%   set _ospf = vrf.ospf %}
{%   set _intfs = _ospf.interfaces|default([]) %}
{%   if _intfs!=[] %}
- set:
    vrf:
      {{ vrfname }}:
        router:
          ospf:
            enable: on
            area: 
              {{ _ospf.area|default(ospf.area) }}: {}
{{     redistribute.config(_ospf,af='ipv4')|indent(12,first=True) }}
{%     if _ospf.reference_bandwidth is defined %}
            reference-bandwidth: {{ _ospf.reference_bandwidth }}
{%     endif %}
{%     if 'router_id' in _ospf %}
            router-id: {{ _ospf.router_id }}
{%     endif %}
{%     if _ospf.default is defined %}
            default-originate:
              enable: on
              always: {{ 'on' if _ospf.default.always|default(False) else 'off' }}
{%       if _ospf.default.cost is defined %}
              metric: {{ _ospf.default.cost }}
{%       endif %}
{%       if _ospf.default.type is defined %}
              metric-type: {{ 1 if _ospf.default.type == 'e1' else 2 }}
{%       endif %}
{%       if _ospf.default.policy is defined %}
              route-map: "{{ _ospf.default.policy }}"
{%       endif %}
{%     endif %}

{%     for l in _intfs if l.type!='loopback' or l.vrf is not defined %}
{%       if loop.first %}
    interface:
{%       endif %}
      {{ l.ifname }}:
        router:
          ospf:
            area: {{ l.ospf.area|default(ospf.area) }}
{%       if l.ospf.cost is defined %}
            cost: {{ l.ospf.cost }}
{%       endif %}
            network-type: {{ l.ospf.network_type|default('broadcast') }}
{%       if l.ospf.passive | default(False) %}
            passive: on
{%       endif %}
{%       if l.ospf.timers is defined %}
            timers:
{%         if l.ospf.timers.dead is defined %}
              dead-interval: {{ l.ospf.timers.dead }}
{%         endif %}              
{%         if l.ospf.timers.hello is defined %}
              hello-interval: {{ l.ospf.timers.hello }}
{%         endif %}
{%       endif %}
{%       if l.ospf.priority is defined %}
            priority: {{ l.ospf.priority }}
{%       endif %}
{%     endfor %}

{%   else %}
# No OSPF interfaces in VRF {{ vrfname }}
{%   endif %} 
{% endmacro %}

{% if ospf is defined %}
{% set _lo = [ loopback ] if 'ospf' in loopback and 'ipv4' in loopback else [] %}
{% set _ospf_intfs = _lo + interfaces|default([])|selectattr('ospf','defined')|list %}
{{ vrf_ospf("default", { 'ospf': ospf | combine( { 'interfaces': _ospf_intfs } ) } ) }}
{% endif %}
