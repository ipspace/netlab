{% from "templates/initial/sros.j2" import if_name with context %}
{% set pid = ospf.process|default(0) %}

{% macro ospf_config(af) %}
{% set ospfv = 'ospf3' if af=='ipv6' else 'ospf' %}

{% macro ospf_interface(l) %}
- path: configure/router[router-name=Base]/{{ospfv}}[ospf-instance={{pid}}]
  val:
   area:
   - area-id: "{{ l.ospf.area }}"
     interface:
     - interface-name: "{{ if_name(l.ifname) }}"
       passive: {{ l.ospf.passive }}
{%  if l.ospf.bfd|default(False) %}
       bfd-liveness: { }
{%  endif %}
       # mtu: 1500 # SRL defaults to 1500, now supporting global mtu settings
{# TODO: Add support for multi-area adjacencies and 'secondary' interface-type #}
{%  if l.ospf.network_type|default("") in ["broadcast","non-broadcast","point-to-point"] %}
       interface-type: "{{ l.ospf.network_type }}"
{%  endif %}
{%  if l.ospf.cost is defined %}
       metric: {{ l.ospf.cost }}
{%  endif %}
{% endmacro %}

- path: configure/router[router-name=Base]
  val:
   router-id: "{{ ospf.router_id }}"
   {{ ospfv }}:
   - ospf-instance: {{ pid }}
{% if ospf.reference_bandwidth is defined %}
     reference-bandwidth: {{ ospf.reference_bandwidth * 1000 }} # in kbps
{% endif %}
     admin-state: enable
     area:
     - area-id: "{{ ospf.area }}"
       interface:
       - interface-name: "system"
         passive: True
{% for l in interfaces|default([]) if 'ospf' in l %}
{{ ospf_interface(l)}}
{% endfor %}
{% endmacro %}

updates:
{% if ospf.af.ipv4 is defined %}
{{ ospf_config('ipv4') }}
{% endif %}
{% if ospf.af.ipv6 is defined %}
{{ ospf_config('ipv6') }}
{% endif %}
