! First of all, create association VLAN<->Virtual-Network
{% if vlans is defined %}
{%   for vlan_name, vlan in vlans.items() %}
virtual-network {{ vlan.id }}
 exit
clear virtual-network {{ vlan.id }} counters
!
interface vlan {{ vlan.id }}
 description "VLAN {{ vlan_name }}"
 virtual-network {{ vlan.id }}
 exit
{%   endfor %}
{% endif %}
!

{# Check if the platform default vlan 1 is used as tagged on a trunk - if so, change the default #}
{% for ifdata in interfaces if 1 in ifdata.vlan.trunk_id|default([]) %}
{%   if loop.first %}
{%     set used_vlans = vlans.values()|map(attribute='id')|list %}
{%     set new_default = range(2,4094)|difference(used_vlans)|last %}
interface vlan {{ new_default }}
 description "New default internal untagged vlan instead of platform default 1"
!
default vlan-id {{ new_default }}
{%   endif %}
{% endfor %}

{% for ifdata in interfaces if ifdata.vlan is defined %}
!
interface {{ ifdata.ifname }}
{%   if ifdata.vlan.trunk_id is defined %}
{%     set native_vlan = ifdata.vlan.access_id if ifdata.vlan.native is defined else None %}
 switchport mode trunk
{%     if native_vlan %}
 switchport access vlan {{ native_vlan }}
{%     else %}
 no switchport access vlan
{%     endif %}
 switchport trunk allowed vlan {{ ifdata.vlan.trunk_id|difference([native_vlan])|sort|join(",") }}
{%   elif ifdata.vlan.access_id is defined %}
 switchport mode access
 switchport access vlan {{ ifdata.vlan.access_id }}
{%   endif %}
{% endfor %}
