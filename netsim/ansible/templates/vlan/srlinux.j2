{% from "templates/initial/srlinux.j2" import ip_addresses with context %}

updates:
{# Create mac-vrfs for L2 VLANs, add IRB interface if any #}
{% if vlans is defined %}
{% for vname,vdata in vlans.items() if vdata.mode|default('irb') != 'route' %}
{# Use only vlan.id in name, such that svi interfaces can be associated #}
- path: network-instance[name=vlan{{ vdata.id }}]
  val:
   type: mac-vrf
   description: "VLAN {{ vname }}"
{% endfor %}
{% endif %}

{% macro vlan_tag(vid,is_native=False) %}
     vlan:
      encap:
{%     if not is_native %}
       single-tagged:
        vlan-id: "{{ vid }}"
{%     else %}
{# Untagged only allowed for bridged vlans, routing via irb interface #}
       untagged: { }
{%     endif %}
{% endmacro %}

{% macro add_interface(macvrf,ifname,vlan,i) %}
{% if i.vlan.trunk_id is defined %}
{%  set native = i.vlan.native|default('*not set*') %}
{%  for v in i.vlan.trunk %}
{%   set type = 'bridged' if v==native or vlans[v].mode=='bridge' else 'routed' %}
- path: interface[name={{ifname}}]
  val:
   vlan-tagging: True
   description: "Trunk port native={{native}}"
   subinterface:
   - index: {{ vlans[v].id }}
     type: {{ type }}
     description: "vlan {{v}}"
{{   vlan_tag( vlans[v].id, v==native ) }}

{% if type == 'bridged' %}
- path: network-instance[name={{ macvrf }}]
  val:
   interface:
   - name: {{ ifname }}.{{ vlan }}
{% endif %}
{%  endfor %}

{% elif i.type in ['vlan_member','lan'] %}
- path: interface[name={{ifname}}]
  val:
{% if i.type == 'vlan_member' %}
   vlan-tagging: True
{% endif %}
   subinterface:
   - index: {{ vlan }}
     description: {{ i.name|default("not provided")|replace('->','~')|regex_replace('[\\[\\]]','') }}
{%   if ifname!="irb0" %}
     type: {{ 'bridged' if i.vlan.mode|default('irb')!='route' else 'routed' }}
{%   endif %}
{% if i.type == 'vlan_member' and (i.parent_ifindex is not defined or 
   (interfaces[i.parent_ifindex-1].vlan is not defined or interfaces[i.parent_ifindex-1].vlan.trunk_id is not defined)) %}
{{   vlan_tag( i.vlan.access_id ) }}
{% endif %}
{% endif %}

{% if i.vlan.mode|default('irb') != 'route' or ifname=="irb0" %}
- path: network-instance[name={{ macvrf }}]
  val:
   interface:
   - name: {{ ifname }}.{{ vlan }}
{% endif %}
{% if 'ipv4' in i or 'ipv6' in i %}
{{  ip_addresses(ifname,vlan,i) }}

- path: network-instance[name={{ i.vrf|default('default') }}]
  val:
   type: {{ 'default' if i.vrf|default('default')=='default' else 'ip-vrf' }}
   interface:
   - name: {{ ifname }}.{{ vlan }}
{% endif %}
{% endmacro %}

{% for l in interfaces|default([]) if l.vlan is defined %}
{%  if l.type in ['svi'] and l.vlan.mode|default('irb') == 'irb' %}
{%    set vlan = l.ifname[4:]|int %}
{{    add_interface( l.ifname, "irb0", vlan, l ) }}
{%  elif l.type in ['lan','vlan_member'] %}
{%    set vlan = l.vlan.access_id %}
{{    add_interface( "vlan" + vlan|string, l.parent_ifname|default(l.ifname), vlan, l ) }}
{%  endif %}
{% endfor %}
