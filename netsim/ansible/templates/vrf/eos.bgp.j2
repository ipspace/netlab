{% import "eos.bgp-macro.j2" as bgpcfg %}
{% import "templates/routing/_redistribute.eos.j2" as redistribute with context %}
!
mpls ip
!
router bgp {{ bgp.as }}
{% for vname,vdata in vrfs.items() %}
!
 vrf {{ vname }}
  router-id {{ vdata.bgp.router_id|default(bgp.router_id) }}
  rd {{ vdata.rd }}
{%   for af in ['ipv4','ipv6'] if af in vdata.af|default({}) %}
{%     if 'evpn' not in module %}
{%       for rt in vdata.import %}
  route-target import vpn-{{ af }} {{ rt }}
{%       endfor %}
{%       for rt in vdata.export %}
  route-target export vpn-{{ af }} {{ rt }}
{%       endfor %}
{%     endif %}
{%   endfor %}
{%   for n in vdata.bgp.neighbors|default([]) %}
{%     for af in ['ipv4','ipv6'] if n[af] is defined %}
{{       bgpcfg.neighbor(n,af,bgp) }}
{%     endfor %}
{%   endfor %}
{%   for af in ['ipv4','ipv6'] if af in vdata.af|default({}) %}
!
  address-family {{ af }}
{{     redistribute.config(vdata.bgp,af=af)|indent(2,first=True) }}
{%     for n in vdata.networks|default([]) if af in n %}
    network {{ n[af]|ipaddr('0') }}
{%     endfor %}
{%     for n in vdata.bgp.neighbors|default([]) if n[af] is defined %}
{%       set peer = 'ebgp_intf_' + n.local_if if n.local_if is defined else n[af] %}
    neighbor {{ peer }} activate
{%       if n.local_if is defined and af == 'ipv4' %}
    neighbor {{ peer }} next-hop address-family ipv6 originate
{%       endif %}
{%     endfor %}
{%   endfor %}
{% endfor %}
