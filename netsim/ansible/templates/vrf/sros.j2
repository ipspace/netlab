{% from "templates/bgp/sros.gnmi.macro.j2" import bgp_config with context %}
{% from "templates/ospf/sros.j2" import ospf_config with context %}

updates:
{% for vname,vdata in vrfs.items() %}

- path: configure/service/vprn[service-name={{ vname }}]
  val:
   service-id: {{ vdata.vrfidx }}
   customer: "1"
   autonomous-system: {{ bgp.as|default(vrf.as) }}
   router-id: {{ vdata.bgp.router_id|default(bgp.router_id if bgp is defined else loopback.ipv4|ipaddr('address')) }}
   ecmp: {{ 1 if 'ixr' in clab.type else 64 }}
   admin-state: enable

{% if mpls is defined and 'vpn' in mpls %}
   bgp-ipvpn:
     mpls:
      admin-state: enable
      route-distinguisher: "{{ vdata.rd }}"
      vrf-target:
       export-community: "target:{{ vdata.export[0] }}" # For now a single community, TODO import policy
       import-community: "target:{{ vdata.import[0] }}"
      auto-bind-tunnel:
       resolution: "any"
       ecmp: {{ 2 if 'ixr' in clab.type else 32 }}
{% endif %}

{% if vdata.bgp is defined %}
{{ bgp_config(vdata.bgp,vname) }}
{% endif %}

{% if 'ospf' in vdata %}
{%  for af in ['ipv4','ipv6'] %}
{%   if af in vdata.af and vdata.af[af] %}
{{ ospf_config(af,vdata.ospf,vdata.ospf.interfaces,False) }}
{%   endif %}
{%  endfor %}
{% endif %}

{% endfor %}
