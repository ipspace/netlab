{% from "templates/bgp/sros.gnmi.macro.j2" import bgp_config with context %}
{% from "templates/ospf/sros.j2" import ospf_config,ospf_export_policy with context %}
{% from "templates/isis/sros.j2" import isis_router with context %}

updates:
{% for vname,vdata in vrfs.items() %}
- path: configure/service/vprn[service-name={{ vname }}]
  val:
    service-id: {{ vdata.vrfidx }}
    customer: "1"
    autonomous-system: {{ bgp.as|default(vrf.as) }}
    router-id: {{ vdata.bgp.router_id|default(bgp.router_id if bgp is defined else loopback.ipv4|ipaddr('address')) }}
    ecmp: {{ 1 if 'ixr' in clab.type else 64 }}
    admin-state: enable
{%   if '_leaked_routes' in vdata %}
    allow-export-bgp-vpn: true
{%   endif %}
{%   if vdata.bgp is defined and 'af' in vdata %}
{{     bgp_config(vname,vdata.bgp,vdata) }}
{%   endif %}

{%   if 'ospf' in vdata and 'af' in vdata %}
{%     for rtg_af in ['ipv4','ipv6'] %}
{%       if vdata.ospf.af[rtg_af]|default(False) %}
{{         ospf_config(rtg_af,vdata.ospf,vdata.ospf.interfaces,vname) }}
{%       endif %}
{%     endfor %}
{%   endif %}
{%   if 'isis' in vdata and 'af' in vdata %}
{{     isis_router(vdata.isis,vdata.isis.interfaces,vname) }}
{%   endif %}
{% endfor %}
