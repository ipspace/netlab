updates:
- path: network-instance[name=default]/protocols/isis
  val:
   instance:
   - name: Gandalf
     admin-state: enable
     net: [ "{{ isis.net | default( "%s.0000.0000.%04d.00" % (isis.area,id) ) }}" ]
     level-capability: "{{ 'L2' if isis.type=='level-2' else 'L1' if isis.type=='level-1' else 'L1L2' }}"
{%   if isis.ipv6 is defined %}
     ipv6-unicast:
      admin-state: enable
      multi-topology: {{ 'sr' not in module }}
      _annotate_multi-topology: "Not supported in combination with SR"
{%   endif %}
     interface:
     - interface-name: {{ 'system0.0' if 'sr' in module else 'lo0.0' }}
       passive: True
       ipv4-unicast:
        admin-state: {{ 'enable' if 'ipv4' in loopback else 'disable' }}
       ipv6-unicast:
        admin-state: {{ 'enable' if 'ipv6' in loopback else 'disable' }}

{%   for l in links|default([]) %}
{%    if "external" in l.role|default("") %}
     # IS-IS not configured on external interface {{ l.ifname }}
{%    else %}
     - interface-name: {{ l.ifname }}.0
       circuit-type: {{ 'point-to-point' if l.type|default("") == "p2p" else 'broadcast' }}
       passive: {{ l.type|default("") == "stub" or l.role|default("NONE") in ["stub","passive"] }}
{%     if l.isis.metric is defined or l.isis.cost is defined %}
       level:
       - level-number: 1
         metric-style: wide
         metric: {{ l.isis.metric|default(l.isis.cost) }}
       - level-number: 2
         metric-style: wide
         metric: {{ l.isis.metric|default(l.isis.cost) }}
{%     endif %}
{%    endif %}
{%   endfor %}
