- block:
  - name: Define script filename and check whether to execute in netns
    vars:
      salt: "{{ lookup('password','/dev/null length=8 chars=ascii_letters') }}"
    set_fact:
      in_host_script: /tmp/config-{{ inventory_hostname }}_{{ netsim_action }}.sh
      uniq_script: /tmp/config-{{ salt }}-{{ inventory_hostname }}_{{ netsim_action }}.sh
      use_netns: "{{ config_template.endswith('-clab.j2') }}"
  
  - name: "Create container setup script from {{ config_template }}"
    template:
      src: "{{ config_template }}"
      dest: "{{ uniq_script }}"
    delegate_to: localhost      # Run on controller, to avoid dependency on Python
  
  #
  # Option 1: Run inside the container
  #
  - block:
    - name: Copy template file into running container
      shell: docker cp {{ uniq_script }} {{ ansible_host }}:{{ in_host_script }}
      delegate_to: localhost
  
    - name: "Execute {{ in_host_script }} to deploy {{ netsim_action }} config from {{ config_template }}"
      delegate_to: "{{ inventory_hostname }}"
      raw: "{{ docker_shell|default('sh') }} {{ in_host_script }}"
  
    when: not use_netns
  
  #
  # Option 2: Run on the host, within the container netns
  #
  - name: "Initial container configuration via {{ uniq_script }} running in netns"
    when: use_netns
    shell: |
      set -e
      ip netns exec {{ ansible_host }} bash {{ uniq_script }}
    become: true
    delegate_to: localhost
  
  - file:
      path: "{{ uniq_script }}"
      state: absent
    delegate_to: localhost

  tags: [ print_action, always ]
