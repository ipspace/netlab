# - template:
#     src: "{{ config_template }}"
#     dest: /tmp/config.sh
# - set_fact: deployed_config={{ lookup('template',config_template) }}
# - command: bash /tmp/config.sh
#   become: true
#   when: not ansible_check_mode and ("#!/bin/bash" in deployed_config)
# - command: vtysh -f /tmp/config.sh
#   become: true
#   when: not ansible_check_mode and not ("#!/bin/bash" in deployed_config)

- local_action:
    module: tempfile
    state: file
    suffix: temp
    prefix: ansible.{{ inventory_hostname }}.
  register: tempfile_1

- local_action:
    module: template
    src: "{{ config_template }}"
    dest: "{{ tempfile_1.path }}"

- local_action:
    module: command
    cmd: "scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null {{ tempfile_1.path }} linuxadmin@{{ ansible_host }}:config.json"

- community.network.sros_command:
    commands: /load config.json
    provider:
      host: "{{ ansible_host }}"
      username: "{{ ansible_user }}"
      password: "{{ ansible_ssh_pass }}"
      transport: cli

- local_action:
    module: file
    path: "{{ tempfile_1.path }}"
    state: absent
  when: tempfile_1.path is defined
