---
- name: Set netlab_vdom_enabled variable
  ansible.builtin.set_fact:
    netlab_vdom_is_enabled: "{{ netlab_vdom is defined and netlab_vdom != vdom }}"

- name: Enable multi-VDOM mode if a traffic VDOM is defined
  fortinet.fortios.fortios_system_global:
    vdom: "{{ vdom }}"
    system_global:
      management_vdom: "{{ vdom }}"
      vdom_mode: multi-vdom
      hostname: '{{ inventory_hostname.replace("_","-") }}'
  register: vdom_mode_result
  when: netlab_vdom_is_enabled

- name: Ensure FortiGate is ready after VDOM mode change
  block:
  - name: Wait 60 seconds after VDOM mode change
    ansible.builtin.wait_for:
      host: "{{ ansible_host }}"
      port: 443
      timeout: 180
      sleep: 10     # time in seconds between checks
      delay: 60     # Initial delay in seconds before first check
      state: started
  - name: Test FortiGate API readiness after VDOM mode change
    fortinet.fortios.fortios_system_global:
      vdom: "{{ vdom }}"
      system_global:
        hostname: '{{ inventory_hostname.replace("_","-") }}'
    register: hostname_result
    retries: 5
    delay: 10       # Initial delay and waiting time between retries
    until: hostname_result is not failed and hostname_result.meta.http_status == 200
  when: >-
    vdom_mode_result.meta is defined and
    (vdom_mode_result.meta.http_status == 200 and vdom_mode_result.meta.revision_changed)

- name: Ensure `{{ vdom }}` VDOM is set as admin
  fortinet.fortios.fortios_system_settings:
    vdom: "{{ vdom }}"
    system_settings:
      vdom_type: admin
  when: netlab_vdom_is_enabled

- name: Configure `{{ netlab_vdom }}` virtual domain
  fortinet.fortios.fortios_system_vdom:
    vdom: "{{ vdom }}"
    state: present
    system_vdom:
      name: "{{ netlab_vdom }}"
  when: netlab_vdom_is_enabled

- name: Configure global attributes
  fortinet.fortios.fortios_system_global:
    vdom: "{{ netlab_vdom }}"
    system_global:
      hostname: '{{ inventory_hostname.replace("_","-") }}'

- name: Turn off LLDP on management interface
  fortinet.fortios.fortios_system_interface:
    vdom: "{{ vdom }}"
    state: "present"
    system_interface:
      interface: "{{ mgmt_if }}"
      lldp_reception: "disable"
      lldp_transmission: "disable"
      name: "{{ mgmt_if }}"

- name: Configure loopback interface
  fortinet.fortios.fortios_system_interface:
    vdom: "{{ netlab_vdom }}"
    state: "present"
    system_interface:
      interface: "loopback0"
      ip: "{{ loopback.ipv4 | default(omit) }}"
      name: "loopback0"
      type: "loopback"
      vdom: "{{ netlab_vdom }}"
      allowaccess: "ping"
  when: loopback is defined

- name: Configure loopback ipv6 address
  fortinet.fortios.fortios_system_interface:
    vdom: "{{ netlab_vdom }}"
    state: "present"
    system_interface:
      interface: "loopback0"
      ipv6:
        ip6_address: "{{ loopback.ipv6 }}"
        ip6_mode: "static"
      name: "loopback0"
      vdom: "{{ netlab_vdom }}"
  when: loopback.ipv6 is defined

- name: Configure physical interfaces
  fortinet.fortios.fortios_system_interface:
    vdom: "{{ netlab_vdom }}"
    state: "present"
    system_interface:
      alias: '{{ interface.name.replace(">","-") | default(omit) }}'
      estimated_upstream_bandwidth: "{{ interface.bandwidth | default(omit) }}"
      estimated_downstream_bandwidth: "{{ interface.bandwidth | default(omit) }}"
      interface: "{{ interface.ifname }}"
      ip: "{{ interface.ipv4 | default(omit) }}"
      lldp_reception: "enable"
      lldp_transmission: "enable"
      mode: "static"
      mtu: "{{ interface.mtu | default(mtu) }}"
      mtu_override: "enable"
      name: "{{ interface.ifname }}"
      macaddr: "52:dc:ca:fe:{{ id }}:{{ interface.ifindex }}"
      type: "physical"
      vdom: "{{ netlab_vdom }}"
      allowaccess: "ping"
  with_items: "{{ interfaces }}"
  when: interface.ifname != "{{ mgmt_if }}"
  loop_control:
    loop_var: interface

- name: Configure interface ipv6 addresses
  fortinet.fortios.fortios_system_interface:
    vdom: "{{ netlab_vdom }}"
    state: "present"
    system_interface:
      interface: "{{ interface.ifname }}"
      ipv6:
        ip6_address: "{{ interface.ipv6 }}"
        ip6_mode: "static"
        ip6_allowaccess: "ping"
        ip6_send_adv: "enable"
        ra_send_mtu: "enable"
      name: "{{ interface.ifname }}"
      vdom: "{{ netlab_vdom }}"
  with_items: "{{ interfaces }}"
  when: interface.ipv6 is defined
  loop_control:
    loop_var: interface
