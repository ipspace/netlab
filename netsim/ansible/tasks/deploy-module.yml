#
# Deploy module-specific configuration (specified in "config_module") to a device
#
# WARNING:
# ========
# To work around Ansible "optimization" attempts, the deploy-module is called for
# all modules specified in global netlab_module list.
#
# The module might not be applicable to the current device, that's why the whole
# task list is wrapped into a "block/when" construct.
#
# OTHER TRICKS
# ============
# The code is executed only when the 'module' tag is set, but once we decide to
# include the configuration task list for the device, it MUST be executed, so
# we apply the 'always' tag to all tasks in the included task list.
#
---
- name: "Figure out whether to deploy the module {{ config_module }} on current device"
  set_fact:
    do_deploy:
      "{{ (config_module in module|default([]) and
         config_module not in _daemon_config|default([]))
         or config_module == 'initial' }}"
    node_provider: "{{ provider|default(netlab_provider) }}"

- block:
  - name: "Find configuration template for {{ config_module }}"
    set_fact:
      config_template: "{{ lookup('first_found',params,errors='ignore') }}"
    vars:
      params:
        paths: "{{ paths }}"
        files: "{{ paths_t_files.files }}"

  - name: "Print deployed configuration when running in verbose mode"
    debug:
      msg: |
        {{ config_module }} configuration for {{ inventory_hostname }}
        =========================================
        {{ lookup('template',config_template or paths[0]+'/missing.j2') }}
    when: ansible_verbosity and config_template

  - name: "Find configuration deployment deploy_script for {{ config_module }}"
    set_fact:
      deploy_script: "{{ lookup('first_found',params,errors='ignore') }}"
    vars:
      params:
        paths: "{{ paths_deploy.dirs }}"
        files: "{{ paths_deploy.files }}"

  - name: "Deploy {{ config_module }} configuration"
    include_tasks: "{{ deploy_script }}"
    when: do_deploy and deploy_script
    args:
      apply:
        vars:
          config_template: "{{ config_template }}"
          netsim_action: "{{ config_module }}"
        tags: [ always ]

  when: do_deploy
