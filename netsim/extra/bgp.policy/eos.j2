{% macro ebgp_neighbor(n,af) -%}
{%   set peer = 'ebgp_intf_' + n.local_if if n.local_if is defined else n[af] %}
{%   if 'weight' in n %}
    neighbor {{ peer }} weight {{ n.weight }}
{%   endif %}
{%   if 'bandwidth' in n %}
    neighbor {{ peer }} send-community add extended
    neighbor {{ peer }} send-community add link-bandwidth aggregate
{%   endif %}
{%   if 'policy' in n %}
{%     for direction in [ 'in','out' ] if direction in n.policy %}
    neighbor {{ peer }} route-map {{ n.policy[direction] }}-{{ af }} {{ direction }}
{%     endfor %}
{%   endif %}
{%- endmacro %}
!
{% macro aggregate(bgp,af) %}
{%   for a_entry in bgp.aggregate|default([]) if af in a_entry %}
    aggregate-address {{ a_entry[af] }}{%
       if a_entry.summary_only|default(false) %} summary-only{% endif %}{%
       if a_entry.suppress_policy|default(false) %} summary-only match-map {{ a_entry.suppress_policy }}-{{ af }}{% endif %}{%
       if a_entry.attributes|default(false) %} attribute-map {{ a_entry.attributes }}-{{ af }}{% endif +%}
{%   endfor -%}
{% endmacro -%}
!
router bgp {{ bgp.as }}
!
{% for af in ['ipv4','ipv6'] %}
{%   for n in bgp.neighbors if n[af] is defined %}
{%     if loop.first %}
 address-family {{ af }}
{{       aggregate(bgp,af) }}
{%     endif %}
{{     ebgp_neighbor(n,af) -}}
{%   endfor %}
{% endfor %}

{% if vrfs is defined %}
{% for vname,vdata in vrfs.items() if vdata.bgp is defined %}
 vrf {{ vname }}
!
{%   for af in ['ipv4','ipv6'] %}
{%     for n in vdata.bgp.neighbors if n[af] is defined %}
{%       if loop.first %}
  address-family {{ af }}
{{       aggregate(vdata.bgp,af) }}
{%       endif %}
{{       ebgp_neighbor(n,af) -}}
{%     endfor %}
{%   endfor %}
{% endfor %}
{% endif %}
