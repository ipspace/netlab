{% import '_route_map_ios.j2' as routemap with context %}
{% macro ebgp_neighbor(n,af) -%}
{%   set peer = 'ebgp_intf_' + n.local_if if n.local_if is defined else n[af] %}
{%   if 'weight' in n %}
    neighbor {{ peer }} weight {{ n.weight }}
{%   endif %}
{%   if 'policy' in n %}
{%     for direction in [ 'in','out' ] if direction in n.policy %}
    neighbor {{ peer }} route-map bp-{{ n._policy_name }}-{{ direction }} {{ direction }}
{%     endfor %}
{%   endif %}
{%- endmacro %}
!
{% call(p_entry) routemap.create_route_maps(bgp,vrfs|default({})) -%}
{{   routemap.common_route_map_entry(p_entry) }}
{%- endcall %} 
!
router bgp {{ bgp.as }}
!
{% for af in ['ipv4','ipv6'] %}
{%   for n in bgp.neighbors if n[af] is defined %}
{%     if loop.first %}
 address-family {{ af }}
{%     endif %}
{{     ebgp_neighbor(n,af) -}}
{%   endfor %}
{% endfor %}

{% if vrfs is defined %}
{% for vname,vdata in vrfs.items() if vdata.bgp is defined %}
 vrf {{ vname }}
!
{%   for af in ['ipv4','ipv6'] %}
{%     for n in vdata.bgp.neighbors if n[af] is defined %}
{%       if loop.first %}
  address-family {{ af }}
{%       endif %}
{{       ebgp_neighbor(n,af) -}}
{%     endfor %}
{%   endfor %}
{% endfor %}
{% endif %}
