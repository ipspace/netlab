{% macro ebgp_session(n,af,bgp) -%}
{%   if n.tcp_ao is defined %}
{%     set idx = bgp._ao_secrets.index(n.password) + 1 %}
  neighbor {{ n[af] }} ao tcp-ao-{{ idx }}
{%   elif n.password is defined %}
  neighbor {{ n[af] }} password {{ n.password }}
{%   endif %}
{%   if n.gtsm is defined %}
  neighbor {{ n[af] }} ttl-security hops {{ n.gtsm }}
{%   endif %}
{%   if n.timers is defined %}
  neighbor {{ n[af] }} timers {{ n.timers.keepalive|default(60) }} {{ n.timers.hold|default(180) }} {{ n.timers.min_hold|default('') }} 
{%   endif %}
{%- endmacro %}
!
{% macro ebgp_neighbor(n,af) -%}
{%     if n.allowas_in is defined %}
  neighbor {{ n[af] }} allowas-in {{ n.allowas_in }}
{%     endif %}
{%     if n.as_override is defined %}
  neighbor {{ n[af] }} as-override
{%     endif %}
{%     if n.default_originate is defined %}
  neighbor {{ n[af] }} default-originate
{%     endif %}
{%- endmacro %}
!
{% for pwd in bgp._ao_secrets|default([]) %}
key chain tcp-ao-{{ loop.index }} tcp
  key 0
    send-id 0
    recv-id 0
    cryptographic-algorithm hmac-sha-1
    key-string {{ pwd }}
!
{% endfor %}
router bgp {{ bgp.as }}
{% for n in bgp.neighbors %}
{%   for af in ['ipv4','ipv6'] if n[af] is defined %}
{{     ebgp_session(n,af,bgp) }}
{%   endfor %}
{% endfor %}
!
! Global address families
{% for af in ['ipv4','ipv6'] if af in bgp %}
 address-family {{ af }}
{%   for n in bgp.neighbors if n[af] is defined %}
{{     ebgp_neighbor(n,af) }}
{%   endfor %}
{% endfor %}
!
{% if vrfs is defined %}
{%   for vname,vdata in vrfs.items() if vdata.bgp is defined and vdata.bgp.neighbors is defined %}
{%     for af in ['ipv4','ipv6'] if af in vdata.af|default({}) %}
{%       for n in vdata.bgp.neighbors if n[af] is defined %}
{%         if loop.first %}
 address-family {{ af }} vrf {{ vname }}
{%         endif %}
{{         ebgp_session(n,af,bgp) }}
{{         ebgp_neighbor(n,af) }}
{%       endfor %}
{%     endfor %}
{%   endfor %}
{% endif %}
