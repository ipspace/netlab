{% macro ebgp_session(n,af,bgp) -%}
{%   set peer = 'ebgp_intf_' + n.local_if if n.local_if is defined else n[af] %}
{%   if n.tcp_ao is defined %}
{%     set idx = bgp._ao_secrets.index(n.password) + 1 %}
{%     set algo = { 'aes-128-cmac': 'aes-128-cmac-96', 'hmac-sha-1': 'hmac-sha1-96' } %}
  neighbor {{ peer }} password shared-secret profile tcp-ao-{{ idx }} algorithm {{ algo[n.tcp_ao] }}
{%   elif n.password is defined %}
  neighbor {{ peer }} password {{ n.password }}
{%   endif %}
{%   if n.gtsm is defined %}
  neighbor {{ peer }} ttl maximum-hops {{ n.gtsm }}
{%   endif %}
{%   if n.timers is defined %}
  neighbor {{ peer }} timers {{ n.timers.keepalive|default(60) }} {{ n.timers.hold|default(180) }}
{%   endif %}
{%   if n.bfd|default(False) %}
  neighbor {{ peer }} bfd
{%   endif %}
{%   if n.passive|default(False) %}
  neighbor {{ peer }} passive
{%   endif %}
{%   if n.rs_client|default(False) %}
  no neighbor {{ peer }} enforce-first-as
{%   endif %}
{%   if n.remove_private_as|default([]) %}
{%     set rpa = { 'on': '', 'replace': 'all replace', 'all': 'all', 
                   'ingress': 'ingress', 'ingress-replace': 'ingress replace' } %}
{%     for rpo in n.remove_private_as if rpo in rpa %}
  neighbor {{ peer }} remove-private-as {{ rpa[rpo] }}
{%     endfor %}
{%   endif %}
{%- endmacro %}

{% macro ebgp_neighbor(n,af) -%}
{%   set peer = 'ebgp_intf_' + n.local_if if n.local_if is defined else n[af] %}
{%   if n.default_originate|default(False) %}
  neighbor {{ peer }} default-originate always
{%   endif %}
{%   if n.allowas_in is defined %}
  neighbor {{ peer }} allowas-in {{ n.allowas_in }}
{%   endif %}
{%   if n.as_override|default(False) %}
  neighbor {{ peer }} as-path remote-as replace out
{%   endif %}
{%- endmacro %}

!
{% for pwd in bgp._ao_secrets|default([]) %}
{%   if loop.first %}
management security
{%   endif %}
  session shared-secret profile tcp-ao-{{ loop.index }}
    secret 0 {{ pwd }} infinite
!
{% endfor %}
router bgp {{ bgp.as }}
{% for af in ['ipv4','ipv6'] %}
{%   for n in bgp.neighbors if n[af] is defined %}
{{     ebgp_session(n,af,bgp) -}}
{%   endfor %}
{% endfor %}
!
{% for af in ['ipv4','ipv6'] %}
{%   for n in bgp.neighbors if n[af] is defined %}
{%     if loop.first %}
 address-family {{ af }}
{%     endif %}
{{     ebgp_neighbor(n,af) -}}
{%   endfor %}
{% endfor %}
!
{% if vrfs is defined %}
{% for vname,vdata in vrfs.items() if vdata.bgp is defined %}
 vrf {{ vname }}
{% for af in ['ipv4','ipv6'] %}
{%   for n in bgp.neighbors if n[af] is defined %}
{{     ebgp_session(n,af,bgp) -}}
{%   endfor %}
{% endfor %}
!
{%   for af in ['ipv4','ipv6'] %}
{%     for n in vdata.bgp.neighbors if n[af] is defined %}
{%       if loop.first %}
   address-family {{ af }}
{%       endif %}
{{       ebgp_neighbor(n,af) -}}
{%     endfor %}
{%   endfor %}
{% endfor %}
{% endif %}
!
do clear bgp vrf all
