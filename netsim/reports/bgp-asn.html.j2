{# description: BGP autonomous systems #}
{#
   First, figure out if we need RR column
#}
{% set rr_count = [] %}
{% for ndata in nodes.values() if 'bgp' in ndata and ndata.bgp.rr|default(False) %}
{%   set ignore = rr_count.append(ndata.name) %}
{% endfor %}
{% set has_rr = (rr_count|length) > 0 %}
{% set col_count = 4 if has_rr else 3 %}
{#
   Now we're ready for the ASN report
#}
{% for asn,ndl in nodes.values()|groupby('bgp.as') if asn %}
{%   if loop.first %}
<h2>BGP AS Numbers</h2>
<table>
  <thead>
    <tr>
      <th>Node/ASN</th>
      <th>Router ID</th>
{%     if has_rr %}
      <th>BGP RR</th>
{%     endif %}
      <th>Advertised prefixes</th>
    </tr>
  <thead>
  <tbody>
{%   endif %}
    <tr>
      <td colspan="{{ col_count }}"><strong>AS{{ asn }}</strong></td>
    </tr>
{%   for ndata in ndl %}
{#
    Collect prefixes advertised by the router, starting with bgp.originate
#}
{%     set pfx = ndata.bgp.originate|default([]) %}
{#
    Add loopback IPv4 to the prefix list if loopback exists, has IPv4 prefix, and
    bgp.advertise_loopback is set
#}
{%     if 'loopback' in ndata and 'ipv4' in ndata.loopback and ndata.bgp.advertise_loopback|default(False) %}
{%       set pfx = [ ndata.loopback.ipv4 ] + pfx %}
{%     endif %}
    <tr>
      <td>{{ ndata.name }}</td>
      <td class='center'>{{ ndata.bgp.router_id|default('') }}</td>
{%     if has_rr %}
      <td class='center'>{{ 'âœ…' if ndata.bgp.rr|default('') else '' }}</td>
{%     endif %}
      <td class='right'>{{ pfx|join('<br>') }}</td>
    </tr>
{%   endfor %}
{%   if loop.last %}
  </tbody>
</table>
{%   endif %}
{% endfor %}
