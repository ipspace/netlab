{# description: BGP neighbors #}
{% import 'bgp-prefix.include.j2' as bcode %}
{#
   First, figure out which columns we need
#}
{% set cols = namespace(las=false,ipv4=false,ipv6=false) %}
{{- bcode.neigbor_columns(nodes,cols) -}}
{% set col_count = 3 + (1 if cols.las else 0) + (1 if cols.ipv4 else 0) + (1 if cols.ipv6 else 0) %}
{#
   Now we're ready for the report
#}
{% for n,d in nodes.items() if 'bgp' in d and 'neighbors' in d.bgp %}
{%   if loop.first %}
<h2>BGP Neighbors</h2>
<table>
  <thead>
    <tr>
      <th>Node</th>
      <th>Neighbor</th>
      <th>Neighbor AS</th>
{%     if cols.ipv4 %}
      <th>Neighbor IPv4</th>
{%     endif %}
{%     if cols.ipv6 %}
      <th>Neighbor IPv6</th>
{%     endif %}
{%     if cols.las %}
      <th>Local AS</th>
{%     endif %}
    </tr>
  <thead>
  <tbody>
{%   endif %}
    <tr>
      <td colspan="{{ col_count }}"><strong>{{ n }} ({{ d.bgp.router_id }} / AS {{ d.bgp.as }})</strong></td>
    </tr>
{%   for ngb in d.bgp.neighbors %}
    <tr>
      <td></td>
      <td>{{ ngb.name }}</td>
      <td class='right'>{{ ngb.as }}</td>
{%     if cols.ipv4 %}
      <td class='right'>{{ ngb.ipv4|default('') }}</td>
{%     endif %}
{%     if cols.ipv6 %}
      <td class='right'>{{ ngb.ipv6|default('') }}</td>
{%     endif %}
{%     if cols.las %}
      <td class='right'>{{ ngb.local_as|default('') }}</td>
{%     endif %}
    </tr>
{%   endfor %}
{%   if loop.last %}
  </tbody>
</table>
{%   endif %}
{% else %}
<p>BGP neighbor report is empty: no BGP routers in this lab topology</p>
{% endfor %}
