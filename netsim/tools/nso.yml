#
# Cisco NSO tool
#
# yamllint disable rule:line-length
#
runtime: docker     # Default: start in a Docker container
docker:
  up:
    docker run --rm -itd --name {name}-cisco-nso {sys.docker_net} -v {name}-nso-vol:/nso -v {name}-nso-log-vol:/log -p { 8888 + defaults.multilab.id if defaults.multilab.id else 8888 }:8080 -e ADMIN_USERNAME=admin -e ADMIN_PASSWORD=admin -e EXTRA_ARGS='--with-package-reload --ignore-initial-validation' cisco-nso-prod;
    docker exec -it {name}-cisco-nso sed -i.original -e "/<webui>/,/<\\/webui>/ {{ /<transport>/,/<\\/transport>/ {{ /<tcp>/,/<\\/tcp>/ {{ /<enabled>/ s/false/true/ }} }} }}" /etc/ncs/ncs.conf;
    docker exec -it {name}-cisco-nso sed -i.backup -e "/<local-authentication>/{{n;s|<enabled>false</enabled>|<enabled>true</enabled>|}}" /etc/ncs/ncs.conf;
    docker exec -it {name}-cisco-nso sed -i.backup -e "/<webui>/a <package-upload> <enabled>true</enabled> </package-upload>" /etc/ncs/ncs.conf;
  message:
    Open http://{sys.ipaddr}:{ 8888 + defaults.multilab.id if defaults.multilab.id else 8888 } in your browser
    Use admin/admin for login
    Use 'netlab connect nso' to start nso CLI and type ncs_cli -C -u admin to acces cisco CLI
  connect:
    docker exec -it '{name}-cisco-nso' bash
  down:
    docker kill {name}-cisco-nso
  cleanup:
    docker volume rm '{name}-nso-vol'
    docker volume rm '{name}-nso-log-vol'
