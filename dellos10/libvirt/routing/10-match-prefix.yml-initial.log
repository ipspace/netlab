[WARNING]: Could not match supplied host pattern, ignoring: unprovisioned
[WARNING]: Found variable using reserved name: hosts

PLAY [Deploy initial device configuration] *************************************

TASK [Set variables that cannot be set with VARS] ******************************
ok: [vx1]
ok: [x1]
ok: [dut]
ok: [vx2]
ok: [x2]
ok: [vx3]
ok: [x3]

TASK [Find device readiness script] ********************************************
ok: [vx1]
ok: [x1]
ok: [vx2]
ok: [dut]
ok: [x2]
ok: [x3]
ok: [vx3]

TASK [Wait for device to become ready] *****************************************
skipping: [dut]
skipping: [vx1]
skipping: [x1]
skipping: [vx2]
skipping: [x2]
skipping: [vx3]
skipping: [x3]

TASK [Normalize config on bridge-like devices] *********************************
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-module.yml for dut, vx1, x1, vx2, x2, vx3, x3

TASK [Figure out whether to deploy the module normalize on current device] *****
ok: [vx1]
ok: [x1]
ok: [x2]
ok: [vx2]
ok: [dut]
ok: [vx3]
ok: [x3]

TASK [Find configuration template for normalize] *******************************
ok: [vx1]
ok: [x1]
ok: [vx2]
ok: [dut]
ok: [x2]
ok: [x3]
ok: [vx3]

TASK [fail] ********************************************************************
skipping: [dut]
skipping: [vx1]
skipping: [x1]
skipping: [vx2]
skipping: [x2]
skipping: [vx3]
skipping: [x3]

TASK [Find configuration deployment deploy_script for normalize] ***************
ok: [vx1]
ok: [x1]
ok: [vx2]
ok: [dut]
ok: [x2]
ok: [vx3]
ok: [x3]

TASK [Print deployed configuration when running in verbose mode] ***************
skipping: [dut]
skipping: [vx1]
skipping: [x1]
skipping: [vx2]
skipping: [x2]
skipping: [vx3]
skipping: [x3]

TASK [Deploy normalize configuration] ******************************************
skipping: [dut]
skipping: [vx1]
skipping: [x1]
skipping: [vx2]
skipping: [x2]
skipping: [vx3]
skipping: [x3]

TASK [Deploy initial configuration] ********************************************
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-module.yml for dut, vx1, x1, vx2, x2, vx3, x3

TASK [Figure out whether to deploy the module initial on current device] *******
ok: [vx1]
ok: [x1]
ok: [vx2]
ok: [x2]
ok: [vx3]
ok: [x3]
ok: [dut]

TASK [Find configuration template for initial] *********************************
ok: [vx1]
ok: [x1]
ok: [vx2]
ok: [x2]
ok: [vx3]
ok: [x3]
ok: [dut]

TASK [fail] ********************************************************************
skipping: [dut]
skipping: [vx1]
skipping: [x1]
skipping: [vx2]
skipping: [x2]
skipping: [vx3]
skipping: [x3]

TASK [Find configuration deployment deploy_script for initial] *****************
ok: [vx1]
ok: [x1]
ok: [vx3]
ok: [vx2]
ok: [x2]
ok: [x3]
ok: [dut]

TASK [Print deployed configuration when running in verbose mode] ***************
ok: [vx1] => 
  msg: |-
    initial configuration for vx1
    =========================================
    #!/bin/bash
    #
    set -e
    set -x
    #
    # Create bash profile script
    #
    cat <<SCRIPT >/root/.bash_profile
    #!/bin/bash
    #
    export PS1="\h(bash)# "
    echo
    echo "Use vtysh to connect to FRR daemon"
    echo
    SCRIPT
    #
    # This is an artifact of unknown provenance that should be removed in a year or two (= 2026/2027)
    #
    # FRR controls these parameters with 'ip forwarding' and 'ipv6 forwarding' commands
    #
    sysctl -w net.ipv4.ip_forward=1
    sysctl -w net.ipv6.conf.all.forwarding=1
    #
    #
    # Get the current next hop for the default route
    #
    def_nh=$(ip route list default|awk '{ print $3 }')
    #
    # Create the management VRF and add eth0 to it
    #
    if [ ! -e /sys/devices/virtual/net/mgmt ]; then
      ip link add mgmt type vrf table 42
    fi
    ip link set mgmt up
    sysctl -qw net.ipv6.conf.eth0.keep_addr_on_down=1
    ip link set eth0 master mgmt
    #
    # Reinstall the default route if we had it before
    #
    if [[ -n "$def_nh" ]]; then
      ip route add 0.0.0.0/0 vrf mgmt via $def_nh
    fi
    #
    # Enable FRR modules (if not using containerlab bind-mounted /etc/frr/daemons)
    #
  
    #
    # Create loopbacks, stub and lag/bond devices
    #
    if [ ! -e /sys/class/net/lo ]; then
      if [ ! -e /sys/devices/virtual/net/lo ]; then
        ip link add lo type dummy
        ip link set dev lo up
      fi
    fi
  
    # Disable IPv6 (for IPv4-only interfaces) or SLAAC (if the device is a router)
    #
    ip link set eth1 down
    sysctl -qw net.ipv6.conf.eth1.autoconf=0
    sysctl -qw net.ipv6.conf.eth1.accept_ra=0
    ip link set dev eth1 mtu 1500
    ip link set eth1 up
    ip link set eth2 down
    sysctl -qw net.ipv6.conf.eth2.autoconf=0
    sysctl -qw net.ipv6.conf.eth2.accept_ra=0
    ip link set dev eth2 mtu 1500
    ip link set eth2 up
  
    #
    # Add vtysh.conf file
    echo "service integrated-vtysh-config" >/etc/frr/vtysh.conf
  
    #
    # Rest of initial configuration done through VTYSH
    #
    cat >/tmp/config <<CONFIG
    hostname vx1
    !
    ip forwarding
    ipv6 forwarding
    vrf mgmt
     exit-vrf
    !
    frr defaults datacenter
    !
    interface lo
     no shutdown
     ip address 10.0.0.5/32
     ipv6 address 2001:db8:1:5::1/64
    !
    interface eth1
     no shutdown
     description vx1 -> dut [external]
     ip address 10.1.0.14/30
     ipv6 address 2001:db8:3:3::5/64
     ipv6 nd ra-interval 5
     no ipv6 nd suppress-ra
    !
    interface eth2
     no shutdown
     description vx1 -> stub [stub]
     ! no ip address
     ipv6 address 2001:db8:dead:beef::5/64
     ipv6 nd ra-interval 5
     no ipv6 nd suppress-ra
    !
    do write
    CONFIG
    vtysh -f /tmp/config
    exit 0
ok: [x1] => 
  msg: |-
    initial configuration for x1
    =========================================
    #!/bin/bash
    #
    set -e
    set -x
    #
    # Create bash profile script
    #
    cat <<SCRIPT >/root/.bash_profile
    #!/bin/bash
    #
    export PS1="\h(bash)# "
    echo
    echo "Use vtysh to connect to FRR daemon"
    echo
    SCRIPT
    #
    # This is an artifact of unknown provenance that should be removed in a year or two (= 2026/2027)
    #
    # FRR controls these parameters with 'ip forwarding' and 'ipv6 forwarding' commands
    #
    sysctl -w net.ipv4.ip_forward=1
    sysctl -w net.ipv6.conf.all.forwarding=1
    #
    #
    # Get the current next hop for the default route
    #
    def_nh=$(ip route list default|awk '{ print $3 }')
    #
    # Create the management VRF and add eth0 to it
    #
    if [ ! -e /sys/devices/virtual/net/mgmt ]; then
      ip link add mgmt type vrf table 42
    fi
    ip link set mgmt up
    sysctl -qw net.ipv6.conf.eth0.keep_addr_on_down=1
    ip link set eth0 master mgmt
    #
    # Reinstall the default route if we had it before
    #
    if [[ -n "$def_nh" ]]; then
      ip route add 0.0.0.0/0 vrf mgmt via $def_nh
    fi
    #
    # Enable FRR modules (if not using containerlab bind-mounted /etc/frr/daemons)
    #
  
    #
    # Create loopbacks, stub and lag/bond devices
    #
    if [ ! -e /sys/class/net/lo ]; then
      if [ ! -e /sys/devices/virtual/net/lo ]; then
        ip link add lo type dummy
        ip link set dev lo up
      fi
    fi
  
    # Disable IPv6 (for IPv4-only interfaces) or SLAAC (if the device is a router)
    #
    ip link set eth1 down
    sysctl -qw net.ipv6.conf.eth1.autoconf=0
    sysctl -qw net.ipv6.conf.eth1.accept_ra=0
    ip link set dev eth1 mtu 1500
    ip link set eth1 up
    ip link set eth2 down
    sysctl -qw net.ipv6.conf.eth2.autoconf=0
    sysctl -qw net.ipv6.conf.eth2.accept_ra=0
    ip link set dev eth2 mtu 1500
    ip link set eth2 up
  
    #
    # Add vtysh.conf file
    echo "service integrated-vtysh-config" >/etc/frr/vtysh.conf
  
    #
    # Rest of initial configuration done through VTYSH
    #
    cat >/tmp/config <<CONFIG
    hostname x1
    !
    ip forwarding
    ipv6 forwarding
    vrf mgmt
     exit-vrf
    !
    frr defaults datacenter
    !
    interface lo
     no shutdown
     ip address 10.0.0.2/32
     ipv6 address 2001:db8:1:2::1/64
    !
    interface eth1
     no shutdown
     description x1 -> dut [external]
     ip address 10.1.0.2/30
     ipv6 address 2001:db8:3::2/64
     ipv6 nd ra-interval 5
     no ipv6 nd suppress-ra
    !
    interface eth2
     no shutdown
     description x1 -> stub [stub]
     ! no ip address
     ipv6 address 2001:db8:dead:beef::2/64
     ipv6 nd ra-interval 5
     no ipv6 nd suppress-ra
    !
    do write
    CONFIG
    vtysh -f /tmp/config
    exit 0
ok: [vx3] => 
  msg: |-
    initial configuration for vx3
    =========================================
    #!/bin/bash
    #
    set -e
    set -x
    #
    # Create bash profile script
    #
    cat <<SCRIPT >/root/.bash_profile
    #!/bin/bash
    #
    export PS1="\h(bash)# "
    echo
    echo "Use vtysh to connect to FRR daemon"
    echo
    SCRIPT
    #
    # This is an artifact of unknown provenance that should be removed in a year or two (= 2026/2027)
    #
    # FRR controls these parameters with 'ip forwarding' and 'ipv6 forwarding' commands
    #
    sysctl -w net.ipv4.ip_forward=1
    sysctl -w net.ipv6.conf.all.forwarding=1
    #
    #
    # Get the current next hop for the default route
    #
    def_nh=$(ip route list default|awk '{ print $3 }')
    #
    # Create the management VRF and add eth0 to it
    #
    if [ ! -e /sys/devices/virtual/net/mgmt ]; then
      ip link add mgmt type vrf table 42
    fi
    ip link set mgmt up
    sysctl -qw net.ipv6.conf.eth0.keep_addr_on_down=1
    ip link set eth0 master mgmt
    #
    # Reinstall the default route if we had it before
    #
    if [[ -n "$def_nh" ]]; then
      ip route add 0.0.0.0/0 vrf mgmt via $def_nh
    fi
    #
    # Enable FRR modules (if not using containerlab bind-mounted /etc/frr/daemons)
    #
  
    #
    # Create loopbacks, stub and lag/bond devices
    #
    if [ ! -e /sys/class/net/lo ]; then
      if [ ! -e /sys/devices/virtual/net/lo ]; then
        ip link add lo type dummy
        ip link set dev lo up
      fi
    fi
  
    # Disable IPv6 (for IPv4-only interfaces) or SLAAC (if the device is a router)
    #
    ip link set eth1 down
    sysctl -qw net.ipv6.conf.eth1.autoconf=0
    sysctl -qw net.ipv6.conf.eth1.accept_ra=0
    ip link set dev eth1 mtu 1500
    ip link set eth1 up
  
    #
    # Add vtysh.conf file
    echo "service integrated-vtysh-config" >/etc/frr/vtysh.conf
  
    #
    # Rest of initial configuration done through VTYSH
    #
    cat >/tmp/config <<CONFIG
    hostname vx3
    !
    ip forwarding
    ipv6 forwarding
    vrf mgmt
     exit-vrf
    !
    frr defaults datacenter
    !
    interface lo
     no shutdown
     ip address 10.0.0.7/32
     ipv6 address 2001:db8:1:7::1/64
    !
    interface eth1
     no shutdown
     description vx3 -> dut [external]
     ip address 10.1.0.22/30
     ipv6 address 2001:db8:3:5::7/64
     ipv6 nd ra-interval 5
     no ipv6 nd suppress-ra
    !
    do write
    CONFIG
    vtysh -f /tmp/config
    exit 0
ok: [dut] => 
  msg: |-
    initial configuration for dut
    =========================================
    hostname dut
    !
    lldp enable
    !
    ip vrf tenant
    exit
    !
    ip host vx1 10.0.0.5
    ip host x1 10.0.0.2
    ip host vx2 10.0.0.6
    ip host x2 10.0.0.3
    ip host vx3 10.0.0.7
    ip host x3 10.0.0.4
    !
    !
    default mtu 1532
    !
    interface loopback0
     ip address 10.0.0.1/32
     ipv6 address 2001:db8:1:1::1/64
    !
    interface mgmt1/1/1
     no lldp transmit
     no lldp receive
    !
    interface ethernet1/1/1
     no shutdown
     no switchport
     description "dut -> x1 [external]"
     ip address 10.1.0.1/30
     ip unreachables
     ipv6 nd max-ra-interval 4
     ipv6 nd min-ra-interval 3
     ipv6 nd send-ra
     ipv6 address 2001:db8:3::1/64
     ipv6 unreachables
    !
    interface ethernet1/1/2
     no shutdown
     no switchport
     description "dut -> x2 [external]"
     ip address 10.1.0.5/30
     ip unreachables
     ipv6 nd max-ra-interval 4
     ipv6 nd min-ra-interval 3
     ipv6 nd send-ra
     ipv6 address 2001:db8:3:1::1/64
     ipv6 unreachables
    !
    interface ethernet1/1/3
     no shutdown
     no switchport
     description "dut -> x3 [external]"
     ip address 10.1.0.9/30
     ip unreachables
     ipv6 nd max-ra-interval 4
     ipv6 nd min-ra-interval 3
     ipv6 nd send-ra
     ipv6 address 2001:db8:3:2::1/64
     ipv6 unreachables
    !
    interface ethernet1/1/4
     no shutdown
     no switchport
     ip vrf forwarding tenant
     description "dut -> vx1 [external]"
     ip address 10.1.0.13/30
     ip unreachables
     ipv6 nd max-ra-interval 4
     ipv6 nd min-ra-interval 3
     ipv6 nd send-ra
     ipv6 address 2001:db8:3:3::1/64
     ipv6 unreachables
    !
    interface ethernet1/1/5
     no shutdown
     no switchport
     ip vrf forwarding tenant
     description "dut -> vx2 [external]"
     ip address 10.1.0.17/30
     ip unreachables
     ipv6 nd max-ra-interval 4
     ipv6 nd min-ra-interval 3
     ipv6 nd send-ra
     ipv6 address 2001:db8:3:4::1/64
     ipv6 unreachables
    !
    interface ethernet1/1/6
     no shutdown
     no switchport
     ip vrf forwarding tenant
     description "dut -> vx3 [external]"
     ip address 10.1.0.21/30
     ip unreachables
     ipv6 nd max-ra-interval 4
     ipv6 nd min-ra-interval 3
     ipv6 nd send-ra
     ipv6 address 2001:db8:3:5::1/64
     ipv6 unreachables
    !
ok: [vx2] => 
  msg: |-
    initial configuration for vx2
    =========================================
    #!/bin/bash
    #
    set -e
    set -x
    #
    # Create bash profile script
    #
    cat <<SCRIPT >/root/.bash_profile
    #!/bin/bash
    #
    export PS1="\h(bash)# "
    echo
    echo "Use vtysh to connect to FRR daemon"
    echo
    SCRIPT
    #
    # This is an artifact of unknown provenance that should be removed in a year or two (= 2026/2027)
    #
    # FRR controls these parameters with 'ip forwarding' and 'ipv6 forwarding' commands
    #
    sysctl -w net.ipv4.ip_forward=1
    sysctl -w net.ipv6.conf.all.forwarding=1
    #
    #
    # Get the current next hop for the default route
    #
    def_nh=$(ip route list default|awk '{ print $3 }')
    #
    # Create the management VRF and add eth0 to it
    #
    if [ ! -e /sys/devices/virtual/net/mgmt ]; then
      ip link add mgmt type vrf table 42
    fi
    ip link set mgmt up
    sysctl -qw net.ipv6.conf.eth0.keep_addr_on_down=1
    ip link set eth0 master mgmt
    #
    # Reinstall the default route if we had it before
    #
    if [[ -n "$def_nh" ]]; then
      ip route add 0.0.0.0/0 vrf mgmt via $def_nh
    fi
    #
    # Enable FRR modules (if not using containerlab bind-mounted /etc/frr/daemons)
    #
  
    #
    # Create loopbacks, stub and lag/bond devices
    #
    if [ ! -e /sys/class/net/lo ]; then
      if [ ! -e /sys/devices/virtual/net/lo ]; then
        ip link add lo type dummy
        ip link set dev lo up
      fi
    fi
  
    # Disable IPv6 (for IPv4-only interfaces) or SLAAC (if the device is a router)
    #
    ip link set eth1 down
    sysctl -qw net.ipv6.conf.eth1.autoconf=0
    sysctl -qw net.ipv6.conf.eth1.accept_ra=0
    ip link set dev eth1 mtu 1500
    ip link set eth1 up
  
    #
    # Add vtysh.conf file
    echo "service integrated-vtysh-config" >/etc/frr/vtysh.conf
  
    #
    # Rest of initial configuration done through VTYSH
    #
    cat >/tmp/config <<CONFIG
    hostname vx2
    !
    ip forwarding
    ipv6 forwarding
    vrf mgmt
     exit-vrf
    !
    frr defaults datacenter
    !
    interface lo
     no shutdown
     ip address 10.0.0.6/32
     ipv6 address 2001:db8:1:6::1/64
    !
    interface eth1
     no shutdown
     description vx2 -> dut [external]
     ip address 10.1.0.18/30
     ipv6 address 2001:db8:3:4::6/64
     ipv6 nd ra-interval 5
     no ipv6 nd suppress-ra
    !
    do write
    CONFIG
    vtysh -f /tmp/config
    exit 0
ok: [x2] => 
  msg: |-
    initial configuration for x2
    =========================================
    #!/bin/bash
    #
    set -e
    set -x
    #
    # Create bash profile script
    #
    cat <<SCRIPT >/root/.bash_profile
    #!/bin/bash
    #
    export PS1="\h(bash)# "
    echo
    echo "Use vtysh to connect to FRR daemon"
    echo
    SCRIPT
    #
    # This is an artifact of unknown provenance that should be removed in a year or two (= 2026/2027)
    #
    # FRR controls these parameters with 'ip forwarding' and 'ipv6 forwarding' commands
    #
    sysctl -w net.ipv4.ip_forward=1
    sysctl -w net.ipv6.conf.all.forwarding=1
    #
    #
    # Get the current next hop for the default route
    #
    def_nh=$(ip route list default|awk '{ print $3 }')
    #
    # Create the management VRF and add eth0 to it
    #
    if [ ! -e /sys/devices/virtual/net/mgmt ]; then
      ip link add mgmt type vrf table 42
    fi
    ip link set mgmt up
    sysctl -qw net.ipv6.conf.eth0.keep_addr_on_down=1
    ip link set eth0 master mgmt
    #
    # Reinstall the default route if we had it before
    #
    if [[ -n "$def_nh" ]]; then
      ip route add 0.0.0.0/0 vrf mgmt via $def_nh
    fi
    #
    # Enable FRR modules (if not using containerlab bind-mounted /etc/frr/daemons)
    #
  
    #
    # Create loopbacks, stub and lag/bond devices
    #
    if [ ! -e /sys/class/net/lo ]; then
      if [ ! -e /sys/devices/virtual/net/lo ]; then
        ip link add lo type dummy
        ip link set dev lo up
      fi
    fi
  
    # Disable IPv6 (for IPv4-only interfaces) or SLAAC (if the device is a router)
    #
    ip link set eth1 down
    sysctl -qw net.ipv6.conf.eth1.autoconf=0
    sysctl -qw net.ipv6.conf.eth1.accept_ra=0
    ip link set dev eth1 mtu 1500
    ip link set eth1 up
  
    #
    # Add vtysh.conf file
    echo "service integrated-vtysh-config" >/etc/frr/vtysh.conf
  
    #
    # Rest of initial configuration done through VTYSH
    #
    cat >/tmp/config <<CONFIG
    hostname x2
    !
    ip forwarding
    ipv6 forwarding
    vrf mgmt
     exit-vrf
    !
    frr defaults datacenter
    !
    interface lo
     no shutdown
     ip address 10.0.0.3/32
     ipv6 address 2001:db8:1:3::1/64
    !
    interface eth1
     no shutdown
     description x2 -> dut [external]
     ip address 10.1.0.6/30
     ipv6 address 2001:db8:3:1::3/64
     ipv6 nd ra-interval 5
     no ipv6 nd suppress-ra
    !
    do write
    CONFIG
    vtysh -f /tmp/config
    exit 0
ok: [x3] => 
  msg: |-
    initial configuration for x3
    =========================================
    #!/bin/bash
    #
    set -e
    set -x
    #
    # Create bash profile script
    #
    cat <<SCRIPT >/root/.bash_profile
    #!/bin/bash
    #
    export PS1="\h(bash)# "
    echo
    echo "Use vtysh to connect to FRR daemon"
    echo
    SCRIPT
    #
    # This is an artifact of unknown provenance that should be removed in a year or two (= 2026/2027)
    #
    # FRR controls these parameters with 'ip forwarding' and 'ipv6 forwarding' commands
    #
    sysctl -w net.ipv4.ip_forward=1
    sysctl -w net.ipv6.conf.all.forwarding=1
    #
    #
    # Get the current next hop for the default route
    #
    def_nh=$(ip route list default|awk '{ print $3 }')
    #
    # Create the management VRF and add eth0 to it
    #
    if [ ! -e /sys/devices/virtual/net/mgmt ]; then
      ip link add mgmt type vrf table 42
    fi
    ip link set mgmt up
    sysctl -qw net.ipv6.conf.eth0.keep_addr_on_down=1
    ip link set eth0 master mgmt
    #
    # Reinstall the default route if we had it before
    #
    if [[ -n "$def_nh" ]]; then
      ip route add 0.0.0.0/0 vrf mgmt via $def_nh
    fi
    #
    # Enable FRR modules (if not using containerlab bind-mounted /etc/frr/daemons)
    #
  
    #
    # Create loopbacks, stub and lag/bond devices
    #
    if [ ! -e /sys/class/net/lo ]; then
      if [ ! -e /sys/devices/virtual/net/lo ]; then
        ip link add lo type dummy
        ip link set dev lo up
      fi
    fi
  
    # Disable IPv6 (for IPv4-only interfaces) or SLAAC (if the device is a router)
    #
    ip link set eth1 down
    sysctl -qw net.ipv6.conf.eth1.autoconf=0
    sysctl -qw net.ipv6.conf.eth1.accept_ra=0
    ip link set dev eth1 mtu 1500
    ip link set eth1 up
  
    #
    # Add vtysh.conf file
    echo "service integrated-vtysh-config" >/etc/frr/vtysh.conf
  
    #
    # Rest of initial configuration done through VTYSH
    #
    cat >/tmp/config <<CONFIG
    hostname x3
    !
    ip forwarding
    ipv6 forwarding
    vrf mgmt
     exit-vrf
    !
    frr defaults datacenter
    !
    interface lo
     no shutdown
     ip address 10.0.0.4/32
     ipv6 address 2001:db8:1:4::1/64
    !
    interface eth1
     no shutdown
     description x3 -> dut [external]
     ip address 10.1.0.10/30
     ipv6 address 2001:db8:3:2::4/64
     ipv6 nd ra-interval 5
     no ipv6 nd suppress-ra
    !
    do write
    CONFIG
    vtysh -f /tmp/config
    exit 0

TASK [Deploy initial configuration] ********************************************
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-config/dellos10.yml for dut
included: /home/pipi/net101/tools/netsim/ansible/tasks/frr/initial-clab.yml for vx1, x1, vx2, x2, vx3, x3

TASK [wait_for_connection] *****************************************************
skipping: [dut]

TASK [dellos10_config: deploying initial from /home/pipi/net101/tools/netsim/ansible/templates/initial/dellos10.j2, save to startup=yes] ***
changed: [dut]

TASK [Attempt to load VRF kernel module] ***************************************
changed: [vx1 -> localhost]

TASK [Disable FRR management VRF when modprobe fails] **************************
skipping: [vx1]
skipping: [x1]
skipping: [vx2]
skipping: [x2]
skipping: [vx3]
skipping: [x3]

TASK [include_tasks] ***********************************************************
included: /home/pipi/net101/tools/netsim/ansible/tasks/frr/deploy-config.yml for vx1, x1, vx2, x2, vx3, x3

TASK [template] ****************************************************************
changed: [x1]
changed: [vx2]
changed: [vx1]
changed: [vx3]
changed: [x3]
changed: [x2]

TASK [set_fact] ****************************************************************
ok: [vx1]
ok: [x1]
ok: [vx2]
ok: [x3]
ok: [x2]
ok: [vx3]

TASK [run /tmp/config.sh to deploy initial config from /home/pipi/net101/tools/netsim/ansible/templates/initial/frr.j2] ***
changed: [vx1]
changed: [x1]
changed: [vx2]
changed: [vx3]
changed: [x2]
changed: [x3]

TASK [run vtysh to import initial config from /home/pipi/net101/tools/netsim/ansible/templates/initial/frr.j2] ***
skipping: [vx1]
skipping: [x1]
skipping: [vx2]
skipping: [x2]
skipping: [vx3]
skipping: [x3]

PLAY [Deploy module-specific configurations] ***********************************

TASK [Set variables that cannot be set with VARS] ******************************
ok: [vx1]
ok: [vx2]
ok: [dut]
ok: [vx3]
ok: [x2]
ok: [x1]
ok: [x3]

TASK [Deploy individual configuration modules] *********************************
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-module.yml for dut, vx1, vx2, vx3, x1, x2, x3 => (item=routing)
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-module.yml for dut, vx1, vx2, vx3, x1, x2, x3 => (item=bgp)
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-module.yml for dut, vx1, vx2, vx3, x1, x2, x3 => (item=vrf)

TASK [Figure out whether to deploy the module routing on current device] *******
ok: [vx1]
ok: [vx2]
ok: [dut]
ok: [vx3]
ok: [x1]
ok: [x2]
ok: [x3]

TASK [Find configuration template for routing] *********************************
skipping: [vx1]
skipping: [vx2]
skipping: [vx3]
skipping: [x1]
skipping: [x2]
ok: [dut]
skipping: [x3]

TASK [fail] ********************************************************************
skipping: [dut]
skipping: [vx1]
skipping: [vx2]
skipping: [vx3]
skipping: [x1]
skipping: [x2]
skipping: [x3]

TASK [Find configuration deployment deploy_script for routing] *****************
skipping: [vx1]
skipping: [vx2]
skipping: [vx3]
skipping: [x1]
skipping: [x2]
skipping: [x3]
ok: [dut]

TASK [Print deployed configuration when running in verbose mode] ***************
skipping: [vx1]
skipping: [vx2]
skipping: [vx3]
skipping: [x1]
skipping: [x2]
skipping: [x3]
ok: [dut] => 
  msg: |-
    routing configuration for dut
    =========================================
    !
    !
    route-map in_x1-ipv4 deny 10
      match ip address prefix-list orig_1-ipv4
    !
    route-map in_x1-ipv4 permit 20
    !
    route-map in_x1-ipv6 deny 10
      match ipv6 address prefix-list orig_1-ipv6
    !
    route-map in_x1-ipv6 permit 20
    !
    route-map in_x1-vpnv4 deny 10
      match ipv6 address prefix-list orig_1-vpnv4
    !
    route-map in_x1-vpnv4 permit 20
    !
    route-map in_x1-vpnv6 deny 10
      match ipv6 address prefix-list orig_1-vpnv6
    !
    route-map in_x1-vpnv6 permit 20
    !
    route-map out_x2-ipv4 permit 10
      match ip address prefix-list lb_only-ipv4
    !
    route-map out_x2-ipv6 permit 10
      match ipv6 address prefix-list lb_only-ipv6
    !
    route-map out_x2-vpnv4 permit 10
      match ipv6 address prefix-list lb_only-vpnv4
    !
    route-map out_x2-vpnv6 permit 10
      match ipv6 address prefix-list lb_only-vpnv6
  
    !
    ip prefix-list lb_only-ipv4 seq 10 permit 10.0.0.0/24 ge 32 le 32
    !
    ip prefix-list orig_1-ipv4 seq 10 permit 172.42.42.0/24
    !
    ipv6 prefix-list lb_only-ipv6 seq 10 permit 2001:db8:1::/48 ge 64 le 64
    !
    ipv6 prefix-list orig_1-ipv6 seq 10 deny ::/0
    !
    ! AS-path access lists
    !
    !
    ! Static routes (dual routes for each entry, in entry VRF and next hop VRF)
    !

TASK [Deploy routing configuration] ********************************************
skipping: [vx1]
skipping: [vx2]
skipping: [vx3]
skipping: [x1]
skipping: [x2]
skipping: [x3]
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-config/dellos10.yml for dut

TASK [wait_for_connection] *****************************************************
skipping: [dut]

TASK [dellos10_config: deploying routing from /home/pipi/net101/tools/netsim/ansible/templates/routing/dellos10.j2, save to startup=yes] ***
changed: [dut]

TASK [Figure out whether to deploy the module bgp on current device] ***********
ok: [vx1]
ok: [vx2]
ok: [dut]
ok: [vx3]
ok: [x1]
ok: [x2]
ok: [x3]

TASK [Find configuration template for bgp] *************************************
ok: [vx1]
ok: [vx2]
ok: [dut]
ok: [vx3]
ok: [x1]
ok: [x2]
ok: [x3]

TASK [fail] ********************************************************************
skipping: [dut]
skipping: [vx1]
skipping: [vx2]
skipping: [vx3]
skipping: [x1]
skipping: [x2]
skipping: [x3]

TASK [Find configuration deployment deploy_script for bgp] *********************
ok: [vx1]
ok: [vx2]
ok: [dut]
ok: [vx3]
ok: [x3]
ok: [x1]
ok: [x2]

TASK [Print deployed configuration when running in verbose mode] ***************
ok: [vx1] => 
  msg: |-
    bgp configuration for vx1
    =========================================
    !
    router bgp 65100
      no bgp ebgp-requires-policy
      no bgp default ipv4-unicast
      bgp default show-hostname
      bgp default show-nexthop-hostname
  
      ! Consider AS paths of same length but with different AS as ECMP candidates
      bgp bestpath as-path multipath-relax
  
      bgp router-id 10.0.0.5
    !
      neighbor 10.1.0.13 remote-as 65000
      neighbor 10.1.0.13 description dut
    !
      neighbor 2001:db8:3:3::1 remote-as 65000
      neighbor 2001:db8:3:3::1 description dut
    !
     address-family ipv4 unicast
    !
  
    !
      network 10.0.0.5/32
    !
    !
      network 172.42.42.0/24
      network 172.42.43.0/24
    !
      neighbor 10.1.0.13 activate
      no neighbor 10.1.0.13 send-community all
      neighbor 10.1.0.13 send-community standard
      neighbor 10.1.0.13 send-community large
    !
     address-family ipv6 unicast
    !
  
    !
      network 2001:db8:1:5::/64
    !
      network 2001:db8:dead:beef::/64
    !
    !
      neighbor 2001:db8:3:3::1 activate
      no neighbor 2001:db8:3:3::1 send-community all
      neighbor 2001:db8:3:3::1 send-community standard
      neighbor 2001:db8:3:3::1 send-community large
    !
    !
    ip route 172.42.42.0/24 Null0
    ip route 172.42.43.0/24 Null0
    !
    do write
ok: [vx2] => 
  msg: |-
    bgp configuration for vx2
    =========================================
    !
    router bgp 65101
      no bgp ebgp-requires-policy
      no bgp default ipv4-unicast
      bgp default show-hostname
      bgp default show-nexthop-hostname
  
      ! Consider AS paths of same length but with different AS as ECMP candidates
      bgp bestpath as-path multipath-relax
  
      bgp router-id 10.0.0.6
    !
      neighbor 10.1.0.17 remote-as 65000
      neighbor 10.1.0.17 description dut
    !
      neighbor 2001:db8:3:4::1 remote-as 65000
      neighbor 2001:db8:3:4::1 description dut
    !
     address-family ipv4 unicast
    !
  
    !
      network 10.0.0.6/32
    !
    !
    !
      neighbor 10.1.0.17 activate
      no neighbor 10.1.0.17 send-community all
      neighbor 10.1.0.17 send-community standard
      neighbor 10.1.0.17 send-community large
    !
     address-family ipv6 unicast
    !
  
    !
      network 2001:db8:1:6::/64
    !
    !
    !
      neighbor 2001:db8:3:4::1 activate
      no neighbor 2001:db8:3:4::1 send-community all
      neighbor 2001:db8:3:4::1 send-community standard
      neighbor 2001:db8:3:4::1 send-community large
    !
    !
    !
    do write
ok: [dut] => 
  msg: |-
    bgp configuration for dut
    =========================================
    !
    router bgp 65000
      log-neighbor-changes
  
    ! define a generic unnumbered template to be used for eBGP unnumbered...
    ! additionally, need to define link-local-only-nexthop as per Dell suggested "Cumulus workaround"
    ! WTF Dell...
      template unnumbered_ebgp
        link-local-only-nexthop
        exit
  
      router-id 10.0.0.1
    !
      neighbor 10.1.0.2
        remote-as 65100
  
        description "x1"
        send-community standard
  
    !
        address-family ipv4 unicast
          soft-reconfiguration inbound
          activate
        exit
        address-family ipv6 unicast
          no activate
        exit
  
        timers 3 9
        advertisement-interval 1
        no shutdown
      exit
    !
      neighbor 2001:db8:3::2
        remote-as 65100
  
        description "x1"
        send-community standard
  
        address-family ipv4 unicast
          no activate
        exit
    !
        address-family ipv6 unicast
          soft-reconfiguration inbound
          activate
        exit
  
        timers 3 9
        advertisement-interval 1
        no shutdown
      exit
    !
      neighbor 10.1.0.6
        remote-as 65101
  
        description "x2"
        send-community standard
  
    !
        address-family ipv4 unicast
          soft-reconfiguration inbound
          activate
        exit
        address-family ipv6 unicast
          no activate
        exit
  
        timers 3 9
        advertisement-interval 1
        no shutdown
      exit
    !
      neighbor 2001:db8:3:1::3
        remote-as 65101
  
        description "x2"
        send-community standard
  
        address-family ipv4 unicast
          no activate
        exit
    !
        address-family ipv6 unicast
          soft-reconfiguration inbound
          activate
        exit
  
        timers 3 9
        advertisement-interval 1
        no shutdown
      exit
    !
      neighbor 10.1.0.10
        remote-as 65102
  
        description "x3"
        send-community standard
  
    !
        address-family ipv4 unicast
          soft-reconfiguration inbound
          activate
        exit
        address-family ipv6 unicast
          no activate
        exit
  
        timers 3 9
        advertisement-interval 1
        no shutdown
      exit
    !
      neighbor 2001:db8:3:2::4
        remote-as 65102
  
        description "x3"
        send-community standard
  
        address-family ipv4 unicast
          no activate
        exit
    !
        address-family ipv6 unicast
          soft-reconfiguration inbound
          activate
        exit
  
        timers 3 9
        advertisement-interval 1
        no shutdown
      exit
    !
    !
     address-family ipv4 unicast
    !
      network 10.0.0.1/32
    !
    !
    !
    !
     address-family ipv6 unicast
    !
      network 2001:db8:1:1::/64
    !
    !
    !
    !
ok: [x2] => 
  msg: |-
    bgp configuration for x2
    =========================================
    !
    router bgp 65101
      no bgp ebgp-requires-policy
      no bgp default ipv4-unicast
      bgp default show-hostname
      bgp default show-nexthop-hostname
  
      ! Consider AS paths of same length but with different AS as ECMP candidates
      bgp bestpath as-path multipath-relax
  
      bgp router-id 10.0.0.3
    !
      neighbor 10.1.0.5 remote-as 65000
      neighbor 10.1.0.5 description dut
    !
      neighbor 2001:db8:3:1::1 remote-as 65000
      neighbor 2001:db8:3:1::1 description dut
    !
     address-family ipv4 unicast
    !
  
    !
      network 10.0.0.3/32
    !
    !
    !
      neighbor 10.1.0.5 activate
      no neighbor 10.1.0.5 send-community all
      neighbor 10.1.0.5 send-community standard
      neighbor 10.1.0.5 send-community large
    !
     address-family ipv6 unicast
    !
  
    !
      network 2001:db8:1:3::/64
    !
    !
    !
      neighbor 2001:db8:3:1::1 activate
      no neighbor 2001:db8:3:1::1 send-community all
      neighbor 2001:db8:3:1::1 send-community standard
      neighbor 2001:db8:3:1::1 send-community large
    !
    !
    !
    do write
ok: [vx3] => 
  msg: |-
    bgp configuration for vx3
    =========================================
    !
    router bgp 65102
      no bgp ebgp-requires-policy
      no bgp default ipv4-unicast
      bgp default show-hostname
      bgp default show-nexthop-hostname
  
      ! Consider AS paths of same length but with different AS as ECMP candidates
      bgp bestpath as-path multipath-relax
  
      bgp router-id 10.0.0.7
    !
      neighbor 10.1.0.21 remote-as 65000
      neighbor 10.1.0.21 description dut
    !
      neighbor 2001:db8:3:5::1 remote-as 65000
      neighbor 2001:db8:3:5::1 description dut
    !
     address-family ipv4 unicast
    !
  
    !
      network 10.0.0.7/32
    !
    !
    !
      neighbor 10.1.0.21 activate
      no neighbor 10.1.0.21 send-community all
      neighbor 10.1.0.21 send-community standard
      neighbor 10.1.0.21 send-community large
    !
     address-family ipv6 unicast
    !
  
    !
      network 2001:db8:1:7::/64
    !
    !
    !
      neighbor 2001:db8:3:5::1 activate
      no neighbor 2001:db8:3:5::1 send-community all
      neighbor 2001:db8:3:5::1 send-community standard
      neighbor 2001:db8:3:5::1 send-community large
    !
    !
    !
    do write
ok: [x1] => 
  msg: |-
    bgp configuration for x1
    =========================================
    !
    router bgp 65100
      no bgp ebgp-requires-policy
      no bgp default ipv4-unicast
      bgp default show-hostname
      bgp default show-nexthop-hostname
  
      ! Consider AS paths of same length but with different AS as ECMP candidates
      bgp bestpath as-path multipath-relax
  
      bgp router-id 10.0.0.2
    !
      neighbor 10.1.0.1 remote-as 65000
      neighbor 10.1.0.1 description dut
    !
      neighbor 2001:db8:3::1 remote-as 65000
      neighbor 2001:db8:3::1 description dut
    !
     address-family ipv4 unicast
    !
  
    !
      network 10.0.0.2/32
    !
    !
      network 172.42.42.0/24
      network 172.42.43.0/24
    !
      neighbor 10.1.0.1 activate
      no neighbor 10.1.0.1 send-community all
      neighbor 10.1.0.1 send-community standard
      neighbor 10.1.0.1 send-community large
    !
     address-family ipv6 unicast
    !
  
    !
      network 2001:db8:1:2::/64
    !
      network 2001:db8:dead:beef::/64
    !
    !
      neighbor 2001:db8:3::1 activate
      no neighbor 2001:db8:3::1 send-community all
      neighbor 2001:db8:3::1 send-community standard
      neighbor 2001:db8:3::1 send-community large
    !
    !
    ip route 172.42.42.0/24 Null0
    ip route 172.42.43.0/24 Null0
    !
    do write
ok: [x3] => 
  msg: |-
    bgp configuration for x3
    =========================================
    !
    router bgp 65102
      no bgp ebgp-requires-policy
      no bgp default ipv4-unicast
      bgp default show-hostname
      bgp default show-nexthop-hostname
  
      ! Consider AS paths of same length but with different AS as ECMP candidates
      bgp bestpath as-path multipath-relax
  
      bgp router-id 10.0.0.4
    !
      neighbor 10.1.0.9 remote-as 65000
      neighbor 10.1.0.9 description dut
    !
      neighbor 2001:db8:3:2::1 remote-as 65000
      neighbor 2001:db8:3:2::1 description dut
    !
     address-family ipv4 unicast
    !
  
    !
      network 10.0.0.4/32
    !
    !
    !
      neighbor 10.1.0.9 activate
      no neighbor 10.1.0.9 send-community all
      neighbor 10.1.0.9 send-community standard
      neighbor 10.1.0.9 send-community large
    !
     address-family ipv6 unicast
    !
  
    !
      network 2001:db8:1:4::/64
    !
    !
    !
      neighbor 2001:db8:3:2::1 activate
      no neighbor 2001:db8:3:2::1 send-community all
      neighbor 2001:db8:3:2::1 send-community standard
      neighbor 2001:db8:3:2::1 send-community large
    !
    !
    !
    do write

TASK [Deploy bgp configuration] ************************************************
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-config/dellos10.yml for dut
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-config/frr.yml for vx1, vx2, vx3, x1, x2, x3

TASK [wait_for_connection] *****************************************************
skipping: [dut]

TASK [dellos10_config: deploying bgp from /home/pipi/net101/tools/netsim/ansible/templates/bgp/dellos10.j2, save to startup=yes] ***
changed: [dut]

TASK [template] ****************************************************************
changed: [vx1]
changed: [x2]
changed: [x3]
changed: [vx3]
changed: [x1]
changed: [vx2]

TASK [set_fact] ****************************************************************
ok: [vx1]
ok: [vx2]
ok: [vx3]
ok: [x2]
ok: [x1]
ok: [x3]

TASK [run /tmp/config.sh to deploy bgp config from /home/pipi/net101/tools/netsim/ansible/templates/bgp/frr.j2] ***
skipping: [vx1]
skipping: [vx2]
skipping: [vx3]
skipping: [x1]
skipping: [x2]
skipping: [x3]

TASK [run vtysh to import bgp config from /home/pipi/net101/tools/netsim/ansible/templates/bgp/frr.j2] ***
changed: [vx1]
changed: [vx2]
changed: [x1]
changed: [x2]
changed: [x3]
changed: [vx3]

TASK [Figure out whether to deploy the module vrf on current device] ***********
ok: [vx1]
ok: [vx2]
ok: [dut]
ok: [vx3]
ok: [x1]
ok: [x2]
ok: [x3]

TASK [Find configuration template for vrf] *************************************
skipping: [vx1]
skipping: [vx2]
skipping: [vx3]
skipping: [x1]
skipping: [x2]
skipping: [x3]
ok: [dut]

TASK [fail] ********************************************************************
skipping: [dut]
skipping: [vx1]
skipping: [vx2]
skipping: [vx3]
skipping: [x1]
skipping: [x2]
skipping: [x3]

TASK [Find configuration deployment deploy_script for vrf] *********************
skipping: [vx1]
skipping: [vx2]
skipping: [vx3]
skipping: [x1]
skipping: [x2]
skipping: [x3]
ok: [dut]

TASK [Print deployed configuration when running in verbose mode] ***************
skipping: [vx1]
skipping: [vx2]
skipping: [vx3]
skipping: [x1]
skipping: [x2]
skipping: [x3]
ok: [dut] => 
  msg: |-
    vrf configuration for dut
    =========================================
  
    !
    ip vrf tenant
    !
    ! ip route-import|export xxx
     ip route-import 65000:1
     ip route-export 65000:1
    ! ipv6 route-import|export xxx
     ipv6 route-import 65000:1
     ipv6 route-export 65000:1
    !
    exit
    !
  
    router bgp 65000
    !
     vrf tenant
      router-id 10.0.0.1
    ! need to define unnumbered template also at vrf-level
      template unnumbered_ebgp
        link-local-only-nexthop
        exit
  
    !
      neighbor 10.1.0.14
        remote-as 65100
  
        description "vx1"
        send-community standard
  
    !
        address-family ipv4 unicast
          soft-reconfiguration inbound
          activate
        exit
        address-family ipv6 unicast
          no activate
        exit
  
        timers 3 9
        advertisement-interval 1
        no shutdown
      exit
    !
      neighbor 2001:db8:3:3::5
        remote-as 65100
  
        description "vx1"
        send-community standard
  
        address-family ipv4 unicast
          no activate
        exit
    !
        address-family ipv6 unicast
          soft-reconfiguration inbound
          activate
        exit
  
        timers 3 9
        advertisement-interval 1
        no shutdown
      exit
    !
      neighbor 10.1.0.18
        remote-as 65101
  
        description "vx2"
        send-community standard
  
    !
        address-family ipv4 unicast
          soft-reconfiguration inbound
          activate
        exit
        address-family ipv6 unicast
          no activate
        exit
  
        timers 3 9
        advertisement-interval 1
        no shutdown
      exit
    !
      neighbor 2001:db8:3:4::6
        remote-as 65101
  
        description "vx2"
        send-community standard
  
        address-family ipv4 unicast
          no activate
        exit
    !
        address-family ipv6 unicast
          soft-reconfiguration inbound
          activate
        exit
  
        timers 3 9
        advertisement-interval 1
        no shutdown
      exit
    !
      neighbor 10.1.0.22
        remote-as 65102
  
        description "vx3"
        send-community standard
  
    !
        address-family ipv4 unicast
          soft-reconfiguration inbound
          activate
        exit
        address-family ipv6 unicast
          no activate
        exit
  
        timers 3 9
        advertisement-interval 1
        no shutdown
      exit
    !
      neighbor 2001:db8:3:5::7
        remote-as 65102
  
        description "vx3"
        send-community standard
  
        address-family ipv4 unicast
          no activate
        exit
    !
        address-family ipv6 unicast
          soft-reconfiguration inbound
          activate
        exit
  
        timers 3 9
        advertisement-interval 1
        no shutdown
      exit
  
    !
     address-family ipv4 unicast
       redistribute connected
    !
     address-family ipv6 unicast
       redistribute connected
  
    !
      neighbor 10.1.0.14
         address-family ipv4 unicast
           soft-reconfiguration inbound
           activate
         address-family ipv6 unicast
           no activate
    !
      neighbor 2001:db8:3:3::5
         address-family ipv6 unicast
           soft-reconfiguration inbound
           activate
         address-family ipv4 unicast
           no activate
    !
      neighbor 10.1.0.18
         address-family ipv4 unicast
           soft-reconfiguration inbound
           activate
         address-family ipv6 unicast
           no activate
    !
      neighbor 2001:db8:3:4::6
         address-family ipv6 unicast
           soft-reconfiguration inbound
           activate
         address-family ipv4 unicast
           no activate
    !
      neighbor 10.1.0.22
         address-family ipv4 unicast
           soft-reconfiguration inbound
           activate
         address-family ipv6 unicast
           no activate
    !
      neighbor 2001:db8:3:5::7
         address-family ipv6 unicast
           soft-reconfiguration inbound
           activate
         address-family ipv4 unicast
           no activate

TASK [Deploy vrf configuration] ************************************************
skipping: [vx1]
skipping: [vx2]
skipping: [vx3]
skipping: [x1]
skipping: [x2]
skipping: [x3]
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-config/dellos10.yml for dut

TASK [wait_for_connection] *****************************************************
skipping: [dut]

TASK [dellos10_config: deploying vrf from /home/pipi/net101/tools/netsim/ansible/templates/vrf/dellos10.j2, save to startup=yes] ***
changed: [dut]

PLAY [Deploy custom deployment templates] **************************************

TASK [Run custom configuration deployment scripts] *****************************
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-custom-config.yml for dut => (item=bgp.policy)

TASK [Find configuration template] *********************************************
ok: [dut]

TASK [fail] ********************************************************************
skipping: [dut]

TASK [Check is the configuration template is a file] ***************************
ok: [dut -> localhost]

TASK [fail] ********************************************************************
skipping: [dut]

TASK [Process template /home/pipi/net101/tools/netsim/extra/bgp.policy/dellos10.j2 for dut] ***
skipping: [dut]

TASK [Find custom configuration deployment script] *****************************
ok: [dut]

TASK [Run the configuration deployment script] *********************************
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-config/dellos10.yml for dut

TASK [wait_for_connection] *****************************************************
skipping: [dut]

TASK [dellos10_config: deploying bgp.policy from /home/pipi/net101/tools/netsim/extra/bgp.policy/dellos10.j2, save to startup=yes] ***
fatal: [dut]: FAILED! => changed=false 
  command: router bgp 65000 vrf tenant
  msg: |-
    router bgp 65000 vrf tenant
    % Error: Illegal command line.
    dut(config-router-bgp-neighbor-af)#
  rc: -32603

PLAY RECAP *********************************************************************
dut                        : ok=40   changed=4    unreachable=0    failed=1    skipped=16   rescued=0    ignored=0   
vx1                        : ok=31   changed=5    unreachable=0    failed=0    skipped=19   rescued=0    ignored=0   
vx2                        : ok=30   changed=4    unreachable=0    failed=0    skipped=19   rescued=0    ignored=0   
vx3                        : ok=30   changed=4    unreachable=0    failed=0    skipped=19   rescued=0    ignored=0   
x1                         : ok=30   changed=4    unreachable=0    failed=0    skipped=19   rescued=0    ignored=0   
x2                         : ok=30   changed=4    unreachable=0    failed=0    skipped=19   rescued=0    ignored=0   
x3                         : ok=30   changed=4    unreachable=0    failed=0    skipped=19   rescued=0    ignored=0   

Fatal error in netlab: Executing Ansible playbook /home/pipi/net101/tools/netsim/ansible/initial-config.ansible failed
Error executing ansible-playbook /home/pipi/net101/tools/netsim/ansible/initial-config.ansible:
  Command '['ansible-playbook', '/home/pipi/net101/tools/netsim/ansible/initial-config.ansible']' returned non-zero exit status 2.
