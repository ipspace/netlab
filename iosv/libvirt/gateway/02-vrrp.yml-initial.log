[WARNING]: Could not match supplied host pattern, ignoring: unprovisioned

PLAY [Deploy initial device configuration] *************************************

TASK [Set variables that cannot be set with VARS] ******************************
ok: [h1]
ok: [h2]
ok: [r2]
ok: [dut]

TASK [Find device readiness script] ********************************************
ok: [h1]
ok: [h2]
ok: [r2]
ok: [dut]

TASK [Wait for device to become ready] *****************************************
skipping: [h1]
skipping: [h2]
skipping: [dut]
included: /home/pipi/net101/tools/netsim/ansible/tasks/readiness-check/eos-clab.yml for r2

TASK [Wait for cEOS SSH daemon to start] ***************************************
ok: [r2]

TASK [Deploy initial configuration] ********************************************
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-module.yml for r2, h1, h2, dut

TASK [Figure out whether to deploy the module initial on current device] *******
ok: [h1]
ok: [h2]
ok: [r2]
ok: [dut]

TASK [Find configuration template for initial] *********************************
ok: [h1]
ok: [h2]
ok: [r2]
ok: [dut]

TASK [fail] ********************************************************************
skipping: [r2]
skipping: [h1]
skipping: [h2]
skipping: [dut]

TASK [Print deployed configuration when running in verbose mode] ***************
ok: [h1] => 
  msg: |-
    initial configuration for h1
    =========================================
    #!/bin/bash
    #
    set -e
    set -x
    #
    # Create bash profile script
    #
    cat <<SCRIPT >/root/.bash_profile
    #!/bin/bash
    #
    export PS1="\h(bash)# "
    echo
    echo "Use vtysh to connect to FRR daemon"
    echo
    SCRIPT
    #
    # Get the current next hop for the default route
    #
    def_nh=$(ip route list default|awk '{ print $3 }')
    #
    # Create the management VRF and add eth0 to it
    #
    if [ ! -e /sys/devices/virtual/net/mgmt ]; then
      ip link add mgmt type vrf table 42
    fi
    ip link set mgmt up
    sysctl -qw net.ipv6.conf.eth0.keep_addr_on_down=1
    ip link set eth0 master mgmt
    #
    # Reinstall the default route if we had it before
    #
    if [[ -n "$def_nh" ]]; then
      ip route add 0.0.0.0/0 vrf mgmt via $def_nh
    fi
    #
    # Enable FRR modules (if not using containerlab bind-mounted /etc/frr/daemons)
    #
  
    #
    # Create loopbacks, stub and lag/bond devices
    #
  
    # Disable IPv6 (for IPv4-only interfaces) or SLAAC (if the device is a router)
    #
  
    #
    # Add vtysh.conf file
    echo "service integrated-vtysh-config" >/etc/frr/vtysh.conf
    #
    # Set Ethernet interface MTU
    ip link set dev eth1 mtu 1500
  
    #
    # Rest of initial configuration done through VTYSH
    #
    cat >/tmp/config <<CONFIG
    hostname h1
    !
    vrf mgmt
     exit-vrf
    !
    ipv6 forwarding
    frr defaults datacenter
    !
    interface eth1
     no shutdown
     description h1 -> [dut,r2]
     ip address 172.16.33.3/24
     ipv6 address 2001:db8:cafe:33::3/64
     ipv6 nd ra-interval 5
     no ipv6 nd suppress-ra
    !
    do write
    CONFIG
    vtysh -f /tmp/config
    exit 0
ok: [h2] => 
  msg: |-
    initial configuration for h2
    =========================================
    #!/bin/bash
    #
    set -e
    set -x
    #
    # Create bash profile script
    #
    cat <<SCRIPT >/root/.bash_profile
    #!/bin/bash
    #
    export PS1="\h(bash)# "
    echo
    echo "Use vtysh to connect to FRR daemon"
    echo
    SCRIPT
    #
    # Get the current next hop for the default route
    #
    def_nh=$(ip route list default|awk '{ print $3 }')
    #
    # Create the management VRF and add eth0 to it
    #
    if [ ! -e /sys/devices/virtual/net/mgmt ]; then
      ip link add mgmt type vrf table 42
    fi
    ip link set mgmt up
    sysctl -qw net.ipv6.conf.eth0.keep_addr_on_down=1
    ip link set eth0 master mgmt
    #
    # Reinstall the default route if we had it before
    #
    if [[ -n "$def_nh" ]]; then
      ip route add 0.0.0.0/0 vrf mgmt via $def_nh
    fi
    #
    # Enable FRR modules (if not using containerlab bind-mounted /etc/frr/daemons)
    #
  
    #
    # Create loopbacks, stub and lag/bond devices
    #
  
    # Disable IPv6 (for IPv4-only interfaces) or SLAAC (if the device is a router)
    #
  
    #
    # Add vtysh.conf file
    echo "service integrated-vtysh-config" >/etc/frr/vtysh.conf
    #
    # Set Ethernet interface MTU
    ip link set dev eth1 mtu 1500
  
    #
    # Rest of initial configuration done through VTYSH
    #
    cat >/tmp/config <<CONFIG
    hostname h2
    !
    vrf mgmt
     exit-vrf
    !
    ipv6 forwarding
    frr defaults datacenter
    !
    interface eth1
     no shutdown
     description h2 -> [dut,r2]
     ip address 172.16.44.4/24
     ipv6 address 2001:db8:cafe:44::4/64
     ipv6 nd ra-interval 5
     no ipv6 nd suppress-ra
    !
    do write
    CONFIG
    vtysh -f /tmp/config
    exit 0
ok: [r2] => 
  msg: |-
    initial configuration for r2
    =========================================
    hostname r2
    !
    logging monitor debugging
    aaa authorization exec default local
    !
    lldp run
    ip routing
    ipv6 unicast-routing
    !
    !
    ip host dut 10.0.0.1 172.16.33.1 172.16.44.1
    ip host h1 172.16.33.3
    ip host h2 172.16.44.4
    ipv6 host dut 2001:db8:cafe:33::1
    ipv6 host h1 2001:db8:cafe:33::3
    ipv6 host h2 2001:db8:cafe:44::4
    !
    interface Management0
     no lldp transmit
     no lldp receive
    !
    interface Loopback0
     no shutdown
     ip address 10.0.0.2/32
    !
    interface Ethernet1
     no shutdown
     no switchport
     description r2 -> [h1,dut]
     ip address 172.16.33.2/24
     ipv6 nd ra interval 5
     ipv6 address 2001:db8:cafe:33::2/64
    !
     mac-address 52dc.cafe.0201
    !
    interface Ethernet2
     no shutdown
     no switchport
     description r2 -> [dut,h2]
     ip address 172.16.44.2/24
     ipv6 nd ra interval 5
     ipv6 address 2001:db8:cafe:44::2/64
    !
     mac-address 52dc.cafe.0202
    !
ok: [dut] => 
  msg: |-
    initial configuration for dut
    =========================================
    hostname dut
    !
    no ip domain lookup
    !
    lldp run
    !
    ip host h1 172.16.33.3 2001:db8:cafe:33::3
    ip host h2 172.16.44.4 2001:db8:cafe:44::4
    ip host r2 10.0.0.2 172.16.33.2 172.16.44.2 2001:db8:cafe:33::2 2001:db8:cafe:44::2
    !
    ip routing
    !
    ipv6 unicast-routing
    !
    !
    interface Loopback0
     ip address 10.0.0.1 255.255.255.255
    !
    interface GigabitEthernet0/0
     no lldp transmit
     no lldp receive
    !
    interface GigabitEthernet0/1
     no shutdown
     description dut -> [h1,r2]
     ip address 172.16.33.1 255.255.255.0
     ipv6 address 2001:DB8:CAFE:33::1/64
    !
    interface GigabitEthernet0/2
     no shutdown
     description dut -> [r2,h2]
     ip address 172.16.44.1 255.255.255.0
     ipv6 address 2001:DB8:CAFE:44::1/64
    !
    !
    line vty 0 4
     exec-timeout 0 0
    !
    no banner exec
    no banner login
    no banner incoming

TASK [Find configuration deployment deploy_script for initial] *****************
ok: [h2]
ok: [h1]
ok: [r2]
ok: [dut]

TASK [Deploy initial configuration] ********************************************
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-config/eos.yml for r2
included: /home/pipi/net101/tools/netsim/ansible/tasks/frr/initial-clab.yml for h1, h2
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-config/ios.yml for dut

TASK [eos_config: deploying initial from /home/pipi/net101/tools/netsim/ansible/templates/initial/eos.j2] ***
[WARNING]: To ensure idempotency and correct diff the input configuration lines
should be similar to how they appear if present in the running configuration on
device including the indentation
changed: [r2]

TASK [Attempt to load VRF kernel module] ***************************************
changed: [h1 -> localhost]

TASK [Disable FRR management VRF when modprobe fails] **************************
skipping: [h1]
skipping: [h2]

TASK [include_tasks] ***********************************************************
included: /home/pipi/net101/tools/netsim/ansible/tasks/frr/deploy-config.yml for h1, h2

TASK [template] ****************************************************************
changed: [h1]
changed: [h2]

TASK [set_fact] ****************************************************************
ok: [h1]
ok: [h2]

TASK [run /tmp/config.sh to deploy initial config from /home/pipi/net101/tools/netsim/ansible/templates/initial/frr.j2] ***
changed: [h1]
changed: [h2]

TASK [run vtysh to import initial config from /home/pipi/net101/tools/netsim/ansible/templates/initial/frr.j2] ***
skipping: [h1]
skipping: [h2]

TASK [ios_config: deploying initial from /home/pipi/net101/tools/netsim/ansible/templates/initial/ios.j2] ***
changed: [dut]

PLAY [Deploy module-specific configurations] ***********************************

TASK [Set variables that cannot be set with VARS] ******************************
ok: [h1]
ok: [h2]
ok: [dut]
ok: [r2]

TASK [Deploy individual configuration modules] *********************************
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-module.yml for dut, h1, h2, r2 => (item=gateway)
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-module.yml for dut, h1, h2, r2 => (item=routing)

TASK [Figure out whether to deploy the module gateway on current device] *******
ok: [h1]
ok: [h2]
ok: [dut]
ok: [r2]

TASK [Find configuration template for gateway] *********************************
skipping: [h1]
skipping: [h2]
ok: [dut]
ok: [r2]

TASK [fail] ********************************************************************
skipping: [dut]
skipping: [h1]
skipping: [h2]
skipping: [r2]

TASK [Print deployed configuration when running in verbose mode] ***************
skipping: [h1]
skipping: [h2]
ok: [dut] => 
  msg: |-
    gateway configuration for dut
    =========================================
    fhrp version vrrp v3
    !
    interface GigabitEthernet0/1
      vrrp 217 address-family ipv4
        address 172.16.33.42
        priority 30
        preempt
      vrrp 217 address-family ipv6
        address fe80::200:5eff:fe00:02d9 primary
        address 2001:db8:cafe:33::2a/64
        priority 30
        preempt
ok: [r2] => 
  msg: |-
    gateway configuration for r2
    =========================================
    no ip icmp redirect
    !
    interface Ethernet1
      vrrp 217 ipv4 version 3
      vrrp 217 ipv4 checksum pseudo-header exclude
      vrrp 217 ipv4 172.16.33.42
      vrrp 217 ipv6 2001:db8:cafe:33::2a
      vrrp 217 priority-level 20
      vrrp 217 preempt

TASK [Find configuration deployment deploy_script for gateway] *****************
skipping: [h1]
skipping: [h2]
ok: [dut]
ok: [r2]

TASK [Deploy gateway configuration] ********************************************
skipping: [h1]
skipping: [h2]
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-config/ios.yml for dut
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-config/eos.yml for r2

TASK [ios_config: deploying gateway from /home/pipi/net101/tools/netsim/ansible/templates/gateway/ios.j2] ***
changed: [dut]

TASK [eos_config: deploying gateway from /home/pipi/net101/tools/netsim/ansible/templates/gateway/eos.j2] ***
changed: [r2]

TASK [Figure out whether to deploy the module routing on current device] *******
ok: [h1]
ok: [h2]
ok: [dut]
ok: [r2]

TASK [Find configuration template for routing] *********************************
skipping: [dut]
skipping: [r2]
ok: [h1]
ok: [h2]

TASK [fail] ********************************************************************
skipping: [dut]
skipping: [h1]
skipping: [h2]
skipping: [r2]

TASK [Print deployed configuration when running in verbose mode] ***************
skipping: [dut]
skipping: [r2]
ok: [h1] => 
  msg: |-
    routing configuration for h1
    =========================================
    !
    !
    !
    !
    ! Global static routes
    !
    ip route 172.16.44.0/24 172.16.33.42
    ipv6 route 2001:db8:cafe:44::/64 2001:db8:cafe:33::2a
ok: [h2] => 
  msg: |-
    routing configuration for h2
    =========================================
    !
    !
    !
    !
    ! Global static routes
    !
    ip route 172.16.33.0/24 172.16.44.1 eth1
    ipv6 route 2001:db8:cafe:33::/64 2001:db8:cafe:44::1 eth1

TASK [Find configuration deployment deploy_script for routing] *****************
skipping: [dut]
skipping: [r2]
ok: [h1]
ok: [h2]

TASK [Deploy routing configuration] ********************************************
skipping: [dut]
skipping: [r2]
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-config/frr.yml for h1, h2

TASK [template] ****************************************************************
changed: [h1]
changed: [h2]

TASK [set_fact] ****************************************************************
ok: [h1]
ok: [h2]

TASK [run /tmp/config.sh to deploy routing config from /home/pipi/net101/tools/netsim/ansible/templates/routing/frr.j2] ***
skipping: [h1]
skipping: [h2]

TASK [run vtysh to import routing config from /home/pipi/net101/tools/netsim/ansible/templates/routing/frr.j2] ***
changed: [h1]
changed: [h2]

PLAY [Deploy custom deployment templates] **************************************
skipping: no hosts matched

PLAY RECAP *********************************************************************
dut                        : ok=19   changed=2    unreachable=0    failed=0    skipped=8    rescued=0    ignored=0   
h1                         : ok=25   changed=5    unreachable=0    failed=0    skipped=11   rescued=0    ignored=0   
h2                         : ok=24   changed=4    unreachable=0    failed=0    skipped=11   rescued=0    ignored=0   
r2                         : ok=21   changed=2    unreachable=0    failed=0    skipped=7    rescued=0    ignored=0   



This lab tests IPv4 VRRP configuration. It checks whether the
device-under-test (DUT) forwards traffic sent to the VRRP IP/MAC address,
whether it has correct VRRP priority, and whether the preemption mechanism
works.

