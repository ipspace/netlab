[WARNING]: Could not match supplied host pattern, ignoring: unprovisioned
[WARNING]: Found variable using reserved name: hosts

PLAY [Deploy initial device configuration] *************************************

TASK [Set variables that cannot be set with VARS] ******************************
ok: [h1]
ok: [h2]
ok: [r1]
ok: [r2]

TASK [Find device readiness script] ********************************************
ok: [h1]
ok: [h2]
ok: [r1]
ok: [r2]

TASK [Wait for device to become ready] *****************************************
skipping: [r1]
skipping: [h1]
skipping: [h2]
included: /home/pipi/netlab_gh/netsim/ansible/tasks/readiness-check/iol-clab.yml for r2

TASK [Check if 'sshpass' is installed] *****************************************
ok: [r2 -> localhost]

TASK [Check for 'timeout' command] *********************************************
ok: [r2 -> localhost]

TASK [Execute local ssh command to check iol readiness] ************************
FAILED - RETRYING: [r2 -> localhost]: Execute local ssh command to check iol readiness (20 retries left).
FAILED - RETRYING: [r2 -> localhost]: Execute local ssh command to check iol readiness (19 retries left).
ok: [r2 -> localhost]

TASK [Confirm r2 SSH server works] *********************************************
ok: [r2] => 
  msg: Node r2 is ready.

TASK [Normalize config on bridge-like devices] *********************************
included: /home/pipi/netlab_gh/netsim/ansible/tasks/deploy-module.yml for r1, h1, h2, r2

TASK [Figure out whether to deploy the module normalize on current device] *****
ok: [h1]
ok: [h2]
ok: [r1]
ok: [r2]

TASK [Find configuration template for normalize] *******************************
ok: [h1]
ok: [h2]
ok: [r1]
ok: [r2]

TASK [fail] ********************************************************************
skipping: [r1]
skipping: [h1]
skipping: [h2]
skipping: [r2]

TASK [Find configuration deployment deploy_script for normalize] ***************
ok: [h1]
ok: [h2]
ok: [r1]
ok: [r2]

TASK [Print deployed configuration when running in verbose mode] ***************
skipping: [r1]
skipping: [h1]
skipping: [h2]
skipping: [r2]

TASK [Deploy normalize configuration] ******************************************
skipping: [r1]
skipping: [h1]
skipping: [h2]
skipping: [r2]

TASK [Deploy initial configuration] ********************************************
included: /home/pipi/netlab_gh/netsim/ansible/tasks/deploy-module.yml for r1, h1, h2, r2

TASK [Figure out whether to deploy the module initial on current device] *******
ok: [h1]
ok: [h2]
ok: [r1]
ok: [r2]

TASK [Find configuration template for initial] *********************************
ok: [h1]
ok: [h2]
ok: [r1]
ok: [r2]

TASK [fail] ********************************************************************
skipping: [r1]
skipping: [h1]
skipping: [h2]
skipping: [r2]

TASK [Find configuration deployment deploy_script for initial] *****************
ok: [h1]
ok: [h2]
ok: [r1]
ok: [r2]

TASK [Print deployed configuration when running in verbose mode] ***************
ok: [h1] => 
  msg: |-
    initial configuration for h1
    =========================================
    #!/bin/bash
    #
    # This script contains the 'ip' commands needed to set up container
    # interfaces and route table. It's executed within the container
    # network namespace on the container host.
    #
    #  /etc/hosts file is generated as a clab bind.
    #
    set -e
  
    ### One-Shot configuration (non-Ubuntu VM or container)
    #
    # Send ARP requests from a sane source IP address
    sysctl -w net.ipv4.conf.all.arp_announce=2
  
    #
    # Disable IPv4 and IPv6 forwarding
    #
    sysctl -w net.ipv4.ip_forward=0
    sysctl -w net.ipv6.conf.all.forwarding=0
  
    #
    # Interface addressing, create any bond devices
    #
    ip link set dev eth1 up
    sysctl -w net.ipv6.conf.eth1.disable_ipv6=0
    set +e
    ip -6 addr del 2001:db8:1::1/64 dev eth1 2>/dev/null
    set -e
    ip -6 addr add 2001:db8:1::1/64 dev eth1
    ip link set dev eth1 mtu 1500
ok: [h2] => 
  msg: |-
    initial configuration for h2
    =========================================
    #!/bin/bash
    #
    # This script contains the 'ip' commands needed to set up container
    # interfaces and route table. It's executed within the container
    # network namespace on the container host.
    #
    #  /etc/hosts file is generated as a clab bind.
    #
    set -e
  
    ### One-Shot configuration (non-Ubuntu VM or container)
    #
    # Send ARP requests from a sane source IP address
    sysctl -w net.ipv4.conf.all.arp_announce=2
  
    #
    # Disable IPv4 and IPv6 forwarding
    #
    sysctl -w net.ipv4.ip_forward=0
    sysctl -w net.ipv6.conf.all.forwarding=0
  
    #
    # Interface addressing, create any bond devices
    #
    ip link set dev eth1 up
    sysctl -w net.ipv6.conf.eth1.disable_ipv6=0
    set +e
    ip -6 addr del 2001:db8:1:1::2/64 dev eth1 2>/dev/null
    set -e
    ip -6 addr add 2001:db8:1:1::2/64 dev eth1
    ip link set dev eth1 mtu 1500
ok: [r1] => 
  msg: |-
    initial configuration for r1
    =========================================
    hostname r1
    !
    no ip domain lookup
    !
    lldp run
    !
    ip host h1 2001:db8:1::1
    ip host h2 2001:db8:1:1::2
    ip host r2 2001:db8:0:4::1 2001:db8:1:1::4
    !
    ip routing
    !
    ipv6 unicast-routing
    !
    !
    interface Loopback0
     ipv6 address 2001:DB8:0:3::1/64
    !
    interface GigabitEthernet1
     no lldp transmit
     no lldp receive
    !
    interface GigabitEthernet2
     description r1 -> h1 [stub]
     ipv6 address 2001:DB8:1::3/64
     no shutdown
    !
    interface GigabitEthernet3
     description r1 -> r2
     ipv6 enable
     no shutdown
    !
    !
    line vty 0 4
     exec-timeout 0 0
    !
    no banner exec
    no banner login
    no banner incoming
ok: [r2] => 
  msg: |-
    initial configuration for r2
    =========================================
    hostname r2
    !
    no ip domain lookup
    !
    lldp run
    !
    ip host h1 2001:db8:1::1
    ip host h2 2001:db8:1:1::2
    ip host r1 2001:db8:0:3::1 2001:db8:1::3
    !
    ip routing
    !
    ipv6 unicast-routing
    !
    !
    interface Loopback0
     ipv6 address 2001:DB8:0:4::1/64
    !
    interface Ethernet0/0
     no lldp transmit
     no lldp receive
    !
    interface Ethernet0/1
     description r2 -> r1
     ipv6 enable
     no shutdown
    !
    interface Ethernet0/2
     description r2 -> h2 [stub]
     ipv6 address 2001:DB8:1:1::4/64
     no shutdown
    !
    !
    line vty 0 4
     exec-timeout 0 0
    !
    no banner exec
    no banner login
    no banner incoming

TASK [Deploy initial configuration] ********************************************
included: /home/pipi/netlab_gh/netsim/ansible/tasks/deploy-config/ios.yml for r1, r2
included: /home/pipi/netlab_gh/netsim/ansible/tasks/deploy-config/linux-clab.yml for h1, h2

TASK [ios_config: deploying initial from /home/pipi/netlab_gh/netsim/ansible/templates/initial/ios.j2] ***
[WARNING]: To ensure idempotency and correct diff the input configuration lines
should be similar to how they appear if present in the running configuration on
device including the indentation
changed: [r1]
changed: [r2]

TASK [Define script filename and determine whether to execute in netns] ********
ok: [h1]
ok: [h2]

TASK [Create a temporary file for the rendered script] *************************
changed: [h1 -> localhost]
changed: [h2 -> localhost]

TASK [Create container setup script from /home/pipi/netlab_gh/netsim/ansible/templates/initial/linux-clab.j2] ***
changed: [h1 -> localhost]
changed: [h2 -> localhost]

TASK [Copy script into running container at /tmp/config-h1_initial.sh] *********
skipping: [h1]
skipping: [h2]

TASK [Execute /tmp/config-h1_initial.sh to deploy initial config based on /home/pipi/netlab_gh/netsim/ansible/templates/initial/linux-clab.j2] ***
skipping: [h1]
skipping: [h2]

TASK [Container configuration for initial based on /home/pipi/netlab_gh/netsim/ansible/templates/initial/linux-clab.j2 executed in netns] ***
changed: [h2 -> localhost]
changed: [h1 -> localhost]

TASK [Remove temporary file /tmp/h1_initial-hj62pm0t.sh] ***********************
changed: [h1 -> localhost]
changed: [h2 -> localhost]

PLAY [Deploy module-specific configurations] ***********************************

TASK [Set variables that cannot be set with VARS] ******************************
ok: [r1]
ok: [r2]

TASK [Deploy individual configuration modules] *********************************
included: /home/pipi/netlab_gh/netsim/ansible/tasks/deploy-module.yml for r1, r2 => (item=eigrp)

TASK [Figure out whether to deploy the module eigrp on current device] *********
ok: [r1]
ok: [r2]

TASK [Find configuration template for eigrp] ***********************************
ok: [r1]
ok: [r2]

TASK [fail] ********************************************************************
skipping: [r1]
skipping: [r2]

TASK [Find configuration deployment deploy_script for eigrp] *******************
ok: [r1]
ok: [r2]

TASK [Print deployed configuration when running in verbose mode] ***************
ok: [r1] => 
  msg: |-
    eigrp configuration for r1
    =========================================
    ipv6 router eigrp 2
     eigrp router-id 10.0.0.3
  
     passive-interface GigabitEthernet2
    !
    interface Loopback0
     ipv6 eigrp 2
    !
    interface GigabitEthernet2
     ipv6 eigrp 2
    !
    interface GigabitEthernet3
     ipv6 eigrp 2
    !
ok: [r2] => 
  msg: |-
    eigrp configuration for r2
    =========================================
    ipv6 router eigrp 2
     eigrp router-id 10.0.0.4
  
     passive-interface Ethernet0/2
    !
    interface Loopback0
     ipv6 eigrp 2
    !
    interface Ethernet0/1
     ipv6 eigrp 2
    !
    interface Ethernet0/2
     ipv6 eigrp 2
    !

TASK [Deploy eigrp configuration] **********************************************
included: /home/pipi/netlab_gh/netsim/ansible/tasks/deploy-config/ios.yml for r1, r2

TASK [ios_config: deploying eigrp from /home/pipi/netlab_gh/netsim/ansible/templates/eigrp/ios.j2] ***
changed: [r1]
changed: [r2]

PLAY [Deploy custom deployment templates] **************************************
skipping: no hosts matched

PLAY RECAP *********************************************************************
h1                         : ok=17   changed=4    unreachable=0    failed=0    skipped=7    rescued=0    ignored=0   
h2                         : ok=17   changed=4    unreachable=0    failed=0    skipped=7    rescued=0    ignored=0   
r1                         : ok=21   changed=2    unreachable=0    failed=0    skipped=6    rescued=0    ignored=0   
r2                         : ok=26   changed=2    unreachable=0    failed=0    skipped=5    rescued=0    ignored=0   

