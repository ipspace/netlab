[WARNING]: Could not match supplied host pattern, ignoring: unprovisioned
[WARNING]: Found variable using reserved name: hosts

PLAY [Deploy initial device configuration] *************************************

TASK [Set variables that cannot be set with VARS] ******************************
ok: [dut]
ok: [r1]
ok: [r2]
ok: [r4]
ok: [r3]

TASK [Find device readiness script] ********************************************
ok: [dut]
ok: [r1]
ok: [r2]
ok: [r3]
ok: [r4]

TASK [Wait for device to become ready] *****************************************
skipping: [dut]
included: /home/pipi/net101/tools/netsim/ansible/tasks/readiness-check/eos-clab.yml for r1, r2, r3, r4

TASK [Wait for cEOS SSH daemon to start] ***************************************
ok: [r1]
ok: [r4]
ok: [r2]
ok: [r3]

TASK [Normalize config on bridge-like devices] *********************************
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-module.yml for dut, r1, r2, r3, r4

TASK [Figure out whether to deploy the module normalize on current device] *****
ok: [dut]
ok: [r1]
ok: [r2]
ok: [r4]
ok: [r3]

TASK [Find configuration template for normalize] *******************************
ok: [dut]
ok: [r1]
ok: [r2]
ok: [r3]
ok: [r4]

TASK [fail] ********************************************************************
skipping: [dut]
skipping: [r1]
skipping: [r2]
skipping: [r3]
skipping: [r4]

TASK [Find configuration deployment deploy_script for normalize] ***************
ok: [dut]
ok: [r1]
ok: [r2]
ok: [r3]
ok: [r4]

TASK [Print deployed configuration when running in verbose mode] ***************
skipping: [dut]
ok: [r1] => 
  msg: |-
    normalize configuration for r1
    =========================================
    !
    interface Ethernet1
     shutdown
     mac-address 52dc.cafe.0b01
ok: [r2] => 
  msg: |-
    normalize configuration for r2
    =========================================
    !
    interface Ethernet1
     shutdown
     mac-address 52dc.cafe.0c01
ok: [r3] => 
  msg: |-
    normalize configuration for r3
    =========================================
    !
    interface Ethernet1
     shutdown
     mac-address 52dc.cafe.1701
ok: [r4] => 
  msg: |-
    normalize configuration for r4
    =========================================
    !
    interface Ethernet1
     shutdown
     mac-address 52dc.cafe.1801

TASK [Deploy normalize configuration] ******************************************
skipping: [dut]
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-config/eos.yml for r1, r2, r3, r4

TASK [eos_config: deploying normalize from /home/pipi/net101/tools/netsim/ansible/templates/normalize/eos.j2] ***
[WARNING]: To ensure idempotency and correct diff the input configuration lines
should be similar to how they appear if present in the running configuration on
device including the indentation
changed: [r4]
changed: [r3]
changed: [r2]
changed: [r1]

TASK [Deploy initial configuration] ********************************************
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-module.yml for dut, r1, r2, r3, r4

TASK [Figure out whether to deploy the module initial on current device] *******
ok: [dut]
ok: [r1]
ok: [r2]
ok: [r3]
ok: [r4]

TASK [Find configuration template for initial] *********************************
ok: [dut]
ok: [r1]
ok: [r2]
ok: [r3]
ok: [r4]

TASK [fail] ********************************************************************
skipping: [dut]
skipping: [r1]
skipping: [r2]
skipping: [r3]
skipping: [r4]

TASK [Find configuration deployment deploy_script for initial] *****************
ok: [dut]
ok: [r1]
ok: [r2]
ok: [r3]
ok: [r4]

TASK [Print deployed configuration when running in verbose mode] ***************
ok: [dut] => 
  msg: |-
    initial configuration for dut
    =========================================
    #!/bin/bash
    #
    set -e
    set -x
    #
    # Create bash profile script
    #
    cat <<SCRIPT >/root/.bash_profile
    #!/bin/bash
    #
    export PS1="\h(bash)# "
    echo
    echo "Use vtysh to connect to FRR daemon"
    echo
    SCRIPT
    #
    # Get the current next hop for the default route
    #
    def_nh=$(ip route list default|awk '{ print $3 }')
    #
    # Create the management VRF and add eth0 to it
    #
    if [ ! -e /sys/devices/virtual/net/mgmt ]; then
      ip link add mgmt type vrf table 42
    fi
    ip link set mgmt up
    sysctl -qw net.ipv6.conf.eth0.keep_addr_on_down=1
    ip link set eth0 master mgmt
    #
    # Reinstall the default route if we had it before
    #
    if [[ -n "$def_nh" ]]; then
      ip route add 0.0.0.0/0 vrf mgmt via $def_nh
    fi
    #
    # Enable FRR modules (if not using containerlab bind-mounted /etc/frr/daemons)
    #
  
    #
    # Create loopbacks, stub and lag/bond devices
    #
    if [ ! -e /sys/class/net/lo ]; then
      if [ ! -e /sys/devices/virtual/net/lo ]; then
        ip link add lo type dummy
        ip link set dev lo up
      fi
    fi
  
    # Disable IPv6 (for IPv4-only interfaces) or SLAAC (if the device is a router)
    #
    sysctl -qw net.ipv6.conf.eth1.disable_ipv6=1
    ip link set dev eth1 mtu 1500
    sysctl -qw net.ipv6.conf.eth2.disable_ipv6=1
    ip link set dev eth2 mtu 1500
    sysctl -qw net.ipv6.conf.eth3.disable_ipv6=1
    ip link set dev eth3 mtu 1500
    sysctl -qw net.ipv6.conf.eth4.disable_ipv6=1
    ip link set dev eth4 mtu 1500
  
    #
    # Add vtysh.conf file
    echo "service integrated-vtysh-config" >/etc/frr/vtysh.conf
  
    #
    # Rest of initial configuration done through VTYSH
    #
    cat >/tmp/config <<CONFIG
    hostname dut
    !
    vrf mgmt
     exit-vrf
    !
    ipv6 forwarding
    frr defaults datacenter
    !
    interface lo
     no shutdown
     ip address 10.0.0.1/32
     ipv6 address 2001:db8:1:1::1/64
    !
    interface eth1
     no shutdown
     description dut -> r1 [external]
     ip address 10.1.0.1/30
    !
    interface eth2
     no shutdown
     description dut -> r2 [external]
     ip address 10.1.0.5/30
    !
    interface eth3
     no shutdown
     description dut -> r3 [external]
     ip address 10.1.0.9/30
    !
    interface eth4
     no shutdown
     description dut -> r4 [external]
     ip address 10.1.0.13/30
    !
    do write
    CONFIG
    vtysh -f /tmp/config
    exit 0
ok: [r1] => 
  msg: |-
    initial configuration for r1
    =========================================
    hostname r1
    !
    logging monitor debugging
    aaa authorization exec default local
    !
    lldp run
    ip routing
    ipv6 unicast-routing
    !
    !
    ip host dut 10.0.0.1
    ip host dut-blue 10.1.0.9 10.1.0.13
    ip host dut-red 10.1.0.1 10.1.0.5
    ip host r2 10.0.0.12 10.1.0.6
    ip host r3 10.0.0.23 10.1.0.10
    ip host r4 10.0.0.24 10.1.0.14
    ipv6 host dut 2001:db8:1:1::1
    ipv6 host r2 2001:db8:1:c::1
    ipv6 host r3 2001:db8:1:17::1
    ipv6 host r4 2001:db8:1:18::1
    !
    interface Management0
     no lldp transmit
     no lldp receive
    !
    interface Loopback0
     ip address 10.0.0.11/32
     ipv6 nd ra interval 5
     ipv6 address 2001:db8:1:b::1/64
    !
    interface Ethernet1
     no switchport
     platform tfa phy control-frame disabled
     description r1 -> dut [external]
     ip address 10.1.0.2/30
    !
     mac-address 52dc.cafe.0b01
     no shutdown
    !
ok: [r2] => 
  msg: |-
    initial configuration for r2
    =========================================
    hostname r2
    !
    logging monitor debugging
    aaa authorization exec default local
    !
    lldp run
    ip routing
    ipv6 unicast-routing
    !
    !
    ip host dut 10.0.0.1
    ip host dut-blue 10.1.0.9 10.1.0.13
    ip host dut-red 10.1.0.1 10.1.0.5
    ip host r1 10.0.0.11 10.1.0.2
    ip host r3 10.0.0.23 10.1.0.10
    ip host r4 10.0.0.24 10.1.0.14
    ipv6 host dut 2001:db8:1:1::1
    ipv6 host r1 2001:db8:1:b::1
    ipv6 host r3 2001:db8:1:17::1
    ipv6 host r4 2001:db8:1:18::1
    !
    interface Management0
     no lldp transmit
     no lldp receive
    !
    interface Loopback0
     ip address 10.0.0.12/32
     ipv6 nd ra interval 5
     ipv6 address 2001:db8:1:c::1/64
    !
    interface Ethernet1
     no switchport
     platform tfa phy control-frame disabled
     description r2 -> dut [external]
     ip address 10.1.0.6/30
    !
     mac-address 52dc.cafe.0c01
     no shutdown
    !
ok: [r4] => 
  msg: |-
    initial configuration for r4
    =========================================
    hostname r4
    !
    logging monitor debugging
    aaa authorization exec default local
    !
    lldp run
    ip routing
    ipv6 unicast-routing
    !
    !
    ip host dut 10.0.0.1
    ip host dut-blue 10.1.0.9 10.1.0.13
    ip host dut-red 10.1.0.1 10.1.0.5
    ip host r1 10.0.0.11 10.1.0.2
    ip host r2 10.0.0.12 10.1.0.6
    ip host r3 10.0.0.23 10.1.0.10
    ipv6 host dut 2001:db8:1:1::1
    ipv6 host r1 2001:db8:1:b::1
    ipv6 host r2 2001:db8:1:c::1
    ipv6 host r3 2001:db8:1:17::1
    !
    interface Management0
     no lldp transmit
     no lldp receive
    !
    interface Loopback0
     ip address 10.0.0.24/32
     ipv6 nd ra interval 5
     ipv6 address 2001:db8:1:18::1/64
    !
    interface Ethernet1
     no switchport
     platform tfa phy control-frame disabled
     description r4 -> dut [external]
     ip address 10.1.0.14/30
    !
     mac-address 52dc.cafe.1801
     no shutdown
    !
ok: [r3] => 
  msg: |-
    initial configuration for r3
    =========================================
    hostname r3
    !
    logging monitor debugging
    aaa authorization exec default local
    !
    lldp run
    ip routing
    ipv6 unicast-routing
    !
    !
    ip host dut 10.0.0.1
    ip host dut-blue 10.1.0.9 10.1.0.13
    ip host dut-red 10.1.0.1 10.1.0.5
    ip host r1 10.0.0.11 10.1.0.2
    ip host r2 10.0.0.12 10.1.0.6
    ip host r4 10.0.0.24 10.1.0.14
    ipv6 host dut 2001:db8:1:1::1
    ipv6 host r1 2001:db8:1:b::1
    ipv6 host r2 2001:db8:1:c::1
    ipv6 host r4 2001:db8:1:18::1
    !
    interface Management0
     no lldp transmit
     no lldp receive
    !
    interface Loopback0
     ip address 10.0.0.23/32
     ipv6 nd ra interval 5
     ipv6 address 2001:db8:1:17::1/64
    !
    interface Ethernet1
     no switchport
     platform tfa phy control-frame disabled
     description r3 -> dut [external]
     ip address 10.1.0.10/30
    !
     mac-address 52dc.cafe.1701
     no shutdown
    !

TASK [Deploy initial configuration] ********************************************
included: /home/pipi/net101/tools/netsim/ansible/tasks/frr/initial-clab.yml for dut
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-config/eos.yml for r1, r2, r3, r4

TASK [Attempt to load VRF kernel module] ***************************************
changed: [dut -> localhost]

TASK [Disable FRR management VRF when modprobe fails] **************************
skipping: [dut]

TASK [include_tasks] ***********************************************************
included: /home/pipi/net101/tools/netsim/ansible/tasks/frr/deploy-config.yml for dut

TASK [template] ****************************************************************
changed: [dut]

TASK [set_fact] ****************************************************************
ok: [dut]

TASK [run /tmp/config.sh to deploy initial config from /home/pipi/net101/tools/netsim/ansible/templates/initial/frr.j2] ***
changed: [dut]

TASK [run vtysh to import initial config from /home/pipi/net101/tools/netsim/ansible/templates/initial/frr.j2] ***
skipping: [dut]

TASK [eos_config: deploying initial from /home/pipi/net101/tools/netsim/ansible/templates/initial/eos.j2] ***
changed: [r2]
changed: [r4]
changed: [r1]
changed: [r3]

PLAY [Deploy module-specific configurations] ***********************************

TASK [Set variables that cannot be set with VARS] ******************************
ok: [dut]
ok: [r1]
ok: [r3]
ok: [r2]
ok: [r4]

TASK [Deploy individual configuration modules] *********************************
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-module.yml for dut, r1, r2, r3, r4 => (item=bgp)
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-module.yml for dut, r1, r2, r3, r4 => (item=vrf)

TASK [Figure out whether to deploy the module bgp on current device] ***********
ok: [dut]
ok: [r1]
ok: [r4]
ok: [r2]
ok: [r3]

TASK [Find configuration template for bgp] *************************************
ok: [dut]
ok: [r4]
ok: [r1]
ok: [r2]
ok: [r3]

TASK [fail] ********************************************************************
skipping: [dut]
skipping: [r1]
skipping: [r2]
skipping: [r3]
skipping: [r4]

TASK [Find configuration deployment deploy_script for bgp] *********************
ok: [dut]
ok: [r1]
ok: [r3]
ok: [r4]
ok: [r2]

TASK [Print deployed configuration when running in verbose mode] ***************
ok: [dut] => 
  msg: |-
    bgp configuration for dut
    =========================================
    !
    router bgp 65000
      no bgp ebgp-requires-policy
      no bgp default ipv4-unicast
      bgp default show-hostname
      bgp default show-nexthop-hostname
  
      ! Consider AS paths of same length but with different AS as ECMP candidates
      bgp bestpath as-path multipath-relax
  
      bgp router-id 10.0.0.1
    !
     address-family ipv4 unicast
    !
  
    !
      network 10.0.0.1/32
    !
    !
    !
     address-family ipv6 unicast
    !
  
    !
      network 2001:db8:1:1::/64
    !
    !
    !
    !
    !
    do write
ok: [r1] => 
  msg: |-
    bgp configuration for r1
    =========================================
    !
    !
    router bgp 65101
      bgp advertise-inactive
      bgp log-neighbor-changes
      no bgp default ipv4-unicast
      no bgp default ipv6-unicast
      router-id 10.0.0.11
    !
      neighbor 10.1.0.1 remote-as 65000
      neighbor 10.1.0.1 description dut
      neighbor 10.1.0.1 send-community standard large
    !
    !
     address-family ipv4
  
      network 10.0.0.11/32
    !
    !
    !
      neighbor 10.1.0.1 activate
    !
     address-family ipv6
  
      network 2001:db8:1:b::/64
    !
    !
    !
    !
ok: [r2] => 
  msg: |-
    bgp configuration for r2
    =========================================
    !
    !
    router bgp 65102
      bgp advertise-inactive
      bgp log-neighbor-changes
      no bgp default ipv4-unicast
      no bgp default ipv6-unicast
      router-id 10.0.0.12
    !
      neighbor 10.1.0.5 remote-as 65000
      neighbor 10.1.0.5 description dut
      neighbor 10.1.0.5 send-community standard large
    !
    !
     address-family ipv4
  
      network 10.0.0.12/32
    !
    !
    !
      neighbor 10.1.0.5 activate
    !
     address-family ipv6
  
      network 2001:db8:1:c::/64
    !
    !
    !
    !
ok: [r3] => 
  msg: |-
    bgp configuration for r3
    =========================================
    !
    !
    router bgp 65103
      bgp advertise-inactive
      bgp log-neighbor-changes
      no bgp default ipv4-unicast
      no bgp default ipv6-unicast
      router-id 10.0.0.23
    !
      neighbor 10.1.0.9 remote-as 65000
      neighbor 10.1.0.9 description dut
      neighbor 10.1.0.9 send-community standard large
    !
    !
     address-family ipv4
  
      network 10.0.0.23/32
    !
    !
    !
      neighbor 10.1.0.9 activate
    !
     address-family ipv6
  
      network 2001:db8:1:17::/64
    !
    !
    !
    !
ok: [r4] => 
  msg: |-
    bgp configuration for r4
    =========================================
    !
    !
    router bgp 65104
      bgp advertise-inactive
      bgp log-neighbor-changes
      no bgp default ipv4-unicast
      no bgp default ipv6-unicast
      router-id 10.0.0.24
    !
      neighbor 10.1.0.13 remote-as 65000
      neighbor 10.1.0.13 description dut
      neighbor 10.1.0.13 send-community standard large
    !
    !
     address-family ipv4
  
      network 10.0.0.24/32
    !
    !
    !
      neighbor 10.1.0.13 activate
    !
     address-family ipv6
  
      network 2001:db8:1:18::/64
    !
    !
    !
    !

TASK [Deploy bgp configuration] ************************************************
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-config/frr.yml for dut
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-config/eos.yml for r1, r2, r3, r4

TASK [template] ****************************************************************
changed: [dut]

TASK [set_fact] ****************************************************************
ok: [dut]

TASK [run /tmp/config.sh to deploy bgp config from /home/pipi/net101/tools/netsim/ansible/templates/bgp/frr.j2] ***
skipping: [dut]

TASK [run vtysh to import bgp config from /home/pipi/net101/tools/netsim/ansible/templates/bgp/frr.j2] ***
changed: [dut]

TASK [eos_config: deploying bgp from /home/pipi/net101/tools/netsim/ansible/templates/bgp/eos.j2] ***
changed: [r1]
changed: [r2]
changed: [r3]
changed: [r4]

TASK [Figure out whether to deploy the module vrf on current device] ***********
ok: [dut]
ok: [r1]
ok: [r2]
ok: [r3]
ok: [r4]

TASK [Find configuration template for vrf] *************************************
skipping: [r1]
skipping: [r2]
ok: [dut]
skipping: [r3]
skipping: [r4]

TASK [fail] ********************************************************************
skipping: [dut]
skipping: [r1]
skipping: [r2]
skipping: [r3]
skipping: [r4]

TASK [Find configuration deployment deploy_script for vrf] *********************
skipping: [r1]
skipping: [r2]
ok: [dut]
skipping: [r3]
skipping: [r4]

TASK [Print deployed configuration when running in verbose mode] ***************
skipping: [r1]
skipping: [r2]
skipping: [r3]
skipping: [r4]
ok: [dut] => 
  msg: |-
    vrf configuration for dut
    =========================================
    #!/bin/bash
    #
    set -e # Exit immediately when any command fails
    #
  
    # Create VRF tables
    if [ ! -e /sys/devices/virtual/net/blue ]; then
    ip link add blue type vrf table 101
    fi
    ip link set blue up
    if [ ! -e /sys/devices/virtual/net/red ]; then
    ip link add red type vrf table 100
    fi
    ip link set red up
  
    # Move interfaces and loopbacks to vrfs
    sysctl -qw net.ipv6.conf.eth1.keep_addr_on_down=1
    ip link set eth1 master red
    sysctl -qw net.ipv6.conf.eth2.keep_addr_on_down=1
    ip link set eth2 master red
    sysctl -qw net.ipv6.conf.eth3.keep_addr_on_down=1
    ip link set eth3 master blue
    sysctl -qw net.ipv6.conf.eth4.keep_addr_on_down=1
    ip link set eth4 master blue
  
    cat >/tmp/vrf_config <<CONFIG
    vrf blue
     exit-vrf
    vrf red
     exit-vrf
    !
    router bgp 65000
    !
    !
    router bgp 65000 vrf blue
     no bgp ebgp-requires-policy
     no bgp default ipv4-unicast
     bgp router-id 10.0.0.1
     neighbor 10.1.0.10 remote-as 65103
     neighbor 10.1.0.10 description r3
     neighbor 10.1.0.14 remote-as 65104
     neighbor 10.1.0.14 description r4
     address-family ipv4 unicast
      redistribute connected
  
      label vpn export auto
      export vpn
      import vpn
      rd vpn export 65000:2
      rt vpn import 65000:2
      rt vpn export 65000:2
      neighbor 10.1.0.10 activate
      neighbor 10.1.0.10 send-community standard
      neighbor 10.1.0.10 send-community large
      neighbor 10.1.0.14 activate
      neighbor 10.1.0.14 send-community standard
      neighbor 10.1.0.14 send-community large
     exit-address-family
    !
    !
    router bgp 65000 vrf red
     no bgp ebgp-requires-policy
     no bgp default ipv4-unicast
     bgp router-id 10.0.0.1
     neighbor 10.1.0.2 remote-as 65101
     neighbor 10.1.0.2 description r1
     neighbor 10.1.0.6 remote-as 65102
     neighbor 10.1.0.6 description r2
     address-family ipv4 unicast
      redistribute connected
  
      label vpn export auto
      export vpn
      import vpn
      rd vpn export 65000:1
      rt vpn import 65000:1
      rt vpn export 65000:1
      neighbor 10.1.0.2 activate
      neighbor 10.1.0.2 send-community standard
      neighbor 10.1.0.2 send-community large
      neighbor 10.1.0.6 activate
      neighbor 10.1.0.6 send-community standard
      neighbor 10.1.0.6 send-community large
     exit-address-family
    !
    !
    do write
    !
    CONFIG
    vtysh -f /tmp/vrf_config
    exit $?

TASK [Deploy vrf configuration] ************************************************
skipping: [r1]
skipping: [r2]
skipping: [r3]
skipping: [r4]
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-config/frr.yml for dut

TASK [template] ****************************************************************
changed: [dut]

TASK [set_fact] ****************************************************************
ok: [dut]

TASK [run /tmp/config.sh to deploy vrf config from /home/pipi/net101/tools/netsim/ansible/templates/vrf/frr.j2] ***
changed: [dut]

TASK [run vtysh to import vrf config from /home/pipi/net101/tools/netsim/ansible/templates/vrf/frr.j2] ***
skipping: [dut]

PLAY [Deploy custom deployment templates] **************************************

TASK [Run custom configuration deployment scripts] *****************************
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-custom-config.yml for r1, r2, r3, r4 => (item=bgp-xact)

TASK [Find configuration template] *********************************************
ok: [r1]
ok: [r2]
ok: [r3]
ok: [r4]

TASK [fail] ********************************************************************
skipping: [r1]
skipping: [r2]
skipping: [r3]
skipping: [r4]

TASK [Check is the configuration template is a file] ***************************
ok: [r1 -> localhost]
ok: [r2 -> localhost]
ok: [r3 -> localhost]
ok: [r4 -> localhost]

TASK [fail] ********************************************************************
skipping: [r1]
skipping: [r2]
skipping: [r3]
skipping: [r4]

TASK [Process template /home/pipi/net101/tools/tests/integration/vrf/bgp-xact.j2 for r1] ***
skipping: [r1]
skipping: [r2]
skipping: [r3]
skipping: [r4]

TASK [Find custom configuration deployment script] *****************************
ok: [r1]
ok: [r2]
ok: [r3]
ok: [r4]

TASK [Run the configuration deployment script] *********************************
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-config/eos.yml for r1, r2, r3, r4

TASK [eos_config: deploying bgp-xact from /home/pipi/net101/tools/tests/integration/vrf/bgp-xact.j2] ***
changed: [r2]
changed: [r3]
changed: [r4]
changed: [r1]

PLAY RECAP *********************************************************************
dut                        : ok=36   changed=7    unreachable=0    failed=0    skipped=11   rescued=0    ignored=0   
r1                         : ok=34   changed=4    unreachable=0    failed=0    skipped=11   rescued=0    ignored=0   
r2                         : ok=34   changed=4    unreachable=0    failed=0    skipped=11   rescued=0    ignored=0   
r3                         : ok=34   changed=4    unreachable=0    failed=0    skipped=11   rescued=0    ignored=0   
r4                         : ok=34   changed=4    unreachable=0    failed=0    skipped=11   rescued=0    ignored=0   



The device under test has two VRFs with two interfaces in each VRF.
Routers are attached to those interfaces and run BGP with device under test.
Assuming the multi-vrf test case succeeded, this one adds BGP routing with
CE routers.

* r1 and r2 should be able to ping each other
* r3 and r4 should be able to ping each other
* r1 should not be able to reach r3

The test also checks whether DUT unnecessarily enables IPv6 AF over IPv4
EBGP sessions

