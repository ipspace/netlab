[WARNING]: Could not match supplied host pattern, ignoring: unprovisioned

PLAY [Deploy initial device configuration] *************************************

TASK [Set variables that cannot be set with VARS] ******************************
ok: [server]
ok: [c1]
ok: [c2]

TASK [Find device readiness script] ********************************************
ok: [server]
ok: [c1]
ok: [c2]

TASK [Wait for device to become ready] *****************************************
skipping: [server]
skipping: [c1]
skipping: [c2]

TASK [Deploy initial configuration] ********************************************
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-module.yml for server, c1, c2

TASK [Figure out whether to deploy the module initial on current device] *******
ok: [server]
ok: [c1]
ok: [c2]

TASK [Find configuration template for initial] *********************************
ok: [server]
ok: [c1]
ok: [c2]

TASK [Print deployed configuration when running in verbose mode] ***************
ok: [server] => 
  msg: |-
    initial configuration for server
    =========================================
    #!/bin/bash
    #
    # This script contains the 'ip' commands needed to set up container
    # interfaces and route table. It's executed within the container
    # network namespace on the container host.
    #
    #  /etc/hosts file is generated as a clab bind.
    #
    set -e
    ### One-Shot configuration (non-Ubuntu VM or container)
    #
    # Disable IPv4 and IPv6 forwarding
    #
    sysctl -w net.ipv4.ip_forward=0
    sysctl -w net.ipv6.conf.all.forwarding=0
    #
    # Interface addressing
    #
    ip link set dev eth1 up
    set +e
    ip addr del 172.16.0.3/24 dev eth1 2>/dev/null
    set -e
    ip addr add 172.16.0.3/24 dev eth1
    ip link set eth1 mtu 1500
    #
    # Add routes to IPv4 address pools pointing to the first neighbor on the first link
    #
    # If you need anything better, use FRR instead of Linux and start routing (or use IPv6)
    #
    #
    # Print the final routing table
    ip route
ok: [c1] => 
  msg: |-
    initial configuration for c1
    =========================================
    hostname c1
    !
    no ip domain lookup
    !
    lldp run
    !
    ip host c2 10.0.0.2
    ip host server 172.16.0.3
    !
    ip routing
    !
    !
    interface Loopback0
     ip address 10.0.0.1 255.255.255.255
    !
    interface GigabitEthernet0/0
     no lldp transmit
     no lldp receive
    !
    interface GigabitEthernet0/1
     no shutdown
     no switchport
     description c1 -> [c2,server]
    !
    no banner exec
    no banner login
    no banner incoming
ok: [c2] => 
  msg: |-
    initial configuration for c2
    =========================================
    hostname c2
    !
    no ip domain lookup
    !
    lldp run
    !
    ip host c1 10.0.0.1
    ip host server 172.16.0.3
    !
    ip routing
    !
    !
    interface Loopback0
     ip address 10.0.0.2 255.255.255.255
    !
    interface GigabitEthernet0/0
     no lldp transmit
     no lldp receive
    !
    interface GigabitEthernet0/1
     no shutdown
     no switchport
     description c2 -> [c1,server]
    !
    no banner exec
    no banner login
    no banner incoming

TASK [Find configuration deployment deploy_script for initial] *****************
ok: [server]
ok: [c1]
ok: [c2]

TASK [Deploy initial configuration] ********************************************
included: /home/pipi/net101/tools/netsim/ansible/tasks/linux/initial-clab.yml for server
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-config/ios.yml for c1, c2

TASK [set_fact] ****************************************************************
ok: [server]

TASK [Create initial container setup from /home/pipi/net101/tools/netsim/ansible/templates/initial/linux-clab.j2] ***
changed: [server -> localhost]

TASK [Initial container configuration via /tmp/config-ydpVSWzL-server.sh] ******
changed: [server -> localhost]

TASK [file] ********************************************************************
changed: [server -> localhost]

TASK [ios_config: deploying initial from /home/pipi/net101/tools/netsim/ansible/templates/initial/ios.j2] ***
[WARNING]: To ensure idempotency and correct diff the input configuration lines
should be similar to how they appear if present in the running configuration on
device including the indentation
changed: [c2]
changed: [c1]

PLAY [Deploy module-specific configurations] ***********************************

TASK [Set variables that cannot be set with VARS] ******************************
ok: [server]
ok: [c1]
ok: [c2]

TASK [Deploy individual configuration modules] *********************************
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-module.yml for c1, c2, server => (item=dhcp)

TASK [Figure out whether to deploy the module dhcp on current device] **********
ok: [server]
ok: [c1]
ok: [c2]

TASK [Find configuration template for dhcp] ************************************
skipping: [server]
ok: [c1]
ok: [c2]

TASK [Print deployed configuration when running in verbose mode] ***************
skipping: [server]
ok: [c1] => 
  msg: |-
    dhcp configuration for c1
    =========================================
    interface GigabitEthernet0/1
      ip address dhcp
ok: [c2] => 
  msg: |-
    dhcp configuration for c2
    =========================================
    interface GigabitEthernet0/1
      no ip dhcp client request router
      ip address dhcp

TASK [Find configuration deployment deploy_script for dhcp] ********************
skipping: [server]
ok: [c1]
ok: [c2]

TASK [Deploy dhcp configuration] ***********************************************
skipping: [server]
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-config/ios.yml for c1, c2

TASK [ios_config: deploying dhcp from /home/pipi/net101/tools/netsim/ansible/templates/dhcp/ios.j2] ***
changed: [c1]
changed: [c2]

PLAY [Deploy custom deployment templates] **************************************
skipping: no hosts matched

PLAY RECAP *********************************************************************
c1                         : ok=17   changed=2    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
c2                         : ok=17   changed=2    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
server                     : ok=15   changed=3    unreachable=0    failed=0    skipped=5    rescued=0    ignored=0   



Use this topology to test the DHCPv4 client on your device. Use 'netlab
validate' to check whether your devices requested DHCP leases from the DHCP
server.

If your client suppors configurable 'router option' requests to generate
a default route, check that C1 has a default route but C2 does not.

