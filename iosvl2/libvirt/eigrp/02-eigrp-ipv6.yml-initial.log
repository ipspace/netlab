[WARNING]: Could not match supplied host pattern, ignoring: unprovisioned

PLAY [Deploy initial device configuration] *************************************

TASK [Set variables that cannot be set with VARS] ******************************
ok: [h1]
ok: [h2]
ok: [r1]
ok: [r2]

TASK [Find device readiness script] ********************************************
ok: [h1]
ok: [h2]
ok: [r1]
ok: [r2]

TASK [Wait for device to become ready] *****************************************
skipping: [h1]
skipping: [h2]
skipping: [r1]
skipping: [r2]

TASK [Deploy initial configuration] ********************************************
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-module.yml for h1, h2, r1, r2

TASK [Figure out whether to deploy the module initial on current device] *******
ok: [h1]
ok: [h2]
ok: [r1]
ok: [r2]

TASK [Find configuration template for initial] *********************************
ok: [h1]
ok: [h2]
ok: [r1]
ok: [r2]

TASK [Print deployed configuration when running in verbose mode] ***************
ok: [h1] => 
  msg: |-
    initial configuration for h1
    =========================================
    #!/bin/bash
    #
    # This script contains the 'ip' commands needed to set up container
    # interfaces and route table. It's executed within the container
    # network namespace on the container host.
    #
    #  /etc/hosts file is generated as a clab bind.
    #
    set -e
    ### One-Shot configuration (non-Ubuntu VM or container)
    #
    # Disable IPv4 and IPv6 forwarding
    #
    sysctl -w net.ipv4.ip_forward=0
    sysctl -w net.ipv6.conf.all.forwarding=0
    #
    # Interface addressing
    #
    ip link set dev eth1 up
    sysctl -w net.ipv6.conf.eth1.disable_ipv6=0
    set +e
    ip -6 addr del 2001:db8:1::1/64 dev eth1 2>/dev/null
    set -e
    ip -6 addr add 2001:db8:1::1/64 dev eth1
    ip link set eth1 mtu 1500
    #
    # Add routes to IPv4 address pools pointing to the first neighbor on the first link
    #
    # If you need anything better, use FRR instead of Linux and start routing (or use IPv6)
    #
    #
    # Print the final routing table
    ip route
ok: [h2] => 
  msg: |-
    initial configuration for h2
    =========================================
    #!/bin/bash
    #
    # This script contains the 'ip' commands needed to set up container
    # interfaces and route table. It's executed within the container
    # network namespace on the container host.
    #
    #  /etc/hosts file is generated as a clab bind.
    #
    set -e
    ### One-Shot configuration (non-Ubuntu VM or container)
    #
    # Disable IPv4 and IPv6 forwarding
    #
    sysctl -w net.ipv4.ip_forward=0
    sysctl -w net.ipv6.conf.all.forwarding=0
    #
    # Interface addressing
    #
    ip link set dev eth1 up
    sysctl -w net.ipv6.conf.eth1.disable_ipv6=0
    set +e
    ip -6 addr del 2001:db8:1:1::2/64 dev eth1 2>/dev/null
    set -e
    ip -6 addr add 2001:db8:1:1::2/64 dev eth1
    ip link set eth1 mtu 1500
    #
    # Add routes to IPv4 address pools pointing to the first neighbor on the first link
    #
    # If you need anything better, use FRR instead of Linux and start routing (or use IPv6)
    #
    #
    # Print the final routing table
    ip route
ok: [r1] => 
  msg: |-
    initial configuration for r1
    =========================================
    hostname r1
    !
    no ip domain lookup
    !
    lldp run
    !
    !
    ipv6 unicast-routing
    !
    !
    interface Loopback0
     ipv6 address 2001:DB8:0:3::1/64
    !
    interface GigabitEthernet0/0
     no lldp transmit
     no lldp receive
    !
    interface GigabitEthernet0/1
     no shutdown
     no switchport
     description r1 -> h1 [stub]
     ipv6 address 2001:DB8:1::3/64
    !
    interface GigabitEthernet0/2
     no shutdown
     no switchport
     description r1 -> r2
     ipv6 enable
    !
    no banner exec
    no banner login
    no banner incoming
ok: [r2] => 
  msg: |-
    initial configuration for r2
    =========================================
    hostname r2
    !
    no ip domain lookup
    !
    lldp run
    !
    !
    ipv6 unicast-routing
    !
    !
    interface Loopback0
     ipv6 address 2001:DB8:0:4::1/64
    !
    interface GigabitEthernet0/0
     no lldp transmit
     no lldp receive
    !
    interface GigabitEthernet0/1
     no shutdown
     no switchport
     description r2 -> r1
     ipv6 enable
    !
    interface GigabitEthernet0/2
     no shutdown
     no switchport
     description r2 -> h2 [stub]
     ipv6 address 2001:DB8:1:1::4/64
    !
    no banner exec
    no banner login
    no banner incoming

TASK [Find configuration deployment deploy_script for initial] *****************
ok: [h1]
ok: [h2]
ok: [r1]
ok: [r2]

TASK [Deploy initial configuration] ********************************************
included: /home/pipi/net101/tools/netsim/ansible/tasks/linux/initial-clab.yml for h1, h2
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-config/ios.yml for r1, r2

TASK [set_fact] ****************************************************************
ok: [h1]
ok: [h2]

TASK [Create initial container setup from /home/pipi/net101/tools/netsim/ansible/templates/initial/linux-clab.j2] ***
changed: [h1 -> localhost]
changed: [h2 -> localhost]

TASK [Initial container configuration via /tmp/config-UKsqkKOj-h1.sh] **********
changed: [h2 -> localhost]
changed: [h1 -> localhost]

TASK [file] ********************************************************************
changed: [h2 -> localhost]
changed: [h1 -> localhost]

TASK [ios_config: deploying initial from /home/pipi/net101/tools/netsim/ansible/templates/initial/ios.j2] ***
[WARNING]: To ensure idempotency and correct diff the input configuration lines
should be similar to how they appear if present in the running configuration on
device including the indentation
changed: [r1]
changed: [r2]

PLAY [Deploy module-specific configurations] ***********************************

TASK [Set variables that cannot be set with VARS] ******************************
ok: [r1]
ok: [r2]

TASK [Deploy individual configuration modules] *********************************
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-module.yml for r1, r2 => (item=eigrp)

TASK [Figure out whether to deploy the module eigrp on current device] *********
ok: [r1]
ok: [r2]

TASK [Find configuration template for eigrp] ***********************************
ok: [r1]
ok: [r2]

TASK [Print deployed configuration when running in verbose mode] ***************
ok: [r1] => 
  msg: |-
    eigrp configuration for r1
    =========================================
    ipv6 router eigrp 2
     eigrp router-id 10.0.0.3
  
     passive-interface GigabitEthernet0/1
    !
    interface Loopback0
     ipv6 eigrp 2
    !
    interface GigabitEthernet0/1
     ipv6 eigrp 2
    !
    interface GigabitEthernet0/2
     ipv6 eigrp 2
    !
ok: [r2] => 
  msg: |-
    eigrp configuration for r2
    =========================================
    ipv6 router eigrp 2
     eigrp router-id 10.0.0.4
  
     passive-interface GigabitEthernet0/2
    !
    interface Loopback0
     ipv6 eigrp 2
    !
    interface GigabitEthernet0/1
     ipv6 eigrp 2
    !
    interface GigabitEthernet0/2
     ipv6 eigrp 2
    !

TASK [Find configuration deployment deploy_script for eigrp] *******************
ok: [r1]
ok: [r2]

TASK [Deploy eigrp configuration] **********************************************
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-config/ios.yml for r1, r2

TASK [ios_config: deploying eigrp from /home/pipi/net101/tools/netsim/ansible/templates/eigrp/ios.j2] ***
changed: [r2]
changed: [r1]

PLAY [Deploy custom deployment templates] **************************************
skipping: no hosts matched

PLAY RECAP *********************************************************************
h1                         : ok=12   changed=3    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
h2                         : ok=12   changed=3    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
r1                         : ok=17   changed=2    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
r2                         : ok=17   changed=2    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   

