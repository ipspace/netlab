#
# This test case tries to trigger as many errors in addressing.py as possible
#
provider: libvirt

addressing:
  loopback:
  mgmt:
    ipv4: 192.168.200.0/24
    start: 100
  unnum:
    unnumbered: True
    ipv6: 2001:db8:1::/48
  inv_pfx:
    ipv4: 10.a.0.0/24
    ipv6: 2001:none:2::/48
  no_pfx:
    ipv4: 10.1.0.0/16
  pfx_string:
    ipv4: 10.2.0.0/16
    prefix: wrong
  pfx_long:
    ipv4: 10.3.0.0/16
    prefix: 77
  pfx_short:
    ipv4: 10.3.0.0/22
    prefix: 21
  pfx_v6:
    ipv6: 2001:db8:0:1::/64
  ipv4_pool: 10.4.0.0/16

includes: []

defaults:
  attributes:
    global: [ addressing,defaults,groups,links,module,name,nodes,plugin,provider ]
    internal: [ input,includes,pools,Provider,Plugin ]
    link: [ bandwidth,bridge,name,prefix,role,type,interfaces ]
    link_internal: [ linkindex ]
    link_no_propagate: [ prefix,interfaces ]

  providers:
    libvirt:
      config: Vagrantfile
  devices:
    iosv:
      interface_name: GigabitEthernet0/%d
      image:
        libvirt: x

nodes:
- name: r1
  device: iosv
- name: r2
  device: iosv

links:
- r1:
  r2:
