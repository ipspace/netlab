---
message: |
  The device under test is a VXLAN router-on-a-stick. This tests check
  VXLAN-to-VXLAN routing.

  * h1 and h2 should be able to ping each other

defaults.sources.extra: [ ../wait_times.yml ]

groups:
  _auto_create: True
  hosts:
    members: [ h1, h2 ]
    device: linux
    provider: clab

vlans:
  red:
    vrf: tenant
    links: [ s1-h1 ]
    vni: 5000
  blue:
    vrf: tenant
    links: [ s1-h2 ]
    vni: 5001

vrfs:
  tenant:
    loopback: True
    ospf: False

nodes:
  s1:
    module: [ vlan, vxlan, ospf ]
    vlan.mode: bridge
    device: frr
    provider: clab
  ros:
    module: [ vlan, vxlan, ospf, vrf ]
    vlans:                                      # Bring VLANs to ROS (until we agree on a better solution)
      red:
      blue:

links:
- s1:
  ros:
  mtu: 1600

validate:
  ospf_adj:
    description: Check OSPF adjacencies
    wait_msg: Waiting for OSPF adjacency process to complete
    wait: ospfv2_adj_p2p
    nodes: [ s1 ]
    plugin: ospf_neighbor(nodes.ros.ospf.router_id)
    stop_on_error: True
  ping_gw:
    description: Host-to-router ping-based reachability tests
    wait_msg: Waiting for OSPF to do its magic
    wait: vxlan_ping
    nodes: [ h1, h2 ]
    plugin: ping(nodes.ros.vrfs.tenant.loopback_address.ipv4)
  ping_e2e:
    description: Host-to-host ping-based reachability tests
    wait_msg: We might have to wait a bit longer
    wait: ping
    nodes: [ h1 ]
    plugin: ping('h2')

plugin: [ test.fixup ]
_fixup:
  arubacx:
    nodes.s1.device: eos
    validate.warning:
      wait: 0
      level: warning
      fail: VXLAN-encapsulated ARP requests from Aruba CX have invalid IP packet length
    _delete:
      nodes.s1.provider:
