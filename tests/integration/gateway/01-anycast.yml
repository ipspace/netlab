---
message: |
  This lab tests the anycast gateway functionality. It checks whether the
  anycast IP is active, whether it has the correct MAC address, and whether the
  first device in the forwarding path intercepts the packets with the shared MAC
  address.

module: [ gateway, vlan ]
defaults.interfaces.mtu: 1500

vlans:
  edge:
    gateway: True
    links: [ h1-dut, h3-dut, dut-x1, x1-h2 ]
    prefix:
      ipv4: 172.16.33.0/24
      ipv6: 2001:db8:cafe:33::/64

groups:
  probes:
    provider: clab
    members: [ h1, h2, h3, x1 ]
    device: frr
  probe_hosts:
    members: [ h1, h2, h3 ]
    module: [ routing ]
    role: host
    routing.static:
    - prefix: target
      nexthop:
        ipv4: 172.16.33.42
        ipv6: "2001:db8:cafe:33::2a"
  hosts:
    device: linux
    provider: clab
    members: [ th ]

gateway.protocol: anycast
gateway.id: 42
gateway.anycast.mac: 0200.cafe.c001

prefix:
  target:
    ipv4: 172.16.44.0/24
    ipv6: 2001:db8:cafe:44::/64

nodes: [ dut, x1, h1, h2, h3, th ]

links:
- interfaces: [ dut, x1, th ]
  prefix: target

defaults.devices.vjunos-router.netlab_validate:
  ping_h1_v4.wait: 120
  ping_h1_v6.wait: 60

validate:
  x1_gw_down:
    description: Shut down IPv6 on the X1 anycast interface so it cannot respond to ND requests
    nodes: [ x1 ]
    devices: [ frr ]
    exec: sysctl -w net.ipv6.conf.varp-40000.disable_ipv6=1
  ping_h1_v4:
    description: IPv4 ping target from H1/H2
    wait: 40
    wait_msg: Waiting for STP to enable VLAN ports
    nodes: [ h1, h2 ]
    plugin: ping('th',af='ipv4')
  ping_h3_gw:
    description: IPv4 ping target from H1/H2
    nodes: [ h3 ]
    plugin: ping(nodes.h3.interfaces[0].gateway.ipv4)
  ping_h1_v6:
    level: warning
    description: IPv6 ping target from H1/H2
    wait: 3
    wait_msg: Waiting for ping to work
    nodes: [ h1 ]
    plugin: ping('th',af='ipv6')
  nd:
    description: Check the IPv6 ND entry for the anycast gateway
    nodes: [ h1 ]
    devices: [ frr ]
    level: warning
    exec: ip -6 neighbor get {{ interfaces[0].gateway.ipv6|ipaddr('address') }} dev eth1
    valid: |
      '02:00:ca:fe:c0:01' in stdout
  x1_gw_up:
    description: Reenable IPv6 on X1 anycast interface
    nodes: [ x1 ]
    devices: [ frr ]
    exec: sysctl -w net.ipv6.conf.varp-40000.disable_ipv6=0
  ping_dup:
    description: Check for duplicate packets
    nodes: [ h1, h2 ]
    devices: [ frr, linux ]
    exec: ping -4 th -c 2
    valid: |
      'DUP' not in stdout
  trace_h1:
    description: Traceroute H1-TH (should go over DUT not X1)
    nodes: [ h1 ]
    devices: [ frr, linux ]
    exec: traceroute -4 -w 1 -q 2 th
    valid: |
      'th' in stdout and 'x1' not in stdout
  trace_h2:
    description: Traceroute H2-TH (should go over X1 not DUT)
    nodes: [ h2 ]
    devices: [ frr, linux ]
    exec: traceroute -4 -w 1 -q 2 th
    valid: |
      'th' in stdout and 'dut' not in stdout
  arp:
    description: Check the ARP entry for the anycast gateway
    nodes: [ h1, h3 ]
    devices: [ frr, linux ]
    exec: arp -n {{ interfaces[0].gateway.ipv4|ipaddr('address') }}
    valid: |
      '02:00:ca:fe:c0:01' in stdout
