---
message: |
  The device under test has two dual-stack VRFs with two interfaces in each VRF.
  Routers are attached to those interfaces and run IS-IS and BGP with device
  under test.

  This scenario tests IS-IS in VRF, redistribution of connected subnets into
  IS-IS and two-way IS-IS-to-BGP redistribution.

  * r1 and r2 should be able to ping each other
  * r3 and r4 should be able to ping each other
  * r1 should not be able to reach r3

defaults.sources.extra: [ defaults-ds.yml ]
isis.type: level-2

groups:
  ce_isis:
    members: [ r1, r3 ]
    module: [ isis ]
    device: frr
    provider: clab
  ce_bgp:
    members: [ r2, r4 ]
    module: [ bgp ]
    device: frr
    provider: clab
  pe:
    members: [ dut ]
    module: [ vrf, isis, bgp ]

vrfs:
  red:
    links: [ dut-r1, dut-r2 ]
  blue:
    links: [ dut-r3, dut-r4 ]

nodes:
  dut:
    bgp.as: 65000
  r1:
  r2:
    bgp.as: 65100
  r3:
  r4:
    bgp.as: 65101

validate:
  ebgp4:
    description: Check EBGP adjacencies with DUT
    wait_msg: Waiting for EBGP sessions to start
    nodes: [ r2, r4 ]
    plugin: bgp_neighbor(node.bgp.neighbors,'dut',af='ipv4')
    wait: 20
    stop_on_error: true
  ebgp6:
    description: Check EBGP adjacencies with DUT
    wait_msg: Waiting for EBGP sessions to start
    nodes: [ r2, r4 ]
    plugin: bgp_neighbor(node.bgp.neighbors,'dut',af='ipv6')
    wait: 20
    stop_on_error: true
  isis:
    description: Check IS-IS adjacencies with DUT
    wait_msg: Waiting for IS-IS adjacency process to complete
    wait: 30
    nodes: [ r1, r3 ]
    plugin: isis_neighbor('dut',level='L2')
    stop_on_error: true
  red_c_isis4:
    description: Check connected IPv4 subnet as IS-IS prefix on R1
    wait: 15
    wait_msg: Waiting for IS-IS convergence
    fail: DUT is not redistributing connected subnets into IS-IS
    nodes: [ r1 ]
    plugin: isis_prefix(pfx=nodes.r2.interfaces[0].ipv4,level='2')
  red_c_isis6:
    description: Check connected IPv6 subnet as IS-IS prefix on R1
    wait: 3
    wait_msg: Waiting for IS-IS convergence
    fail: DUT is not redistributing connected subnets into IS-IS
    nodes: [ r1 ]
    plugin: isis_prefix(pfx=nodes.r2.interfaces[0].ipv6,af='ipv6',level='2')
  red_bgp_isis4:
    description: Check for IPv4 BGP prefix in IS-IS
    wait_msg: Waiting for BGP and IS-IS convergence
    fail: BGP is not redistributed into IS-IS
    wait: 10
    nodes: [ r1 ]
    plugin: isis_prefix(pfx=nodes.r2.loopback.ipv4,af='ipv4',level='2')
  red_bgp_isis6:
    description: Check for IPv6 BGP prefix in IS-IS
    wait_msg: Waiting for BGP and IS-IS convergence
    fail: BGP is not redistributed into IS-IS
    wait: 5
    nodes: [ r1 ]
    plugin: isis_prefix(nodes.r2.loopback.ipv6,af='ipv6',level='2')
  red_isis_bgp4:
    description: Check for IS-IS IPv4 prefix in BGP
    wait_msg: Waiting for IS-IS and BGP convergence
    fail: IS-IS IPv4 prefixes are not redistributed into BGP
    wait: 10
    nodes: [ r2 ]
    plugin: bgp_prefix(nodes.r1.loopback.ipv4,af='ipv4')
  red_isis_bgp6:
    description: Check for IS-IS IPv6 prefix in BGP
    wait_msg: Waiting for IS-IS and BGP convergence
    fail: IS-IS IPv6 prefixes are not redistributed into BGP
    wait: 5
    nodes: [ r2 ]
    plugin: bgp_prefix(nodes.r1.loopback.ipv6,af='ipv6')
  red_lb_ping4:
    description: Loopback-to-loopback reachability test in VRF red
    nodes: [ r1 ]
    plugin: ping('r2',src=nodes.r1.loopback.ipv4,af='ipv4')
  red_lb_ping6:
    description: Loopback-to-loopback reachability test in VRF red
    nodes: [ r1 ]
    plugin: ping(nodes.r2.loopback.ipv6,src=nodes.r1.loopback.ipv6,af='ipv6')
  red_p_isis4:
    description: Check for reachability of IPv4 connected routes in IS-IS
    nodes: [ r2 ]
    plugin: ping(nodes.r1.interfaces[0].ipv4,af='ipv4')
  red_p_isis6:
    description: Check for reachability of IPv6 connected routes in IS-IS
    nodes: [ r2 ]
    plugin: ping(nodes.r1.interfaces[0].ipv4,af='ipv4')
  blue_lb_ping4:
    description: Loopback-to-loopback IPv4 reachability test in VRF blue
    wait: 10
    nodes: [ r3 ]
    plugin: ping('r4',src=nodes.r3.loopback.ipv4,af='ipv4')
  blue_lb_ping:
    description: Loopback-to-loopback IPv6 reachability test in VRF blue
    wait: 10
    nodes: [ r3 ]
    plugin: ping(nodes.r4.loopback.ipv6,src=nodes.r3.loopback.ipv6,af='ipv6')
