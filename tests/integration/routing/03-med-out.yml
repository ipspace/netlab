---
message: |
  Use this topology to test BGP MED on IPv4 and IPv6 prefixes. DUT
  has to set MED on outgoing EBGP updates.

plugin: [ bgp.policy, test.vrf_check ]
module: [ bgp ]

defaults.sources.extra: [ defaults-ds.yml, ../wait_times.yml, ../warnings.yml ]

groups:
  probes:
    device: frr
    provider: clab
    members: [ p_global, p_vrf ]

routing.policy:
  med_42:
    med: 42
  med_17:
    med: 17

vrfs:
  customer:
    loopback: True

nodes:
  dut:
    module: [ bgp, routing, vrf ]
    bgp.as: 65000
    id: 1
    loopback:
      ipv4: 10.0.0.42/32
      ipv6: 2001:db8:42:1::1/128
  p_global:
    bgp.as: 65100
  p_vrf:
    bgp.as: 65101

links:
- dut:
    bgp.policy.out: med_42
  p_global:
- dut:
    bgp.policy.out: med_17
  p_vrf:
  vrf: customer

validate:
  ebgp_v4:
    description: Check IPv4 EBGP sessions with DUT
    wait: ebgp_session
    nodes: [ p_global, p_vrf ]
    plugin: bgp_neighbor(node.bgp.neighbors,'dut')

  ebgp_v6:
    description: Check IPv6 EBGP sessions with DUT
    wait: ebgp_session
    nodes: [ p_global, p_vrf ]
    plugin: bgp_neighbor(node.bgp.neighbors,'dut',af='ipv6')

  pfx_v4:
    description: Check for IPv4 DUT prefix on Probe
    wait: bgp_scan_long
    nodes: [ p_global ]
    plugin: bgp_prefix(nodes.dut.loopback.ipv4)

  pfx_v6:
    description: Check for IPv6 DUT prefix on Probe
    wait: bgp_scan_long
    nodes: [ p_global ]
    plugin: bgp_prefix(nodes.dut.loopback.ipv6,af='ipv6')

  med_v4:
    description: Check for MED on DUT IPv4 X1 prefix
    wait: bgp_scan_long
    nodes: [ p_global ]
    plugin: bgp_prefix(nodes.dut.loopback.ipv4,med=42)

  med_v6:
    description: Check for MED on DUT IPv6 X1 prefix
    wait: bgp_scan_long
    nodes: [ p_global ]
    plugin: bgp_prefix(nodes.dut.loopback.ipv6,af='ipv6',med=42)

  vrf_pfx_v4:
    description: Check for IPv4 DUT prefix on Probe
    wait: bgp_scan_long
    nodes: [ p_vrf ]
    plugin: bgp_prefix(nodes.dut.vrfs.customer.loopback_address.ipv4)

  vrf_pfx_v6:
    description: Check for IPv6 DUT prefix on Probe
    wait: bgp_scan_long
    nodes: [ p_vrf ]
    plugin: bgp_prefix(nodes.dut.vrfs.customer.loopback_address.ipv6,af='ipv6')

  vrf_med_v4:
    description: Check for MED on DUT IPv4 X1 prefix
    wait: bgp_scan_long
    nodes: [ p_vrf ]
    plugin: bgp_prefix(nodes.dut.vrfs.customer.loopback_address.ipv4,med=17)

  vrf_med_v6:
    description: Check for MED on DUT IPv6 X1 prefix
    wait: bgp_scan_long
    nodes: [ p_vrf ]
    plugin: bgp_prefix(nodes.dut.vrfs.customer.loopback_address.ipv6,af='ipv6',med=17)
