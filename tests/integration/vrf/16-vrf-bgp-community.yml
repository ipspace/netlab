---
message: |
  Use this topology to test in-VRF BGP community propagation. The device under
  should propagate only standard communities to VRF EBGP neighbors.

  Three BGP communities are attached to the prefix advertised by x1: a standard
  one, an extended one, and a long one (standard communitiy using 4-octet AS)

defaults.sources.extra: [ ../wait_times.yml, ../warnings.yml ]

plugin: [ files ]

groups:
  probes:
    members: [ x1, x2 ]
    device: frr
    provider: clab
    module: [ bgp ]

vrfs:
  red:
    links:
    - dut-x1
    - dut-x2

nodes:
  dut:
    bgp.as: 65000
    module: [ vrf, bgp ]

  x1:
    id: 10
    bgp.as: 65010
    bgp.originate: 172.0.42.0/24
    config.inline: |
      route-map setcomm permit 10
      set community 65000:1 additive
      set extcommunity bandwidth 100
      set large-community 65000:0:1 additive
      exit
      !
      router bgp {{ bgp.as }}
      !
      address-family ipv4 unicast
      {% for n in bgp.neighbors %}
        neighbor {{ n.ipv4 }} route-map setcomm out
      {% endfor %}

  x2:
    id: 11
    bgp.as: 65011

validate:
  session:
    description: Check BGP sessions with DUT
    wait_msg: Wait for BGP sessions to be established
    wait: ebgp_session
    nodes: [ x1, x2 ]
    plugin: bgp_neighbor(node.bgp.neighbors,'dut')
  prefix:
    description: Check whether DUT propagates the beacon prefix
    wait_msg: Wait for BGP convergence
    wait: bgp_scan_long
    nodes: [ x2 ]
    plugin: bgp_prefix('172.0.42.0/24')
  std_comm:
    description: Check standard community propagation on VRF EBGP sessions
    nodes: [ x2 ]
    plugin: >
      bgp_prefix(
        '172.0.42.0/24',
        community={
          'community': '65000:1'})
  ext_comm:
    description: Check extended community propagation on VRF EBGP sessions
    nodes: [ x2 ]
    plugin: >
      bgp_prefix(
        '172.0.42.0/24',
        community={
          'extendedCommunity': 'LB:65000:12500000'},
        state='missing')
