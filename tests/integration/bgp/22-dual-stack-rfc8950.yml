---
message: |
  Use this topology to test the IPv4 AF using RFC 8950 next hops over
  a regular IPv6 EBGP session. This test assumes you already tested
  the unnumbered IPv4 addresses on your device.

defaults.sources.extra: [ ../wait_times.yml, ../warnings.yml ]

module: [ bgp ]

groups:
  probes:
    device: frr
    provider: clab
    members: [ x1, x2 ]

defaults.bgp.as: 65000
defaults.interfaces.mtu: 1500

addressing.interas.ipv4: True
addressing.interas.ipv6: 2001:db8:1::/48

nodes:
  dut:
    role: router
  x1:
    bgp.as: 65100
    loopback:
      ipv4: 172.42.40.1/24
      ipv6: 2001:db8:cafe::1/64
  x2:
    bgp.as: 65101
    loopback:
      ipv4: 172.42.42.1/24
      ipv6: 2001:db8:cafe:1::1/64

links:
- dut:
  x1:
  pool: interas
- dut:
  x2:
  pool: interas

validate:
  af_ipv6:
    description: Check IPv6 EBGP sessions with DUT
    wait_msg: Waiting for EBGP sessions
    wait: ebgp_session
    nodes: [ x1, x2 ]
    plugin: bgp_neighbor(node.bgp.neighbors,'dut',af='ipv6')

  prefix4:
    description: Check whether DUT propagates the IPv4 beacon prefix
    wait_msg: Wait for BGP convergence
    wait: bgp_scan_time
    nodes: [ x1 ]
    plugin: bgp_prefix('172.42.42.0/24')

  prefix6:
    description: Check whether DUT propagates the IPv6 beacon prefix
    wait_msg: Wait for BGP convergence
    wait: bgp_scan_time
    nodes: [ x1 ]
    plugin: bgp_prefix('2001:db8:cafe:1::/64',af='ipv6')

  ping4:
    description: Check the IPv4 data plane
    nodes: [ x1 ]
    plugin: ping('x2',src=nodes.x1.loopback.ipv4,af='ipv4')

  ping6:
    description: Check the IPv6 data plane
    nodes: [ x1 ]
    plugin: ping('x2',src=nodes.x1.loopback.ipv6,af='ipv6')
