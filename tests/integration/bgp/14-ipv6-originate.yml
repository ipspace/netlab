---
message: |
  Use this topology to test the origination and propagation
  of IPv6 prefixes.

defaults.sources.extra: [ defaults-ipv6.yml, ../wait_times.yml, ../warnings.yml ]

module: [ bgp ]

groups:
  probes:
    device: frr
    provider: clab
    members: [ x1, x2 ]

defaults.bgp.as: 65000
defaults.interfaces.mtu: 1500

nodes:
  dut:
    bgp.advertise_loopback: False
    loopback: True
  dut2:
    bgp.as: 65001
    loopback: True
  x1:
    bgp.as: 65100
  x2:
    bgp.as: 65101

links:
- dut-x1
- dut-x2
- dut:
  dut2:
  prefix.ipv6: 2001:db8:cafe:e01::/64
- dut:
  prefix.ipv6: 2001:db8:cafe:e42::/64
  bgp.advertise: True

validate:
  s_dut:
    description: Check EBGP sessions with DUT (wait up to 20 seconds)
    wait: ebgp_session
    wait_msg: Waiting for EBGP session to be established
    nodes: [ x1, x2 ]
    plugin: bgp_neighbor(node.bgp.neighbors,'dut',af='ipv6')
  stub:
    description: Check whether DUT originates a stub prefix (wait up to 15 seconds)
    wait: bgp_ios_redist
    wait_msg: Waiting for the stub prefix to be originated and propagated
    nodes: [ x1, x2 ]
    plugin: bgp_prefix('2001:db8:cafe:e42::/64',af='ipv6')
  loopback:
    description: Check whether DUT2 originates the loopback prefix (wait up to 15 seconds)
    wait: bgp_scan_long
    wait_msg: Waiting for the loopback prefix to be originated and propagated
    nodes: [ x1, x2 ]
    plugin: bgp_prefix(nodes.dut2.loopback.ipv6,af='ipv6')
  suppress_lb:
    description: Check whether DUT suppresses the loopback prefix
    nodes: [ x1, x2 ]
    plugin: bgp_prefix(nodes.dut.loopback.ipv6,state='missing',af='ipv6')
  suppress_p2p:
    description: Check whether DUT originates an unwanted prefix on a P2P link
    nodes: [ x1, x2 ]
    plugin: bgp_prefix('2001:db8:cafe:e01::/64',af='ipv6',state='missing')
