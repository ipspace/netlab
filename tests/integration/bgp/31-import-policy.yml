---
message: |
  Use this topology to test the import of OSPFv2 and OSPFv3 routes into BGP IPv4/IPv6 AF

module: [ bgp, ospf ]

defaults.interfaces.mtu: 1500

addressing:
  loopback:
    ipv6: 2001:db8:1::/48
  lan:
    ipv6: 2001:db8:2::/48
  p2p:
    ipv6: 2001:db8:3::/48

prefix:
  beacon:
    ipv4: 10.42.42.0/24
    ipv6: 2001:db8:cafe:42::/64

routing:
  prefix:
    p_beacon:
      prefix: beacon
  policy:
    i_beacon:
      match.prefix: p_beacon
      set.med: 50

groups:
  probes:
    device: frr
    provider: clab
    members: [ x1, r2 ]

nodes:
  dut:
    module: [ bgp, ospf, routing ]
    bgp.as: 65000
    bgp.import.ospf.policy: i_beacon
  x1:
    bgp.as: 65100
    module: [ bgp ]
  r2:
    module: [ ospf ]

links:
- dut-x1
- dut-r2
- r2:
  prefix: beacon

validate:
  ipv4_ebgp:
    description: IPv4 EBGP session (X1-DUT) should be established
    wait_msg: Wait for EBGP session
    wait: 20
    nodes: [ x1 ]
    plugin: bgp_neighbor(node.bgp.neighbors,'dut')
  ipv6_ebgp:
    description: IPv6 EBGP session (X1-DUT) should be established
    wait_msg: Wait for EBGP session
    wait: 20
    nodes: [ x1 ]
    plugin: bgp_neighbor(node.bgp.neighbors,'dut',af='ipv6')
  ipv4_ospf:
    description: OSPF session (R2-DUT) should be established
    wait_msg: Wait for OSPF session
    wait: 20
    nodes: [ r2 ]
    plugin: ospf_neighbor(nodes.dut.ospf.router_id)
  ipv6_ospf:
    description: OSPFv3 session (R2-DUT) should be established
    wait_msg: Wait for OSPF session
    wait: 20
    nodes: [ r2 ]
    plugin: ospf6_neighbor(nodes.dut.ospf.router_id)
  import_v4:
    description: Check whether R2 IPv4 prefix is redistributed into BGP
    wait: 15
    wait_msg: Waiting for the loopback prefix to be originated and redistributed
    nodes: [ x1 ]
    plugin: bgp_prefix(prefix.beacon.ipv4)
  import_v6:
    description: Check whether R2 IPv6 prefix is redistributed into BGP
    wait: 15
    wait_msg: Waiting for the loopback prefix to be originated and redistributed
    nodes: [ x1 ]
    plugin: bgp_prefix(prefix.beacon.ipv6,af='ipv6')
  wait:
    description: Wait a few seconds just to be on the safe side
    wait: 3
  filter_v4:
    description: Check whether R2 loopback IPv4 prefix is redistributed into BGP
    nodes: [ x1 ]
    plugin: bgp_prefix(nodes.r2.loopback.ipv4,state='missing')
  filter_v6:
    description: Check whether R2 loopback IPv6 prefix is redistributed into BGP
    nodes: [ x1 ]
    plugin: bgp_prefix(nodes.r2.loopback.ipv6,af='ipv6',state='missing')
