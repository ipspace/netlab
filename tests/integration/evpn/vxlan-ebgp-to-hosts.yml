defaults.vxlan.start_vni: 20000

message: |
  This test case builds a leaf-and-spine fabric with VLAN-over-VXLAN bridging and eBGP to the hosts. 
  The hosts and leaf switches are doing VLAN/VXLAN encap/decap, the spine switches are IP routers running eBGP, and EVPN eBGP RR.

  Assuming the 'vxlan-bridging' test case succeeded, this test case
  validates that EVPN works with eBGP, MTU settings and Centralized IRB.

  * both hosts on the same VLAN should be able to ping each other

  To change the devices under test, use netlab up -d parameter

defaults:
 provider: clab
 device: srlinux
 interfaces.mtu: 1550 # Increased for VXLAN

plugin: [ ebgp.utils ] # for allowas_in

groups:
  hosts:
    members: [ h1, h2, h3, h4 ]
    # device: frr
    module: [ vlan,vxlan,bgp,evpn,vrf ]
    node_data:
      bgp.as: 65004 # same AS on every host requires allowas_in
  leafs:
    members: [ leaf1, leaf2 ]
    module: [ vlan,vxlan,bgp,evpn,vrf ]
    vlans:
      red:
      #  vrf: tenant
      blue:
      #  vrf: tenant
  spines:
    members: [ spine ]
    module: [ bgp,evpn ]
    node_data:
      bgp.rr: True # one way to pass eBGP EVPN routes between leaves
      bgp.as: 65001

vrfs:
 tenant:
  evpn.transit_vni: True # FRR does not support asymmetrical

vlans:
 red:
  vrf: tenant
  bgp: False
 blue:
  #  vrf: tenant
  bgp: False

bgp.as: 65000
evpn.vlans: [ red, blue ]

bgp.sessions: # create only eBGP sessions
  ipv4: [ ebgp ]
  ipv6: [ ebgp ]

evpn.session: ebgp

nodes:
  h1:
  h2:
  h3:
  h4:
  leaf1:
    vlan.mode: irb
    bgp.as: 65002
  leaf2:
    vlan.mode: bridge
    bgp.as: 65003
  spine:

links:
- h1:
   bgp.allowas_in: True
  leaf1:
- h2:
   bgp.allowas_in: True
  leaf2:
- h3:
   bgp.allowas_in: True
  leaf1:
- h4:
   bgp.allowas_in: True
  leaf2:
- leaf1:
  spine:
- leaf2:
  spine:

# Stub links to emulate VMs
- h1:
  vlan.access: red
- h2:
  vlan.access: red
- h3:
  vlan.access: blue
- h4:
  vlan.access: blue
