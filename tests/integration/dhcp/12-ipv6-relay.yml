addressing.lan:
  ipv4: false
  ipv6: 2001:db8:cafe::/48

module: [ dhcp ]

groups:
  _auto_create: true
  clients:
    members: [ c1, c2, c3, c4 ]
    device: cumulus
    provider: clab
  servers:
    members: [ s1, s2 ]
    device: dnsmasq
    dhcp.server: true
    provider: clab

nodes:
  relay:
    module: [ dhcp ]

links:
- c1:
    ipv6: dhcp
  c2:
    ipv6: dhcp
  relay:
    dhcp.server: s1
- c3:
    ipv6: dhcp
  c4:
    ipv6: dhcp
  relay:
    dhcp.server: s2
- relay-s1
- relay-s2

validate:
  wait:
    description: Wait a bit for DHCP client and server
    wait: 5
  address:
    description: Check for DHCPv6 address assignments
    nodes: [ c1, c2, c3, c4 ]
    pass: The DHCPv6 clients got IPv6 addresses
    fail: No IPv6 address assigned
    exec:
      cumulus: "ip addr show dev swp1 | grep inet6 | grep global || true"
    valid:
      cumulus: stdout.rstrip()
  lease:
    description: Check for DHCP server lease
    nodes: [ s1, s2 ]
    pass: The DHCP server has at least one active IPv6 lease
    fail: There are no IPv6 leases on the DHCP server
    exec:
      dnsmasq: "cat /var/lib/misc/dnsmasq.leases | grep --color=never 2001:db8:cafe | wc -l"
    valid:
      eos: vrfs.default.ipv4ActiveLeases
      dnsmasq: stdout.rstrip() > '0'
  lease_all:
    description: Check for DHCP server lease
    nodes: [ s1, s2 ]
    pass: The DHCP server has at least two active IPv6 leases
    fail: There are not enough IPv6 leases on the DHCP server
    exec:
      dnsmasq: "cat /var/lib/misc/dnsmasq.leases | grep --color=never 2001:db8:cafe | wc -l"
    valid:
      dnsmasq: stdout.rstrip() == '2'

message: |
  Use this topology to test the DHCPv6 relay functionality of your device. Use
  'netlab validate' to check whether your device propagated DHCPv6 requests from
  DHCP clients to DHCP servers.
