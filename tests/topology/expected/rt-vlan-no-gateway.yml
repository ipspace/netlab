groups:
  hosts:
    device: linux
    members:
    - h1
    - h2
  switches:
    device: eos
    members:
    - s1
    module:
    - vlan
input:
- topology/input/rt-vlan-no-gateway.yml
- package:topology-defaults.yml
links:
- bridge: input_1
  interfaces:
  - ifindex: 1
    ifname: eth1
    ipv4: 172.16.0.1/24
    node: h1
  - ifindex: 1
    ifname: Ethernet1
    node: s1
    vlan:
      access: red
  linkindex: 1
  node_count: 2
  prefix:
    allocation: id_based
    ipv4: 172.16.0.0/24
  type: lan
- bridge: input_2
  interfaces:
  - ifindex: 1
    ifname: eth1
    ipv4: 172.16.0.2/24
    node: h2
  - ifindex: 2
    ifname: Ethernet2
    node: s1
    vlan:
      access: red
  linkindex: 2
  node_count: 2
  prefix:
    allocation: id_based
    ipv4: 172.16.0.0/24
  type: lan
module:
- vlan
name: input
nodes:
  h1:
    af:
      ipv4: true
    box: generic/ubuntu2004
    device: linux
    id: 1
    interfaces:
    - bridge: input_1
      ifindex: 1
      ifname: eth1
      ipv4: 172.16.0.1/24
      linkindex: 1
      name: h1 -> [s1,h2]
      neighbors:
      - ifname: Vlan1000
        node: s1
      - ifname: eth1
        ipv4: 172.16.0.2/24
        node: h2
      role: stub
      type: lan
    mgmt:
      ifname: eth0
      ipv4: 192.168.121.101
      mac: 08:4f:a9:00:00:01
    name: h1
    role: host
  h2:
    af:
      ipv4: true
    box: generic/ubuntu2004
    device: linux
    id: 2
    interfaces:
    - bridge: input_2
      ifindex: 1
      ifname: eth1
      ipv4: 172.16.0.2/24
      linkindex: 2
      name: h2 -> [h1,s1]
      neighbors:
      - ifname: eth1
        ipv4: 172.16.0.1/24
        node: h1
      - ifname: Vlan1000
        node: s1
      role: stub
      type: lan
    mgmt:
      ifname: eth0
      ipv4: 192.168.121.102
      mac: 08:4f:a9:00:00:02
    name: h2
    role: host
  s1:
    af:
      ipv4: true
    box: arista/veos
    device: eos
    id: 3
    interfaces:
    - bridge: input_1
      ifindex: 1
      ifname: Ethernet1
      linkindex: 1
      type: lan
      vlan:
        access: red
        access_id: 1000
    - bridge: input_2
      ifindex: 2
      ifname: Ethernet2
      linkindex: 2
      type: lan
      vlan:
        access: red
        access_id: 1000
    - bridge_group: 1
      ifindex: 3
      ifname: Vlan1000
      name: VLAN red (1000) -> [h1,h2]
      neighbors:
      - ifname: eth1
        ipv4: 172.16.0.1/24
        node: h1
      - ifname: eth1
        ipv4: 172.16.0.2/24
        node: h2
      role: stub
      type: svi
      virtual_interface: true
      vlan:
        mode: bridge
    loopback:
      ipv4: 10.0.0.3/32
    mgmt:
      ifname: Management1
      ipv4: 192.168.121.103
      mac: 08:4f:a9:00:00:03
    module:
    - vlan
    name: s1
    vlan:
      max_bridge_group: 1
    vlans:
      red:
        bridge_group: 1
        id: 1000
        mode: bridge
        prefix:
          allocation: id_based
          ipv4: 172.16.0.0/24
provider: libvirt
vlans:
  blue:
    id: 1001
    mode: bridge
    prefix:
      allocation: id_based
      ipv4: 172.16.1.0/24
  red:
    host_count: 2
    id: 1000
    mode: bridge
    neighbors:
    - ifname: eth1
      ipv4: 172.16.0.1/24
      node: h1
    - ifname: Vlan1000
      node: s1
    - ifname: eth1
      ipv4: 172.16.0.2/24
      node: h2
    prefix:
      allocation: id_based
      ipv4: 172.16.0.0/24
