groups:
  hosts:
    device: linux
    members:
    - h1
    - h2
    - h3
    - h4
    node_data:
      provider: clab
  switches:
    members:
    - s1
    - s2
    - s3
    module:
    - vlan
    - stp
input:
- topology/input/stp-port-type.yml
- package:topology-defaults.yml
libvirt:
  providers:
    clab: true
links:
- _linkname: links[1]
  interfaces:
  - ifindex: 1
    ifname: Ethernet1
    node: s1
    vlan:
      trunk:
        blue: {}
        red: {}
  - ifindex: 1
    ifname: Ethernet1
    node: s2
    vlan:
      trunk:
        blue: {}
        red: {}
  linkindex: 1
  name: port_type network configured on link
  node_count: 2
  prefix: {}
  stp:
    port_type: network
  type: p2p
  vlan:
    trunk:
      blue: {}
      red: {}
- _linkname: links[2]
  interfaces:
  - ifindex: 2
    ifname: Ethernet2
    ipv4: 10.1.0.1/30
    node: s1
  - ifindex: 1
    ifname: Ethernet1
    ipv4: 10.1.0.2/30
    node: s3
  linkindex: 2
  name: no port_type on IP interface
  node_count: 2
  prefix:
    ipv4: 10.1.0.0/30
  type: p2p
- _linkname: links[3]
  interfaces:
  - ifindex: 3
    ifname: Ethernet3
    node: s1
  - ifindex: 2
    ifname: Ethernet2
    node: s3
  linkindex: 3
  name: Inherit node port_type on L2 interface
  node_count: 2
  prefix: false
  type: p2p
- _linkname: links[4]
  bridge: input_4
  interfaces:
  - _vlan_mode: bridge
    ifindex: 2
    ifname: Ethernet2
    node: s2
    vlan:
      access: green
  - _vlan_mode: bridge
    ifindex: 3
    ifname: Ethernet3
    node: s3
    vlan:
      access: green
  linkindex: 4
  name: port_type normal configured on access vlan
  node_count: 2
  prefix:
    allocation: id_based
    ipv4: 172.16.2.0/24
  type: lan
  vlan:
    access: green
- _linkname: links[5]
  interfaces:
  - ifindex: 4
    ifname: Ethernet4
    node: s1
  - ifindex: 4
    ifname: Ethernet4
    node: s3
    stp:
      port_type: auto
  linkindex: 5
  name: port_type on l2 interface override node
  node_count: 2
  prefix: false
  type: p2p
- _linkname: vlans.red.links[1]
  bridge: input_6
  interfaces:
  - _vlan_mode: bridge
    ifindex: 5
    ifname: Ethernet5
    node: s1
    vlan:
      access: red
  - ifindex: 1
    ifname: eth1
    ipv4: 172.16.0.2/24
    node: h1
  libvirt:
    provider:
      clab: true
  linkindex: 6
  node_count: 2
  prefix:
    allocation: id_based
    ipv4: 172.16.0.0/24
  type: lan
  vlan:
    access: red
- _linkname: vlans.red.links[2]
  bridge: input_7
  interfaces:
  - _vlan_mode: bridge
    ifindex: 3
    ifname: Ethernet3
    node: s2
    vlan:
      access: red
  - ifindex: 1
    ifname: eth1
    ipv4: 172.16.0.3/24
    node: h2
  libvirt:
    provider:
      clab: true
  linkindex: 7
  node_count: 2
  prefix:
    allocation: id_based
    ipv4: 172.16.0.0/24
  type: lan
  vlan:
    access: red
- _linkname: vlans.blue.links[1]
  bridge: input_8
  interfaces:
  - _vlan_mode: bridge
    ifindex: 6
    ifname: Ethernet6
    node: s1
    vlan:
      access: blue
  - ifindex: 1
    ifname: eth1
    ipv4: 172.16.1.4/24
    node: h3
  libvirt:
    provider:
      clab: true
  linkindex: 8
  node_count: 2
  prefix:
    allocation: id_based
    ipv4: 172.16.1.0/24
  type: lan
  vlan:
    access: blue
- _linkname: vlans.green.links[1]
  bridge: input_9
  interfaces:
  - _vlan_mode: bridge
    ifindex: 4
    ifname: Ethernet4
    node: s2
    vlan:
      access: green
  - ifindex: 1
    ifname: eth1
    ipv4: 172.16.2.5/24
    node: h4
  libvirt:
    provider:
      clab: true
  linkindex: 9
  node_count: 2
  prefix:
    allocation: id_based
    ipv4: 172.16.2.0/24
  type: lan
  vlan:
    access: green
message: 'The devices under test form a server cluster connected to a pair of ToR
  switches.

  Host facing ports are automatically configured as ''edge'' ports, the inter-switch
  port is

  manually configured as ''network''


  * h1 and h2 should be able to ping each other

  * h3 and h4 should be able to ping each other

  * h1 should not be able to reach h3

  '
module:
- vlan
- stp
name: input
nodes:
  h1:
    af:
      ipv4: true
    box: python:3.9-alpine
    clab:
      binds:
      - clab_files/h1/hosts:/etc/hosts
      config_templates:
      - hosts:/etc/hosts
      kind: linux
    device: linux
    hostname: clab-input-h1
    id: 2
    interfaces:
    - bridge: input_6
      ifindex: 1
      ifname: eth1
      ipv4: 172.16.0.2/24
      linkindex: 6
      mtu: 1500
      name: h1 -> [s1,s2,h2]
      neighbors:
      - ifname: Vlan1000
        node: s1
      - ifname: Vlan1000
        node: s2
      - ifname: eth1
        ipv4: 172.16.0.3/24
        node: h2
      type: lan
    mgmt:
      ifname: eth0
      ipv4: 192.168.121.102
      mac: 08:4f:a9:00:00:02
    mtu: 1500
    name: h1
    provider: clab
    role: host
  h2:
    af:
      ipv4: true
    box: python:3.9-alpine
    clab:
      binds:
      - clab_files/h2/hosts:/etc/hosts
      config_templates:
      - hosts:/etc/hosts
      kind: linux
    device: linux
    hostname: clab-input-h2
    id: 3
    interfaces:
    - bridge: input_7
      ifindex: 1
      ifname: eth1
      ipv4: 172.16.0.3/24
      linkindex: 7
      mtu: 1500
      name: h2 -> [h1,s1,s2]
      neighbors:
      - ifname: eth1
        ipv4: 172.16.0.2/24
        node: h1
      - ifname: Vlan1000
        node: s1
      - ifname: Vlan1000
        node: s2
      type: lan
    mgmt:
      ifname: eth0
      ipv4: 192.168.121.103
      mac: 08:4f:a9:00:00:03
    mtu: 1500
    name: h2
    provider: clab
    role: host
  h3:
    af:
      ipv4: true
    box: python:3.9-alpine
    clab:
      binds:
      - clab_files/h3/hosts:/etc/hosts
      config_templates:
      - hosts:/etc/hosts
      kind: linux
    device: linux
    hostname: clab-input-h3
    id: 4
    interfaces:
    - bridge: input_8
      ifindex: 1
      ifname: eth1
      ipv4: 172.16.1.4/24
      linkindex: 8
      mtu: 1500
      name: h3 -> [s1,s2]
      neighbors:
      - ifname: Vlan1001
        node: s1
      - ifname: Vlan1001
        node: s2
      type: lan
    mgmt:
      ifname: eth0
      ipv4: 192.168.121.104
      mac: 08:4f:a9:00:00:04
    mtu: 1500
    name: h3
    provider: clab
    role: host
  h4:
    af:
      ipv4: true
    box: python:3.9-alpine
    clab:
      binds:
      - clab_files/h4/hosts:/etc/hosts
      config_templates:
      - hosts:/etc/hosts
      kind: linux
    device: linux
    hostname: clab-input-h4
    id: 5
    interfaces:
    - bridge: input_9
      ifindex: 1
      ifname: eth1
      ipv4: 172.16.2.5/24
      linkindex: 9
      mtu: 1500
      name: h4 -> [s2,s3]
      neighbors:
      - ifname: Vlan1002
        node: s2
      - ifname: Vlan1002
        node: s3
      type: lan
    mgmt:
      ifname: eth0
      ipv4: 192.168.121.105
      mac: 08:4f:a9:00:00:05
    mtu: 1500
    name: h4
    provider: clab
    role: host
  s1:
    af:
      ipv4: true
    box: arista/veos
    device: eos
    id: 6
    interfaces:
    - ifindex: 1
      ifname: Ethernet1
      linkindex: 1
      name: port_type network configured on link
      neighbors:
      - ifname: Ethernet1
        node: s2
      stp:
        port_type: network
      type: p2p
      vlan:
        trunk:
          blue: {}
          red: {}
        trunk_id:
        - 1000
        - 1001
    - ifindex: 2
      ifname: Ethernet2
      ipv4: 10.1.0.1/30
      linkindex: 2
      name: no port_type on IP interface
      neighbors:
      - ifname: Ethernet1
        ipv4: 10.1.0.2/30
        node: s3
      type: p2p
    - ifindex: 3
      ifname: Ethernet3
      linkindex: 3
      name: Inherit node port_type on L2 interface
      neighbors:
      - ifname: Ethernet2
        node: s3
      type: p2p
    - ifindex: 4
      ifname: Ethernet4
      linkindex: 5
      name: port_type on l2 interface override node
      neighbors:
      - ifname: Ethernet4
        node: s3
      type: p2p
    - bridge: input_6
      ifindex: 5
      ifname: Ethernet5
      linkindex: 6
      name: '[Access VLAN red] s1 -> h1'
      neighbors:
      - ifname: eth1
        ipv4: 172.16.0.2/24
        node: h1
      stp:
        port_type: edge
      type: lan
      vlan:
        access: red
        access_id: 1000
    - bridge: input_8
      ifindex: 6
      ifname: Ethernet6
      linkindex: 8
      name: '[Access VLAN blue] s1 -> h3'
      neighbors:
      - ifname: eth1
        ipv4: 172.16.1.4/24
        node: h3
      stp:
        port_type: edge
      type: lan
      vlan:
        access: blue
        access_id: 1001
    - bridge_group: 1
      ifindex: 40000
      ifname: Vlan1000
      name: VLAN red (1000) -> [h1,s2,h2]
      neighbors:
      - ifname: eth1
        ipv4: 172.16.0.2/24
        node: h1
      - ifname: Vlan1000
        node: s2
      - ifname: eth1
        ipv4: 172.16.0.3/24
        node: h2
      type: svi
      virtual_interface: true
      vlan:
        mode: bridge
        name: red
    - bridge_group: 2
      ifindex: 40001
      ifname: Vlan1001
      name: VLAN blue (1001) -> [h3,s2]
      neighbors:
      - ifname: eth1
        ipv4: 172.16.1.4/24
        node: h3
      - ifname: Vlan1001
        node: s2
      type: svi
      virtual_interface: true
      vlan:
        mode: bridge
        name: blue
    loopback:
      ifindex: 0
      ifname: Loopback0
      ipv4: 10.0.0.6/32
      neighbors: []
      type: loopback
      virtual_interface: true
    mgmt:
      ifname: Management1
      ipv4: 192.168.121.106
      mac: 08:4f:a9:00:00:06
    module:
    - vlan
    - stp
    name: s1
    stp:
      enable: true
      protocol: stp
    vlan:
      max_bridge_group: 2
    vlans:
      blue:
        bridge_group: 2
        id: 1001
        mode: bridge
        prefix:
          allocation: id_based
          ipv4: 172.16.1.0/24
      red:
        bridge_group: 1
        id: 1000
        mode: bridge
        prefix:
          allocation: id_based
          ipv4: 172.16.0.0/24
  s2:
    af:
      ipv4: true
    box: arista/veos
    device: eos
    id: 7
    interfaces:
    - ifindex: 1
      ifname: Ethernet1
      linkindex: 1
      name: port_type network configured on link
      neighbors:
      - ifname: Ethernet1
        node: s1
      stp:
        port_type: network
      type: p2p
      vlan:
        trunk:
          blue: {}
          red: {}
        trunk_id:
        - 1000
        - 1001
    - bridge: input_4
      ifindex: 2
      ifname: Ethernet2
      linkindex: 4
      name: '[Access VLAN green] s2 -> s3'
      neighbors:
      - ifname: Ethernet3
        node: s3
      stp:
        port_type: normal
      type: lan
      vlan:
        access: green
        access_id: 1002
    - bridge: input_7
      ifindex: 3
      ifname: Ethernet3
      linkindex: 7
      name: '[Access VLAN red] s2 -> h2'
      neighbors:
      - ifname: eth1
        ipv4: 172.16.0.3/24
        node: h2
      stp:
        port_type: edge
      type: lan
      vlan:
        access: red
        access_id: 1000
    - bridge: input_9
      ifindex: 4
      ifname: Ethernet4
      linkindex: 9
      name: '[Access VLAN green] s2 -> h4'
      neighbors:
      - ifname: eth1
        ipv4: 172.16.2.5/24
        node: h4
      stp:
        port_type: edge
      type: lan
      vlan:
        access: green
        access_id: 1002
    - bridge_group: 1
      ifindex: 40000
      ifname: Vlan1002
      name: VLAN green (1002) -> [s3,h4]
      neighbors:
      - ifname: Vlan1002
        node: s3
      - ifname: eth1
        ipv4: 172.16.2.5/24
        node: h4
      type: svi
      virtual_interface: true
      vlan:
        mode: bridge
        name: green
    - bridge_group: 2
      ifindex: 40001
      ifname: Vlan1000
      name: VLAN red (1000) -> [h1,s1,h2]
      neighbors:
      - ifname: eth1
        ipv4: 172.16.0.2/24
        node: h1
      - ifname: Vlan1000
        node: s1
      - ifname: eth1
        ipv4: 172.16.0.3/24
        node: h2
      type: svi
      virtual_interface: true
      vlan:
        mode: bridge
        name: red
    - bridge_group: 3
      ifindex: 40002
      ifname: Vlan1001
      name: VLAN blue (1001) -> [h3,s1]
      neighbors:
      - ifname: eth1
        ipv4: 172.16.1.4/24
        node: h3
      - ifname: Vlan1001
        node: s1
      type: svi
      virtual_interface: true
      vlan:
        mode: bridge
        name: blue
    loopback:
      ifindex: 0
      ifname: Loopback0
      ipv4: 10.0.0.7/32
      neighbors: []
      type: loopback
      virtual_interface: true
    mgmt:
      ifname: Management1
      ipv4: 192.168.121.107
      mac: 08:4f:a9:00:00:07
    module:
    - vlan
    - stp
    name: s2
    stp:
      enable: true
      protocol: stp
    vlan:
      max_bridge_group: 3
    vlans:
      blue:
        bridge_group: 3
        id: 1001
        mode: bridge
        prefix:
          allocation: id_based
          ipv4: 172.16.1.0/24
      green:
        bridge_group: 1
        id: 1002
        mode: bridge
        prefix:
          allocation: id_based
          ipv4: 172.16.2.0/24
        stp:
          port_type: normal
      red:
        bridge_group: 2
        id: 1000
        mode: bridge
        prefix:
          allocation: id_based
          ipv4: 172.16.0.0/24
  s3:
    af:
      ipv4: true
    box: arista/veos
    device: eos
    id: 1
    interfaces:
    - ifindex: 1
      ifname: Ethernet1
      ipv4: 10.1.0.2/30
      linkindex: 2
      name: no port_type on IP interface
      neighbors:
      - ifname: Ethernet2
        ipv4: 10.1.0.1/30
        node: s1
      type: p2p
    - ifindex: 2
      ifname: Ethernet2
      linkindex: 3
      name: Inherit node port_type on L2 interface
      neighbors:
      - ifname: Ethernet3
        node: s1
      stp:
        port_type: edge
      type: p2p
    - bridge: input_4
      ifindex: 3
      ifname: Ethernet3
      linkindex: 4
      name: '[Access VLAN green] s3 -> s2'
      neighbors:
      - ifname: Ethernet2
        node: s2
      stp:
        port_type: normal
      type: lan
      vlan:
        access: green
        access_id: 1002
    - ifindex: 4
      ifname: Ethernet4
      linkindex: 5
      name: port_type on l2 interface override node
      neighbors:
      - ifname: Ethernet4
        node: s1
      stp:
        port_type: auto
      type: p2p
    - bridge_group: 1
      ifindex: 40000
      ifname: Vlan1002
      name: VLAN green (1002) -> [s2,h4]
      neighbors:
      - ifname: Vlan1002
        node: s2
      - ifname: eth1
        ipv4: 172.16.2.5/24
        node: h4
      type: svi
      virtual_interface: true
      vlan:
        mode: bridge
        name: green
    loopback:
      ifindex: 0
      ifname: Loopback0
      ipv4: 10.0.0.1/32
      neighbors: []
      type: loopback
      virtual_interface: true
    mgmt:
      ifname: Management1
      ipv4: 192.168.121.101
      mac: 08:4f:a9:00:00:01
    module:
    - vlan
    - stp
    name: s3
    stp:
      enable: true
      port_type: edge
      protocol: stp
    vlan:
      max_bridge_group: 1
    vlans:
      green:
        bridge_group: 1
        id: 1002
        mode: bridge
        prefix:
          allocation: id_based
          ipv4: 172.16.2.0/24
        stp:
          port_type: normal
provider: libvirt
stp:
  enable: true
  protocol: stp
  stub_port_type: edge
validate:
- description: Ping-based reachability test in VLAN red
  name: ping_red
  nodes:
  - h1
  plugin: ping('h2')
  wait: 45
  wait_msg: Waiting for STP to enable the ports
- description: Ping-based reachability test in VLAN blue
  name: ping_blue
  nodes:
  - h3
  plugin: ping('h4')
- description: Ping-based reachability test between blue and red VLANs
  name: inter_vlan
  nodes:
  - h1
  plugin: ping('h3',expect='fail')
vlans:
  blue:
    host_count: 1
    id: 1001
    mode: bridge
    neighbors:
    - ifname: eth1
      ipv4: 172.16.1.4/24
      node: h3
    - ifname: Vlan1001
      node: s1
    - ifname: Vlan1001
      node: s2
    prefix:
      allocation: id_based
      ipv4: 172.16.1.0/24
  green:
    host_count: 1
    id: 1002
    mode: bridge
    neighbors:
    - ifname: Vlan1002
      node: s2
    - ifname: Vlan1002
      node: s3
    - ifname: eth1
      ipv4: 172.16.2.5/24
      node: h4
    prefix:
      allocation: id_based
      ipv4: 172.16.2.0/24
    stp:
      port_type: normal
  red:
    host_count: 2
    id: 1000
    mode: bridge
    neighbors:
    - ifname: eth1
      ipv4: 172.16.0.2/24
      node: h1
    - ifname: Vlan1000
      node: s1
    - ifname: Vlan1000
      node: s2
    - ifname: eth1
      ipv4: 172.16.0.3/24
      node: h2
    prefix:
      allocation: id_based
      ipv4: 172.16.0.0/24
