bgp:
  advertise_loopback: true
  as: 65000
  community:
    ebgp:
    - standard
    ibgp:
    - standard
    - extended
  next_hop_self: true
evpn:
  session:
  - ibgp
  vlans:
  - red
  - blue
  vrfs:
  - tenant
groups:
  as65000:
    members:
    - s1
    - s2
  hosts:
    device: linux
    members:
    - h1
    - h2
    - h3
    - h4
    module: []
  switches:
    device: eos
    members:
    - s1
    - s2
    node_data:
      vlans:
        blue: {}
        red: {}
input:
- topology/input/evpn-asymmetric-irb-ospf.yml
- package:topology-defaults.yml
links:
- bridge: input_1
  gateway:
    ipv4: 172.16.0.1/24
  interfaces:
  - ifindex: 1
    ifname: eth1
    ipv4: 172.16.0.3/24
    node: h1
  - _vlan_mode: irb
    ifindex: 1
    ifname: Ethernet1
    ipv4: 172.16.0.1/24
    node: s1
    vlan:
      access: red
  linkindex: 1
  node_count: 2
  prefix:
    allocation: id_based
    ipv4: 172.16.0.0/24
  type: lan
  vrf: tenant
- bridge: input_2
  gateway:
    ipv4: 172.16.1.2/24
  interfaces:
  - ifindex: 1
    ifname: eth1
    ipv4: 172.16.1.4/24
    node: h2
  - _vlan_mode: irb
    ifindex: 1
    ifname: Ethernet1
    ipv4: 172.16.1.2/24
    node: s2
    vlan:
      access: blue
  linkindex: 2
  node_count: 2
  prefix:
    allocation: id_based
    ipv4: 172.16.1.0/24
  type: lan
  vrf: tenant
- bridge: input_3
  gateway:
    ipv4: 172.16.2.1/24
  interfaces:
  - ifindex: 1
    ifname: eth1
    ipv4: 172.16.2.5/24
    node: h3
  - _vlan_mode: irb
    ifindex: 2
    ifname: Ethernet2
    ipv4: 172.16.2.1/24
    node: s1
    vlan:
      access: green
  linkindex: 3
  node_count: 2
  prefix:
    allocation: id_based
    ipv4: 172.16.2.0/24
  type: lan
  vrf: tenant
- bridge: input_4
  gateway:
    ipv4: 172.16.3.2/24
  interfaces:
  - ifindex: 1
    ifname: eth1
    ipv4: 172.16.3.6/24
    node: h4
  - _vlan_mode: irb
    ifindex: 2
    ifname: Ethernet2
    ipv4: 172.16.3.2/24
    node: s2
    vlan:
      access: purple
  linkindex: 4
  node_count: 2
  prefix:
    allocation: id_based
    ipv4: 172.16.3.0/24
  type: lan
  vrf: tenant
- interfaces:
  - ifindex: 3
    ifname: Ethernet3
    ipv4: 10.1.0.1/30
    node: s1
  - ifindex: 3
    ifname: Ethernet3
    ipv4: 10.1.0.2/30
    node: s2
  linkindex: 5
  node_count: 2
  prefix:
    ipv4: 10.1.0.0/30
  type: p2p
message: "The devices under test are VLAN-to-VXLAN routers using asymmetric IRB\n\
  with EVPN control plane and running OSPF within the VRF to exchange\ninformation\
  \ about non-EVPN subnets. Run this test case after the \n'vxlan-asymmetric-irb'\
  \ test case.\n\nAll hosts should be able to ping each other\n"
module:
- vlan
- bgp
- ospf
- vrf
- vxlan
- evpn
name: input
nodes:
  h1:
    af:
      ipv4: true
    box: generic/ubuntu2004
    device: linux
    id: 3
    interfaces:
    - bridge: input_1
      gateway:
        ipv4: 172.16.0.1/24
      ifindex: 1
      ifname: eth1
      ipv4: 172.16.0.3/24
      linkindex: 1
      name: h1 -> [s1,s2]
      neighbors:
      - ifname: Vlan1000
        ipv4: 172.16.0.1/24
        node: s1
      - ifname: Vlan1000
        ipv4: 172.16.0.2/24
        node: s2
      type: lan
    mgmt:
      ifname: eth0
      ipv4: 192.168.121.103
      mac: 08:4f:a9:00:00:03
    module: []
    name: h1
    role: host
  h2:
    af:
      ipv4: true
    box: generic/ubuntu2004
    device: linux
    id: 4
    interfaces:
    - bridge: input_2
      gateway:
        ipv4: 172.16.1.2/24
      ifindex: 1
      ifname: eth1
      ipv4: 172.16.1.4/24
      linkindex: 2
      name: h2 -> [s1,s2]
      neighbors:
      - ifname: Vlan1001
        ipv4: 172.16.1.1/24
        node: s1
      - ifname: Vlan1001
        ipv4: 172.16.1.2/24
        node: s2
      type: lan
    mgmt:
      ifname: eth0
      ipv4: 192.168.121.104
      mac: 08:4f:a9:00:00:04
    module: []
    name: h2
    role: host
  h3:
    af:
      ipv4: true
    box: generic/ubuntu2004
    device: linux
    id: 5
    interfaces:
    - bridge: input_3
      gateway:
        ipv4: 172.16.2.1/24
      ifindex: 1
      ifname: eth1
      ipv4: 172.16.2.5/24
      linkindex: 3
      name: h3 -> [s1]
      neighbors:
      - ifname: Vlan1002
        ipv4: 172.16.2.1/24
        node: s1
      role: stub
      type: lan
    mgmt:
      ifname: eth0
      ipv4: 192.168.121.105
      mac: 08:4f:a9:00:00:05
    module: []
    name: h3
    role: host
  h4:
    af:
      ipv4: true
    box: generic/ubuntu2004
    device: linux
    id: 6
    interfaces:
    - bridge: input_4
      gateway:
        ipv4: 172.16.3.2/24
      ifindex: 1
      ifname: eth1
      ipv4: 172.16.3.6/24
      linkindex: 4
      name: h4 -> [s2]
      neighbors:
      - ifname: Vlan1003
        ipv4: 172.16.3.2/24
        node: s2
      role: stub
      type: lan
    mgmt:
      ifname: eth0
      ipv4: 192.168.121.106
      mac: 08:4f:a9:00:00:06
    module: []
    name: h4
    role: host
  s1:
    af:
      ipv4: true
      vpnv4: true
    bgp:
      advertise_loopback: true
      as: 65000
      community:
        ebgp:
        - standard
        ibgp:
        - standard
        - extended
      ipv4: true
      neighbors:
      - activate:
          ipv4: true
        as: 65000
        evpn: true
        ipv4: 10.0.0.2
        name: s2
        type: ibgp
      next_hop_self: true
      router_id: 10.0.0.1
    box: arista/veos
    device: eos
    evpn:
      session:
      - ibgp
      vlans:
      - red
      - blue
      vrfs:
      - tenant
    id: 1
    interfaces:
    - bridge: input_1
      ifindex: 1
      ifname: Ethernet1
      linkindex: 1
      type: lan
      vlan:
        access: red
        access_id: 1000
    - bridge: input_3
      ifindex: 2
      ifname: Ethernet2
      linkindex: 3
      type: lan
      vlan:
        access: green
        access_id: 1002
    - ifindex: 3
      ifname: Ethernet3
      ipv4: 10.1.0.1/30
      linkindex: 5
      name: s1 -> s2
      neighbors:
      - ifname: Ethernet3
        ipv4: 10.1.0.2/30
        node: s2
      ospf:
        area: 0.0.0.0
        network_type: point-to-point
        passive: false
      type: p2p
    - bridge_group: 1
      ifindex: 5
      ifname: Vlan1000
      ipv4: 172.16.0.1/24
      name: VLAN red (1000) -> [h1,s2]
      neighbors:
      - ifname: eth1
        ipv4: 172.16.0.3/24
        node: h1
      - ifname: Vlan1000
        ipv4: 172.16.0.2/24
        node: s2
      type: svi
      virtual_interface: true
      vlan:
        mode: irb
      vrf: tenant
    - bgp:
        advertise: true
      bridge_group: 2
      ifindex: 6
      ifname: Vlan1002
      ipv4: 172.16.2.1/24
      name: VLAN green (1002) -> [h3]
      neighbors:
      - ifname: eth1
        ipv4: 172.16.2.5/24
        node: h3
      role: stub
      type: svi
      virtual_interface: true
      vlan:
        mode: irb
      vrf: tenant
    - bridge_group: 3
      ifindex: 7
      ifname: Vlan1001
      ipv4: 172.16.1.1/24
      name: VLAN blue (1001) -> [h2,s2]
      neighbors:
      - ifname: eth1
        ipv4: 172.16.1.4/24
        node: h2
      - ifname: Vlan1001
        ipv4: 172.16.1.2/24
        node: s2
      type: svi
      virtual_interface: true
      vlan:
        mode: irb
      vrf: tenant
    loopback:
      ifindex: 0
      ifname: Loopback0
      ipv4: 10.0.0.1/32
      neighbors: []
      type: loopback
    mgmt:
      ifname: Management1
      ipv4: 192.168.121.101
      mac: 08:4f:a9:00:00:01
    module:
    - vlan
    - bgp
    - ospf
    - vrf
    - vxlan
    - evpn
    name: s1
    ospf:
      af:
        ipv4: true
      area: 0.0.0.0
      router_id: 10.0.0.1
    vlan:
      max_bridge_group: 3
    vlans:
      blue:
        bridge_group: 3
        evpn:
          bundle: vlan_aware
          evi: 1
          rd: 10.0.0.1:1
        id: 1001
        mode: irb
        prefix:
          allocation: id_based
          ipv4: 172.16.1.0/24
        vni: 101001
        vrf: tenant
      green:
        bridge_group: 2
        id: 1002
        mode: irb
        prefix:
          allocation: id_based
          ipv4: 172.16.2.0/24
        vrf: tenant
      red:
        bridge_group: 1
        evpn:
          bundle: vlan_aware
          evi: 1
          rd: 10.0.0.1:1
        id: 1000
        mode: irb
        prefix:
          allocation: id_based
          ipv4: 172.16.0.0/24
        vni: 101000
        vrf: tenant
    vrf:
      as: 65000
    vrfs:
      tenant:
        af:
          ipv4: true
        evpn:
          bundle: vlan_aware
          evi: 1
          rd: 10.0.0.1:1
          vlan_ids:
          - 1000
          - 1001
          vlans:
          - red
          - blue
        export:
        - '65000:1'
        id: 1
        import:
        - '65000:1'
        ospf:
          active: true
          area: 0.0.0.0
          interfaces:
          - bridge_group: 1
            ifindex: 5
            ifname: Vlan1000
            ipv4: 172.16.0.1/24
            name: VLAN red (1000) -> [h1,s2]
            neighbors:
            - ifname: eth1
              ipv4: 172.16.0.3/24
              node: h1
            - ifname: Vlan1000
              ipv4: 172.16.0.2/24
              node: s2
            ospf:
              area: 0.0.0.0
              passive: false
            type: svi
            virtual_interface: true
            vlan:
              mode: irb
            vrf: tenant
          - bgp:
              advertise: true
            bridge_group: 2
            ifindex: 6
            ifname: Vlan1002
            ipv4: 172.16.2.1/24
            name: VLAN green (1002) -> [h3]
            neighbors:
            - ifname: eth1
              ipv4: 172.16.2.5/24
              node: h3
            ospf:
              area: 0.0.0.0
              network_type: point-to-point
              passive: true
            role: stub
            type: svi
            virtual_interface: true
            vlan:
              mode: irb
            vrf: tenant
          - bridge_group: 3
            ifindex: 7
            ifname: Vlan1001
            ipv4: 172.16.1.1/24
            name: VLAN blue (1001) -> [h2,s2]
            neighbors:
            - ifname: eth1
              ipv4: 172.16.1.4/24
              node: h2
            - ifname: Vlan1001
              ipv4: 172.16.1.2/24
              node: s2
            ospf:
              area: 0.0.0.0
              passive: false
            type: svi
            virtual_interface: true
            vlan:
              mode: irb
            vrf: tenant
          router_id: 10.0.0.1
        rd: '65000:1'
        vrfidx: 100
    vxlan:
      domain: global
      flooding: evpn
      vlans:
      - red
      - blue
      vtep: 10.0.0.1
      vtep_interface: Loopback0
  s2:
    af:
      ipv4: true
      vpnv4: true
    bgp:
      advertise_loopback: true
      as: 65000
      community:
        ebgp:
        - standard
        ibgp:
        - standard
        - extended
      ipv4: true
      neighbors:
      - activate:
          ipv4: true
        as: 65000
        evpn: true
        ipv4: 10.0.0.1
        name: s1
        type: ibgp
      next_hop_self: true
      router_id: 10.0.0.2
    box: arista/veos
    device: eos
    evpn:
      session:
      - ibgp
      vlans:
      - red
      - blue
      vrfs:
      - tenant
    id: 2
    interfaces:
    - bridge: input_2
      ifindex: 1
      ifname: Ethernet1
      linkindex: 2
      type: lan
      vlan:
        access: blue
        access_id: 1001
    - bridge: input_4
      ifindex: 2
      ifname: Ethernet2
      linkindex: 4
      type: lan
      vlan:
        access: purple
        access_id: 1003
    - ifindex: 3
      ifname: Ethernet3
      ipv4: 10.1.0.2/30
      linkindex: 5
      name: s2 -> s1
      neighbors:
      - ifname: Ethernet3
        ipv4: 10.1.0.1/30
        node: s1
      ospf:
        area: 0.0.0.0
        network_type: point-to-point
        passive: false
      type: p2p
    - bridge_group: 1
      ifindex: 5
      ifname: Vlan1001
      ipv4: 172.16.1.2/24
      name: VLAN blue (1001) -> [s1,h2]
      neighbors:
      - ifname: Vlan1001
        ipv4: 172.16.1.1/24
        node: s1
      - ifname: eth1
        ipv4: 172.16.1.4/24
        node: h2
      type: svi
      virtual_interface: true
      vlan:
        mode: irb
      vrf: tenant
    - bgp:
        advertise: true
      bridge_group: 2
      ifindex: 6
      ifname: Vlan1003
      ipv4: 172.16.3.2/24
      name: VLAN purple (1003) -> [h4]
      neighbors:
      - ifname: eth1
        ipv4: 172.16.3.6/24
        node: h4
      role: stub
      type: svi
      virtual_interface: true
      vlan:
        mode: irb
      vrf: tenant
    - bridge_group: 3
      ifindex: 7
      ifname: Vlan1000
      ipv4: 172.16.0.2/24
      name: VLAN red (1000) -> [h1,s1]
      neighbors:
      - ifname: eth1
        ipv4: 172.16.0.3/24
        node: h1
      - ifname: Vlan1000
        ipv4: 172.16.0.1/24
        node: s1
      type: svi
      virtual_interface: true
      vlan:
        mode: irb
      vrf: tenant
    loopback:
      ifindex: 0
      ifname: Loopback0
      ipv4: 10.0.0.2/32
      neighbors: []
      type: loopback
    mgmt:
      ifname: Management1
      ipv4: 192.168.121.102
      mac: 08:4f:a9:00:00:02
    module:
    - vlan
    - bgp
    - ospf
    - vrf
    - vxlan
    - evpn
    name: s2
    ospf:
      af:
        ipv4: true
      area: 0.0.0.0
      router_id: 10.0.0.2
    vlan:
      max_bridge_group: 3
    vlans:
      blue:
        bridge_group: 1
        evpn:
          bundle: vlan_aware
          evi: 1
          rd: 10.0.0.2:1
        id: 1001
        mode: irb
        prefix:
          allocation: id_based
          ipv4: 172.16.1.0/24
        vni: 101001
        vrf: tenant
      purple:
        bridge_group: 2
        id: 1003
        mode: irb
        prefix:
          allocation: id_based
          ipv4: 172.16.3.0/24
        vrf: tenant
      red:
        bridge_group: 3
        evpn:
          bundle: vlan_aware
          evi: 1
          rd: 10.0.0.2:1
        id: 1000
        mode: irb
        prefix:
          allocation: id_based
          ipv4: 172.16.0.0/24
        vni: 101000
        vrf: tenant
    vrf:
      as: 65000
    vrfs:
      tenant:
        af:
          ipv4: true
        evpn:
          bundle: vlan_aware
          evi: 1
          rd: 10.0.0.2:1
          vlan_ids:
          - 1000
          - 1001
          vlans:
          - red
          - blue
        export:
        - '65000:1'
        id: 1
        import:
        - '65000:1'
        ospf:
          active: true
          area: 0.0.0.0
          interfaces:
          - bridge_group: 1
            ifindex: 5
            ifname: Vlan1001
            ipv4: 172.16.1.2/24
            name: VLAN blue (1001) -> [s1,h2]
            neighbors:
            - ifname: Vlan1001
              ipv4: 172.16.1.1/24
              node: s1
            - ifname: eth1
              ipv4: 172.16.1.4/24
              node: h2
            ospf:
              area: 0.0.0.0
              passive: false
            type: svi
            virtual_interface: true
            vlan:
              mode: irb
            vrf: tenant
          - bgp:
              advertise: true
            bridge_group: 2
            ifindex: 6
            ifname: Vlan1003
            ipv4: 172.16.3.2/24
            name: VLAN purple (1003) -> [h4]
            neighbors:
            - ifname: eth1
              ipv4: 172.16.3.6/24
              node: h4
            ospf:
              area: 0.0.0.0
              network_type: point-to-point
              passive: true
            role: stub
            type: svi
            virtual_interface: true
            vlan:
              mode: irb
            vrf: tenant
          - bridge_group: 3
            ifindex: 7
            ifname: Vlan1000
            ipv4: 172.16.0.2/24
            name: VLAN red (1000) -> [h1,s1]
            neighbors:
            - ifname: eth1
              ipv4: 172.16.0.3/24
              node: h1
            - ifname: Vlan1000
              ipv4: 172.16.0.1/24
              node: s1
            ospf:
              area: 0.0.0.0
              passive: false
            type: svi
            virtual_interface: true
            vlan:
              mode: irb
            vrf: tenant
          router_id: 10.0.0.2
        rd: '65000:1'
        vrfidx: 100
    vxlan:
      domain: global
      flooding: evpn
      vlans:
      - red
      - blue
      vtep: 10.0.0.2
      vtep_interface: Loopback0
ospf:
  area: 0.0.0.0
provider: libvirt
vlans:
  blue:
    evpn:
      bundle: vlan_aware
      evi: 1
    host_count: 1
    id: 1001
    neighbors:
    - ifname: Vlan1001
      ipv4: 172.16.1.1/24
      node: s1
    - ifname: eth1
      ipv4: 172.16.1.4/24
      node: h2
    - ifname: Vlan1001
      ipv4: 172.16.1.2/24
      node: s2
    prefix:
      allocation: id_based
      ipv4: 172.16.1.0/24
    vni: 101001
    vrf: tenant
  green:
    host_count: 1
    id: 1002
    neighbors:
    - ifname: eth1
      ipv4: 172.16.2.5/24
      node: h3
    - ifname: Vlan1002
      ipv4: 172.16.2.1/24
      node: s1
    prefix:
      allocation: id_based
      ipv4: 172.16.2.0/24
    vrf: tenant
  purple:
    host_count: 1
    id: 1003
    neighbors:
    - ifname: eth1
      ipv4: 172.16.3.6/24
      node: h4
    - ifname: Vlan1003
      ipv4: 172.16.3.2/24
      node: s2
    prefix:
      allocation: id_based
      ipv4: 172.16.3.0/24
    vrf: tenant
  red:
    evpn:
      bundle: vlan_aware
      evi: 1
    host_count: 1
    id: 1000
    neighbors:
    - ifname: eth1
      ipv4: 172.16.0.3/24
      node: h1
    - ifname: Vlan1000
      ipv4: 172.16.0.1/24
      node: s1
    - ifname: Vlan1000
      ipv4: 172.16.0.2/24
      node: s2
    prefix:
      allocation: id_based
      ipv4: 172.16.0.0/24
    vni: 101000
    vrf: tenant
vrf:
  as: 65000
vrfs:
  tenant:
    evpn:
      bundle: vlan_aware
      evi: 1
      vlan_ids:
      - 1000
      - 1001
      vlans:
      - red
      - blue
    export:
    - '65000:1'
    id: 1
    import:
    - '65000:1'
    rd: '65000:1'
vxlan:
  domain: global
  flooding: evpn
  use_v6_vtep: false
  vlans:
  - red
  - blue
