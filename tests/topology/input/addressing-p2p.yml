#
# Tons of addressing test cases
#
addressing:
  # Use a standard pool and remove IPv4 attribute
  lan:                      
    ipv4:
    ipv6: 2001:db8:1::/48
  # Use a standard pool and make it unnumbered
  p2p:
    ipv4: True
  # Unnumbered pool
  unnumbered:
    unnumbered: True
  v6only:
    ipv6: 2001:db8:2::/48
  dualstack:
    ipv4: 172.17.0.0/16
    prefix: 29
    ipv6: 2001:db8:3::/48
    type: p2p
  l2only:

defaults.device: cumulus

# Create a few nodes with non-default IDs just for fun
nodes:
  r1:
    id: 7
  r2:
    id: 21
  r3:
    id: 42
  r4:

# And now the real work starts
links:
- name: Standard P2P link (IPv4-only unnumbered)
  r1:
  r2:

- name: IPv4-only unnumbered link with static IPv4 and IPv6 addresses
  r1:
    ipv4: 10.42.42.18/32
  r2:
    ipv6: 2001:db8:42:44::1/64

- name: P2P unnumbered link (using unnumbered attribute)
  r1:
  r2:
  role: unnumbered

- name: P2P v6only link
  r1:
  r2:
  role: v6only

- name: P2P dual-stack link with non-standard prefix length
  r1:
  r2:
  role: dualstack

- name: P2P L2only link
  r1:
  r2:
  role: l2only

- name: P2P link with custom node IDs
  r1:
    ipv4: 3
    ipv6: 7
  r2:
    ipv4: 2
    ipv6: 42
  role: dualstack

- name: P2P link with one unnumbered node
  r1:
    ipv4: True
  r2:
    ipv6: True
  role: dualstack

- name: P2P l2only link with a static IP address
  r1:
    ipv4: 10.0.0.1/30
  r2:
  role: l2only

- name: l2only P2P link
  r1:
  r2:
    ipv4: 10.42.42.17/32
  prefix: False

- name: P2P link with static prefix
  r1:
  r2:
  prefix: 172.42.42.0/28

- name: P2P link with static dual-stack prefix
  r1:
  r2:
  prefix:
    ipv4: 172.42.42.16/28
    ipv6: 2001:db8:42:42::/64

- name: P2P link with unnumbered static prefix
  r1:
  r2:
  prefix:
    ipv4: True
    ipv6: 2001:db8:42:43::/64

- name: Host addresses on a P2P link (useless but should work)
  r1:
    ipv4: 10.42.42.18/32
  r2:
    ipv6: 2001:db8:42:44::1/128
