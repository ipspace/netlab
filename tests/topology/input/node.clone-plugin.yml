---
plugin: [ node.clone ]

module: [lag,vlan,vrf]

vlans:
 red:
  links: [r-h]  # VLAN links get updated

vrfs:
 red:
  links: [r-h]  # VRF links get updated

groups:
 _auto_create: True   # Test presence of bool flag
 
 hosts:
  members: [h,host_w_long_name]  # Gets updated with cloned nodes

 lag-routers:
  members: [r1,r2]    # Devices that supports (m)lag
  device: eos
  module: [vlan,lag]

nodes:
 r:
  device: frr
  module: [vlan,vrf]

 h:                   # Short name, regular test
  device: frr
  clone:
   count: 2
   start: 3           # Create h-03 and h-07
   step: 4

 host_w_long_name:    # Test that node names get shortened to at most 16 chars
  device: linux
  clone.count: 3      # Create 3 hosts
  id: 10              # Starting at ID 10

 laghost:             # Host for lag tests
  device: frr
  module: [lag]
  clone.count: 2

links:
- r-host_w_long_name  # Plugin supports different styles of specifying links, all normalized
- r:
    ifindex: 16       # Custom port on router -> gets incremented
  h:
    mtu: 1600         # Interface atts get copied too

# lag test cases
- lag:
   members: [r1-r2]
   mlag.peergroup: True
- lag:
   members: [ r1-laghost, r1-laghost ]
   ifindex: 8         # Custom lag.ifindex, gets incremented for each clone
  pool: l2only
- lag:
   members: 
   - r2:
      ifindex: 6      # Custom ifindex on interface, gets incremented for each clone
     laghost:
   - r2:
      ifindex: 7
     laghost:
  pool: l2only
- lag:
   members: [ laghost-r1, laghost-r2 ] # mlag
  vlan.access: red
