/home/pipi/.local/lib/python3.10/site-packages/paramiko/pkey.py:100: CryptographyDeprecationWarning: TripleDES has been moved to cryptography.hazmat.decrepit.ciphers.algorithms.TripleDES and will be removed from cryptography.hazmat.primitives.ciphers.algorithms in 48.0.0.
  "cipher": algorithms.TripleDES,
/home/pipi/.local/lib/python3.10/site-packages/paramiko/transport.py:259: CryptographyDeprecationWarning: TripleDES has been moved to cryptography.hazmat.decrepit.ciphers.algorithms.TripleDES and will be removed from cryptography.hazmat.primitives.ciphers.algorithms in 48.0.0.
  "class": algorithms.TripleDES,
[WARNING]: Could not match supplied host pattern, ignoring: unprovisioned
[WARNING]: Found variable using reserved name: hosts

PLAY [Deploy initial device configuration] *************************************

TASK [Set variables that cannot be set with VARS] ******************************
ok: [r]
ok: [h1]
ok: [h2]

TASK [Find device readiness script] ********************************************
ok: [r]
ok: [h1]
ok: [h2]

TASK [Wait for device to become ready] *****************************************
skipping: [r]
skipping: [h1]
skipping: [h2]

TASK [Normalize config on bridge-like devices] *********************************
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-module.yml for r, h1, h2

TASK [Figure out whether to deploy the module normalize on current device] *****
ok: [r]
ok: [h1]
ok: [h2]

TASK [Find configuration template for normalize] *******************************
ok: [r]
ok: [h1]
ok: [h2]

TASK [fail] ********************************************************************
skipping: [r]
skipping: [h1]
skipping: [h2]

TASK [Find configuration deployment deploy_script for normalize] ***************
ok: [r]
ok: [h1]
ok: [h2]

TASK [Print deployed configuration when running in verbose mode] ***************
skipping: [r]
skipping: [h1]
skipping: [h2]

TASK [Deploy normalize configuration] ******************************************
skipping: [r]
skipping: [h1]
skipping: [h2]

TASK [Deploy initial configuration] ********************************************
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-module.yml for r, h1, h2

TASK [Figure out whether to deploy the module initial on current device] *******
ok: [r]
ok: [h1]
ok: [h2]

TASK [Find configuration template for initial] *********************************
ok: [r]
ok: [h1]
ok: [h2]

TASK [fail] ********************************************************************
skipping: [r]
skipping: [h1]
skipping: [h2]

TASK [Find configuration deployment deploy_script for initial] *****************
ok: [r]
ok: [h1]
ok: [h2]

TASK [Print deployed configuration when running in verbose mode] ***************
ok: [r] => 
  msg: |-
    initial configuration for r
    =========================================
    #!/bin/bash
    #
    # This script contains the 'ip' commands needed to set up container
    # interfaces and route table. It's executed within the container
    # network namespace on the container host.
    #
    #  /etc/hosts file is generated as a clab bind.
    #
    set -e
  
    ### One-Shot configuration (non-Ubuntu VM or container)
    #
    # Send ARP requests from a sane source IP address
    sysctl -w net.ipv4.conf.all.arp_announce=2
  
    #
    # Disable IPv4 and IPv6 forwarding
    #
    sysctl -w net.ipv4.ip_forward=0
    sysctl -w net.ipv6.conf.all.forwarding=0
    set +e
    ip addr del 10.0.0.132/32 dev lo 2>/dev/null
    set -e
    ip addr add 10.0.0.132/32 dev lo
    sysctl -w net.ipv6.conf.lo.disable_ipv6=0
    set +e
    ip -6 addr del 2001:db8:0:84::1/64 dev lo 2>/dev/null
    set -e
    ip -6 addr add 2001:db8:0:84::1/64 dev lo
  
  
    #
    # Interface addressing, create any bond devices
    #
    ip link set dev eth1 up
    set +e
    ip addr del 172.16.0.132/24 dev eth1 2>/dev/null
    set -e
    ip addr add 172.16.0.132/24 dev eth1
    sysctl -w net.ipv6.conf.eth1.disable_ipv6=0
    set +e
    ip -6 addr del 2001:db8:1::84/64 dev eth1 2>/dev/null
    set -e
    ip -6 addr add 2001:db8:1::84/64 dev eth1
    ip link set dev eth1 mtu 1500
  
    ip link set dev eth2 up
    set +e
    ip addr del 172.16.1.132/24 dev eth2 2>/dev/null
    set -e
    ip addr add 172.16.1.132/24 dev eth2
    sysctl -w net.ipv6.conf.eth2.disable_ipv6=0
    set +e
    ip -6 addr del 2001:db8:1:1::84/64 dev eth2 2>/dev/null
    set -e
    ip -6 addr add 2001:db8:1:1::84/64 dev eth2
    ip link set dev eth2 mtu 1500
ok: [h1] => 
  msg: |-
    initial configuration for h1
    =========================================
    #!/bin/bash
    #
    # This script contains the 'ip' commands needed to set up container
    # interfaces and route table. It's executed within the container
    # network namespace on the container host.
    #
    #  /etc/hosts file is generated as a clab bind.
    #
    set -e
  
    ### One-Shot configuration (non-Ubuntu VM or container)
    #
    # Send ARP requests from a sane source IP address
    sysctl -w net.ipv4.conf.all.arp_announce=2
  
    #
    # Disable IPv4 and IPv6 forwarding
    #
    sysctl -w net.ipv4.ip_forward=0
    sysctl -w net.ipv6.conf.all.forwarding=0
  
    #
    # Interface addressing, create any bond devices
    #
    ip link set dev eth1 up
    set +e
    ip addr del 172.16.0.1/24 dev eth1 2>/dev/null
    set -e
    ip addr add 172.16.0.1/24 dev eth1
    sysctl -w net.ipv6.conf.eth1.disable_ipv6=0
    set +e
    ip -6 addr del 2001:db8:1::1/64 dev eth1 2>/dev/null
    set -e
    ip -6 addr add 2001:db8:1::1/64 dev eth1
    ip link set dev eth1 mtu 1500
ok: [h2] => 
  msg: |-
    initial configuration for h2
    =========================================
    #!/bin/bash
    #
    # This script contains the 'ip' commands needed to set up container
    # interfaces and route table. It's executed within the container
    # network namespace on the container host.
    #
    #  /etc/hosts file is generated as a clab bind.
    #
    set -e
  
    ### One-Shot configuration (non-Ubuntu VM or container)
    #
    # Send ARP requests from a sane source IP address
    sysctl -w net.ipv4.conf.all.arp_announce=2
  
    #
    # Disable IPv4 and IPv6 forwarding
    #
    sysctl -w net.ipv4.ip_forward=0
    sysctl -w net.ipv6.conf.all.forwarding=0
  
    #
    # Interface addressing, create any bond devices
    #
    ip link set dev eth1 up
    set +e
    ip addr del 172.16.1.2/24 dev eth1 2>/dev/null
    set -e
    ip addr add 172.16.1.2/24 dev eth1
    sysctl -w net.ipv6.conf.eth1.disable_ipv6=0
    set +e
    ip -6 addr del 2001:db8:1:1::2/64 dev eth1 2>/dev/null
    set -e
    ip -6 addr add 2001:db8:1:1::2/64 dev eth1
    ip link set dev eth1 mtu 1500

TASK [Deploy initial configuration] ********************************************
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-config/linux-clab.yml for r, h1, h2

TASK [Define script filename and determine whether to execute in netns] ********
ok: [r]
ok: [h1]
ok: [h2]

TASK [Create a temporary file for the rendered script] *************************
changed: [h1 -> localhost]
changed: [r -> localhost]
changed: [h2 -> localhost]

TASK [Create container setup script from /home/pipi/net101/tools/netsim/ansible/templates/initial/linux-clab.j2] ***
changed: [h2 -> localhost]
changed: [h1 -> localhost]
changed: [r -> localhost]

TASK [Copy script into running container at /tmp/config-r_initial.sh] **********
skipping: [r]
skipping: [h1]
skipping: [h2]

TASK [Execute /tmp/config-r_initial.sh to deploy initial config based on /home/pipi/net101/tools/netsim/ansible/templates/initial/linux-clab.j2] ***
skipping: [r]
skipping: [h1]
skipping: [h2]

TASK [Container configuration for initial based on /home/pipi/net101/tools/netsim/ansible/templates/initial/linux-clab.j2 executed in netns] ***
changed: [h2 -> localhost]
changed: [h1 -> localhost]
changed: [r -> localhost]

TASK [Remove temporary file /tmp/r_initial-_im_ap90.sh] ************************
changed: [h2 -> localhost]
changed: [r -> localhost]
changed: [h1 -> localhost]

PLAY [Deploy module-specific configurations] ***********************************

TASK [Set variables that cannot be set with VARS] ******************************
ok: [r]
ok: [h1]
ok: [h2]

TASK [Deploy individual configuration modules] *********************************
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-module.yml for r, h1, h2 => (item=routing)

TASK [Figure out whether to deploy the module routing on current device] *******
ok: [r]
ok: [h1]
ok: [h2]

TASK [Find configuration template for routing] *********************************
ok: [r]
ok: [h1]
ok: [h2]

TASK [fail] ********************************************************************
skipping: [r]
skipping: [h1]
skipping: [h2]

TASK [Find configuration deployment deploy_script for routing] *****************
ok: [r]
ok: [h1]
ok: [h2]

TASK [Print deployed configuration when running in verbose mode] ***************
ok: [r] => 
  msg: |-
    routing configuration for r
    =========================================
    #!/bin/bash
    #
    # Add static routes (usually IPv4 routes pointing to the first usable gateway)
    #
    #
    #
    #
    #
    #
    # Print the final routing table
    ip route
ok: [h1] => 
  msg: |-
    routing configuration for h1
    =========================================
    #!/bin/bash
    #
    # Add static routes (usually IPv4 routes pointing to the first usable gateway)
    #
    #
    echo Removing existing IPv4 routes
    while ip route del 10.0.0.0/24 2>/dev/null; do
      : ; done
    #
    set +e
    echo Removing existing IPv6 routes
    while ip route del 2001:db8::/48 2>/dev/null; do
      : ; done
    #
    #
    echo Adding direct static routes
    ip route add 10.0.0.0/24 via 172.16.0.132 dev eth1 protocol static
    ip route add 2001:db8::/48 via 2001:db8:1::84 dev eth1 protocol static
    #
    # Print the final routing table
    ip route
ok: [h2] => 
  msg: |-
    routing configuration for h2
    =========================================
    #!/bin/bash
    #
    # Add static routes (usually IPv4 routes pointing to the first usable gateway)
    #
    #
    echo Removing existing IPv4 routes
    while ip route del 10.0.0.0/24 2>/dev/null; do
      : ; done
    #
    set +e
    echo Removing existing IPv6 routes
    while ip route del 2001:db8::/48 2>/dev/null; do
      : ; done
    #
    #
    echo Adding direct static routes
    ip route add 10.0.0.0/24 via 172.16.1.132 dev eth1 protocol static
    ip route add 2001:db8::/48 via 2001:db8:1:1::84 dev eth1 protocol static
    #
    # Print the final routing table
    ip route

TASK [Deploy routing configuration] ********************************************
included: /home/pipi/net101/tools/netsim/ansible/tasks/deploy-config/linux-clab.yml for r, h1, h2

TASK [Define script filename and determine whether to execute in netns] ********
ok: [r]
ok: [h1]
ok: [h2]

TASK [Create a temporary file for the rendered script] *************************
changed: [r -> localhost]
changed: [h1 -> localhost]
changed: [h2 -> localhost]

TASK [Create container setup script from /home/pipi/net101/tools/netsim/ansible/templates/routing/linux-clab.j2] ***
changed: [h1 -> localhost]
changed: [r -> localhost]
changed: [h2 -> localhost]

TASK [Copy script into running container at /tmp/config-r_routing.sh] **********
skipping: [r]
skipping: [h1]
skipping: [h2]

TASK [Execute /tmp/config-r_routing.sh to deploy routing config based on /home/pipi/net101/tools/netsim/ansible/templates/routing/linux-clab.j2] ***
skipping: [r]
skipping: [h1]
skipping: [h2]

TASK [Container configuration for routing based on /home/pipi/net101/tools/netsim/ansible/templates/routing/linux-clab.j2 executed in netns] ***
changed: [r -> localhost]
changed: [h1 -> localhost]
changed: [h2 -> localhost]

TASK [Remove temporary file /tmp/r_routing-_gcdjtx5.sh] ************************
changed: [h1 -> localhost]
changed: [r -> localhost]
changed: [h2 -> localhost]

PLAY [Deploy custom deployment templates] **************************************
skipping: no hosts matched

PLAY RECAP *********************************************************************
h1                         : ok=29   changed=8    unreachable=0    failed=0    skipped=10   rescued=0    ignored=0   
h2                         : ok=29   changed=8    unreachable=0    failed=0    skipped=10   rescued=0    ignored=0   
r                          : ok=29   changed=8    unreachable=0    failed=0    skipped=10   rescued=0    ignored=0   



This scenario tests basic interface, IPv4, and IPv6 configuration, including generation of IPv6 Router Advertisements
